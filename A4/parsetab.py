
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '504AD6C79C4D3B778631B2F680EE5ED5'
    
_lr_action_items = {'VOID':([0,2,3,8,13,26,34,44,50,51,52,55,56,57,59,61,62,110,111,119,120,121,123,136,140,141,],[-5,10,10,-4,10,-46,10,10,10,-45,10,10,-43,10,-44,-6,-30,-51,-52,-65,-68,-64,10,-66,-63,-67,]),'NUMBER':([63,64,67,68,71,75,77,82,84,95,97,99,100,101,102,103,104,105,106,107,108,113,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'WHILE':([26,44,50,51,52,55,56,57,59,62,96,110,111,115,119,120,121,123,136,139,140,141,],[-46,48,48,-45,48,48,-43,48,-44,-30,48,-51,-52,48,-65,-68,-64,48,-66,48,-63,-67,]),'MINUS':([28,29,30,31,40,41,42,63,64,67,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,92,94,95,97,99,100,101,102,103,104,105,106,107,108,109,114,117,125,126,127,128,129,130,131,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,75,75,75,75,-22,-77,-73,75,-76,75,-74,-75,-23,75,108,75,108,108,-79,108,75,75,75,75,75,75,75,75,75,75,75,75,108,-31,-78,108,-72,108,108,108,108,108,-69,-71,-70,]),'RBRACE':([26,44,46,50,51,52,55,56,57,59,62,65,66,69,70,110,111,119,120,121,123,136,137,140,141,],[-46,-42,61,-42,-45,-42,-42,-43,-42,-44,-30,-39,-38,-41,-40,-51,-52,-65,-68,-64,-42,-66,140,-63,-67,]),'COMMENT':([26,44,50,51,52,55,56,57,59,62,110,111,119,120,121,123,136,140,141,],[-46,50,50,-45,50,50,-43,50,-44,-30,-51,-52,-65,-68,-64,50,-66,-63,-67,]),'LE':([28,29,30,31,40,41,42,72,73,74,76,78,79,81,83,92,94,114,117,126,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,-23,105,-79,105,-31,-78,-72,-69,-71,-70,]),'RPAREN':([13,23,24,28,29,30,31,35,36,37,38,39,40,41,42,45,60,68,72,73,74,76,78,79,80,81,87,88,89,90,91,92,93,94,98,109,112,114,116,117,118,124,125,126,127,128,129,130,131,132,133,134,135,138,],[-14,33,-16,-25,-26,-24,-21,-13,-17,-20,-18,-19,-28,-29,-27,-16,-15,-33,-22,-77,-73,-76,-74,-75,96,-23,-36,-35,114,-37,115,-79,116,117,-61,117,-32,-31,-62,-78,-59,-60,-54,-72,-57,-53,-58,-56,-55,-69,-71,-70,-35,-34,]),'SEMICOLON':([14,15,18,20,21,28,29,30,31,40,41,42,43,47,72,73,74,76,78,79,81,85,86,92,96,114,115,117,126,132,133,134,139,],[26,-50,-49,-21,-48,-25,-26,-24,-21,-28,-29,-27,-47,62,-22,-77,-73,-76,-74,-75,-23,110,111,-79,119,-31,119,-78,-72,-69,-71,-70,119,]),'NE':([28,29,30,31,40,41,42,72,73,74,76,78,79,81,83,92,94,114,117,126,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,-23,103,-79,103,-31,-78,-72,-69,-71,-70,]),'LT':([28,29,30,31,40,41,42,72,73,74,76,78,79,81,83,92,94,114,117,126,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,-23,102,-79,102,-31,-78,-72,-69,-71,-70,]),'COMMA':([15,18,20,21,24,28,29,30,31,36,37,38,39,40,41,42,45,72,81,87,88,90,135,],[-50,-49,-21,32,34,-25,-26,-24,-21,-17,-20,-18,-19,-28,-29,-27,34,-22,-23,-36,113,-37,113,]),'PLUS':([28,29,30,31,40,41,42,72,73,74,76,78,79,81,83,85,86,92,94,109,114,117,125,126,127,128,129,130,131,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,-23,106,106,106,-79,106,106,-31,-78,106,-72,106,106,106,106,106,-69,-71,-70,]),'$end':([1,3,4,11,61,],[0,-3,-1,-2,-6,]),'GT':([28,29,30,31,40,41,42,72,73,74,76,78,79,81,83,92,94,114,117,126,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,-23,99,-79,99,-31,-78,-72,-69,-71,-70,]),'DIVIDE':([28,29,30,31,40,41,42,72,73,74,76,78,79,81,83,85,86,92,94,109,114,117,125,126,127,128,129,130,131,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,-23,100,100,100,-79,100,100,-31,-78,100,-72,100,100,100,100,100,100,-71,100,]),'EQUALS':([28,29,30,31,40,41,42,49,53,122,],[-25,-26,-24,-21,-28,-29,-27,64,67,67,]),'TIMES':([5,7,9,10,16,25,26,27,28,29,30,31,32,40,41,42,44,50,51,52,54,55,56,57,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,92,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,117,119,120,121,123,125,126,127,128,129,130,131,132,133,134,136,139,140,141,],[-8,-10,16,-9,16,16,-46,16,-25,-26,-24,-21,16,-28,-29,-27,16,16,-45,16,16,16,-43,16,-44,-30,16,16,16,16,16,-22,-77,-73,16,-76,16,-74,-75,-23,16,107,16,107,107,-79,107,16,16,16,16,16,16,16,16,16,16,16,16,16,107,-51,-52,16,-31,16,-78,-65,-68,-64,16,107,-72,107,107,107,107,107,107,-71,107,-66,16,-63,-67,]),'GE':([28,29,30,31,40,41,42,72,73,74,76,78,79,81,83,92,94,114,117,126,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,-23,104,-79,104,-31,-78,-72,-69,-71,-70,]),'AMPERSAND':([5,7,10,16,25,27,63,64,67,68,71,75,77,82,84,95,97,99,100,101,102,103,104,105,106,107,108,113,],[-8,-10,-9,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LPAREN':([6,17,19,20,22,31,48,53,58,63,64,67,71,75,76,77,82,84,95,97,99,100,101,102,103,104,105,106,107,108,],[13,-7,-12,-11,-11,-21,63,68,71,77,84,84,77,84,68,77,77,84,77,77,84,84,84,84,84,84,84,84,84,84,]),'ELSE':([51,56,59,110,111,119,120,121,136,140,141,],[-45,-43,-44,-51,-52,-65,-68,-64,139,-63,-67,]),'EQ':([28,29,30,31,40,41,42,72,73,74,76,78,79,81,83,92,94,114,117,126,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,-23,101,-79,101,-31,-78,-72,-69,-71,-70,]),'ID':([5,7,9,10,12,16,25,26,27,32,44,50,51,52,54,55,56,57,59,62,63,64,67,68,71,75,77,82,84,95,96,97,99,100,101,102,103,104,105,106,107,108,110,111,113,115,119,120,121,123,136,139,140,141,],[-8,-10,20,-9,22,31,31,-46,31,31,31,31,-45,31,31,31,-43,31,-44,-30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-51,-52,31,31,-65,-68,-64,31,-66,31,-63,-67,]),'IF':([26,44,50,51,52,55,56,57,59,62,96,110,111,115,119,120,121,123,136,139,140,141,],[-46,58,58,-45,58,58,-43,58,-44,-30,58,-51,-52,58,-65,-68,-64,58,-66,58,-63,-67,]),'AND':([28,29,30,31,40,41,42,72,73,74,76,78,79,80,81,91,92,93,98,114,116,117,118,124,125,126,127,128,129,130,131,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,95,-23,95,-79,95,-61,-31,-62,-78,-59,95,-54,-72,-57,-53,-58,-56,-55,-69,-71,-70,]),'LBRACE':([33,96,115,139,],[44,123,123,123,]),'INT':([0,2,3,8,13,26,34,44,50,51,52,55,56,57,59,61,62,110,111,119,120,121,123,136,140,141,],[-5,5,5,-4,5,-46,5,5,5,-45,5,5,-43,5,-44,-6,-30,-51,-52,-65,-68,-64,5,-66,-63,-67,]),'FLOAT':([0,2,3,8,13,26,34,44,50,51,52,55,56,57,59,61,62,63,64,67,68,71,75,77,82,84,95,97,99,100,101,102,103,104,105,106,107,108,110,111,113,119,120,121,123,136,140,141,],[-5,7,7,-4,7,-46,7,7,7,-45,7,7,-43,7,-44,-6,-30,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-51,-52,81,-65,-68,-64,7,-66,-63,-67,]),'NOT':([63,71,77,82,95,97,],[82,82,82,82,82,82,]),'MAIN':([5,7,9,10,12,],[-8,-10,19,-9,19,]),'OR':([28,29,30,31,40,41,42,72,73,74,76,78,79,80,81,91,92,93,98,114,116,117,118,124,125,126,127,128,129,130,131,132,133,134,],[-25,-26,-24,-21,-28,-29,-27,-22,-77,-73,-76,-74,-75,97,-23,97,-79,97,-61,-31,-62,-78,-59,-60,-54,-72,-57,-53,-58,-56,-55,-69,-71,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([44,50,52,55,57,123,],[46,65,66,69,70,137,]),'ftypename':([2,3,],[6,6,]),'address':([16,25,27,63,64,67,68,71,75,77,82,84,95,97,99,100,101,102,103,104,105,106,107,108,113,],[28,37,40,78,78,78,37,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,37,]),'funcall':([44,50,52,55,57,63,64,67,71,75,77,82,84,95,97,99,100,101,102,103,104,105,106,107,108,123,],[47,47,47,47,47,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,47,]),'arg':([13,34,],[24,45,]),'pointer':([9,16,25,27,32,44,50,52,54,55,57,63,64,67,68,71,75,77,82,84,95,96,97,99,100,101,102,103,104,105,106,107,108,113,115,123,139,],[15,30,39,42,15,49,49,49,15,49,49,74,74,74,39,74,74,74,74,74,74,49,74,74,74,74,74,74,74,74,74,74,74,39,49,49,49,]),'decl_var':([9,32,54,],[21,21,21,]),'const':([63,64,67,68,71,75,77,82,84,95,97,99,100,101,102,103,104,105,106,107,108,113,],[79,79,79,90,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,90,]),'funcdefs':([2,3,],[4,11,]),'controlbody':([96,115,139,],[120,136,141,]),'whilestatement':([44,50,52,55,57,96,115,123,139,],[51,51,51,51,51,51,51,51,51,]),'param':([25,68,113,],[36,87,87,]),'callparam':([68,113,],[88,135,]),'program':([0,],[1,]),'params':([68,],[89,]),'statement':([44,50,52,55,57,96,115,123,139,],[52,52,52,52,52,121,121,52,121,]),'var':([9,16,25,27,32,44,50,52,54,55,57,63,64,67,68,71,75,77,82,84,95,96,97,99,100,101,102,103,104,105,106,107,108,113,115,123,139,],[18,29,38,41,18,53,53,53,18,53,53,76,76,76,38,76,76,76,76,76,76,122,76,76,76,76,76,76,76,76,76,76,76,38,122,53,122,]),'type':([2,3,13,34,44,50,52,55,57,123,],[9,12,25,25,54,54,54,54,54,54,]),'voidfuncall':([44,50,52,55,57,123,],[55,55,55,55,55,55,]),'function':([2,3,],[3,3,]),'fname':([9,12,],[17,17,]),'argcomp':([24,45,],[35,60,]),'assignment':([44,50,52,55,57,96,115,123,139,],[56,56,56,56,56,56,56,56,56,]),'args':([13,],[23,]),'declaration':([2,44,50,52,55,57,123,],[8,57,57,57,57,57,57,]),'paramcomp':([88,135,],[112,138,]),'condition':([63,71,77,82,95,97,],[80,91,93,98,118,124,]),'idlist':([9,32,54,],[14,43,14,]),'declarations':([0,],[2,]),'expression':([63,64,67,71,75,77,82,84,95,97,99,100,101,102,103,104,105,106,107,108,],[83,85,86,83,92,94,83,109,83,83,125,126,127,128,129,130,131,132,133,134,]),'ifstatement':([44,50,52,55,57,96,115,123,139,],[59,59,59,59,59,59,59,59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations funcdefs','program',2,'p_program','Parser.py',117),
  ('funcdefs -> function funcdefs','funcdefs',2,'p_funcdefs','Parser.py',126),
  ('funcdefs -> function','funcdefs',1,'p_funcdefs','Parser.py',127),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Parser.py',137),
  ('declarations -> <empty>','declarations',0,'p_declarations','Parser.py',138),
  ('function -> ftypename LPAREN args RPAREN LBRACE statements RBRACE','function',7,'p_function','Parser.py',148),
  ('ftypename -> type fname','ftypename',2,'p_function','Parser.py',149),
  ('type -> INT','type',1,'p_type','Parser.py',161),
  ('type -> VOID','type',1,'p_type','Parser.py',162),
  ('type -> FLOAT','type',1,'p_type','Parser.py',163),
  ('fname -> ID','fname',1,'p_fname','Parser.py',169),
  ('fname -> MAIN','fname',1,'p_fname','Parser.py',170),
  ('args -> arg argcomp','args',2,'p_args','Parser.py',179),
  ('args -> <empty>','args',0,'p_args','Parser.py',180),
  ('argcomp -> COMMA arg argcomp','argcomp',3,'p_args','Parser.py',181),
  ('argcomp -> <empty>','argcomp',0,'p_args','Parser.py',182),
  ('arg -> type param','arg',2,'p_arg','Parser.py',188),
  ('param -> var','param',1,'p_arg','Parser.py',189),
  ('param -> pointer','param',1,'p_arg','Parser.py',190),
  ('param -> address','param',1,'p_arg','Parser.py',191),
  ('var -> ID','var',1,'p_var','Parser.py',202),
  ('const -> NUMBER','const',1,'p_const','Parser.py',209),
  ('const -> FLOAT','const',1,'p_const','Parser.py',210),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','Parser.py',222),
  ('pointer -> TIMES address','pointer',2,'p_pointer','Parser.py',223),
  ('pointer -> TIMES var','pointer',2,'p_pointer','Parser.py',224),
  ('address -> AMPERSAND pointer','address',2,'p_address','Parser.py',231),
  ('address -> AMPERSAND address','address',2,'p_address','Parser.py',232),
  ('address -> AMPERSAND var','address',2,'p_address','Parser.py',233),
  ('voidfuncall -> funcall SEMICOLON','voidfuncall',2,'p_voidfuncall','Parser.py',239),
  ('funcall -> var LPAREN params RPAREN','funcall',4,'p_funcall','Parser.py',245),
  ('params -> callparam paramcomp','params',2,'p_funcall','Parser.py',246),
  ('params -> <empty>','params',0,'p_funcall','Parser.py',247),
  ('paramcomp -> COMMA callparam paramcomp','paramcomp',3,'p_paramcomp','Parser.py',264),
  ('paramcomp -> <empty>','paramcomp',0,'p_paramcomp','Parser.py',265),
  ('callparam -> param','callparam',1,'p_paramcomp','Parser.py',266),
  ('callparam -> const','callparam',1,'p_paramcomp','Parser.py',267),
  ('statements -> statement statements','statements',2,'p_statements','Parser.py',279),
  ('statements -> COMMENT statements','statements',2,'p_statements','Parser.py',280),
  ('statements -> declaration statements','statements',2,'p_statements','Parser.py',281),
  ('statements -> voidfuncall statements','statements',2,'p_statements','Parser.py',282),
  ('statements -> <empty>','statements',0,'p_statements','Parser.py',283),
  ('statement -> assignment','statement',1,'p_statements','Parser.py',284),
  ('statement -> ifstatement','statement',1,'p_statements','Parser.py',285),
  ('statement -> whilestatement','statement',1,'p_statements','Parser.py',286),
  ('declaration -> type idlist SEMICOLON','declaration',3,'p_declaration','Parser.py',304),
  ('idlist -> decl_var COMMA idlist','idlist',3,'p_idlist','Parser.py',316),
  ('idlist -> decl_var','idlist',1,'p_idlist','Parser.py',317),
  ('decl_var -> var','decl_var',1,'p_decl_var','Parser.py',327),
  ('decl_var -> pointer','decl_var',1,'p_decl_var','Parser.py',328),
  ('assignment -> pointer EQUALS expression SEMICOLON','assignment',4,'p_assignment','Parser.py',336),
  ('assignment -> var EQUALS expression SEMICOLON','assignment',4,'p_assignment','Parser.py',337),
  ('condition -> expression LT expression','condition',3,'p_condition','Parser.py',346),
  ('condition -> expression GT expression','condition',3,'p_condition','Parser.py',347),
  ('condition -> expression LE expression','condition',3,'p_condition','Parser.py',348),
  ('condition -> expression GE expression','condition',3,'p_condition','Parser.py',349),
  ('condition -> expression EQ expression','condition',3,'p_condition','Parser.py',350),
  ('condition -> expression NE expression','condition',3,'p_condition','Parser.py',351),
  ('condition -> condition AND condition','condition',3,'p_condition','Parser.py',352),
  ('condition -> condition OR condition','condition',3,'p_condition','Parser.py',353),
  ('condition -> NOT condition','condition',2,'p_condition','Parser.py',354),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','Parser.py',355),
  ('controlbody -> LBRACE statements RBRACE','controlbody',3,'p_controlbody','Parser.py',380),
  ('controlbody -> statement','controlbody',1,'p_controlbody','Parser.py',381),
  ('controlbody -> SEMICOLON','controlbody',1,'p_controlbody','Parser.py',382),
  ('ifstatement -> IF LPAREN condition RPAREN controlbody','ifstatement',5,'p_ifstatement','Parser.py',393),
  ('ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody','ifstatement',7,'p_ifstatement','Parser.py',394),
  ('whilestatement -> WHILE LPAREN condition RPAREN controlbody','whilestatement',5,'p_whilestatement','Parser.py',403),
  ('expression -> expression PLUS expression','expression',3,'p_expression','Parser.py',410),
  ('expression -> expression MINUS expression','expression',3,'p_expression','Parser.py',411),
  ('expression -> expression TIMES expression','expression',3,'p_expression','Parser.py',412),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','Parser.py',413),
  ('expression -> pointer','expression',1,'p_expression','Parser.py',414),
  ('expression -> address','expression',1,'p_expression','Parser.py',415),
  ('expression -> const','expression',1,'p_expression','Parser.py',416),
  ('expression -> var','expression',1,'p_expression','Parser.py',417),
  ('expression -> funcall','expression',1,'p_expression','Parser.py',418),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','Parser.py',419),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Parser.py',442),
]
