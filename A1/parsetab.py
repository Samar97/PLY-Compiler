
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALSrightAMPERSANDSTARID NUMBER COMMENT EQUALS LPAREN RPAREN LBRACE RBRACE SEMICOLON STAR AMPERSAND COMMA INT VOID MAIN\n\tstart : function\n\t\n\tfunction : type MAIN LPAREN args RPAREN LBRACE statements RBRACE\n\ttype : INT\n\t\t| VOID\t\t\n\t\n\t\targs : arg COMMA args\n\t\t\t| arg\n\t\t\t| \n\t\targ : type ID\n\t\n\tpointer : STAR pointer\n\t\t\t| STAR ID\n\t\t\t| STAR address\n\t\n\taddress : AMPERSAND ID\n\t\t\t| AMPERSAND pointer\n\t\n\tstatements :  statement statements\n\t\t\t\t| \n\tstatement : declaration\n\t\t\t| xassignment\n\t\t\t| COMMENT\n\t\n\tdeclaration : type idlist SEMICOLON\n\t\n\tidlist : pointer COMMA idlist \n\t\t\t| ID COMMA idlist\n\t\t\t| ID\n\t\t\t| pointer\n\t\n\txassignment : assignmentlist SEMICOLON\n\t\n\tassignmentlist : assignment COMMA assignmentlist \n\t\t\t\t\t| assignment\n\t\n\tassignment : ID EQUALS address\n\t\t\t\t| ID EQUALS ID\n\t\t\t\t| pointer EQUALS pointer\n\t\t\t\t| pointer EQUALS NUMBER\n\t\t\t\t| pointer EQUALS ID\n\t'
    
_lr_action_items = {'INT':([0,7,13,14,16,20,24,26,34,50,],[1,1,1,1,-17,1,-18,-16,-24,-19,]),'LPAREN':([6,],[7,]),'ID':([1,2,9,14,16,18,20,24,25,26,27,31,32,34,35,48,49,50,],[-3,-4,12,22,-17,29,22,-18,38,-16,42,44,22,-24,47,38,38,-19,]),'MAIN':([1,2,5,],[-3,-4,6,]),'VOID':([0,7,13,14,16,20,24,26,34,50,],[2,2,2,2,-17,2,-18,-16,-24,-19,]),'EQUALS':([17,22,28,29,30,43,44,],[27,35,-9,-10,-11,-13,-12,]),'RBRACE':([14,16,20,23,24,26,33,34,50,],[-15,-17,-15,36,-18,-16,-14,-24,-19,]),'NUMBER':([27,],[41,]),'RPAREN':([7,8,10,12,13,15,],[-7,11,-6,-8,-7,-5,]),'COMMA':([10,12,19,28,29,30,37,38,40,41,42,43,44,46,47,],[13,-8,32,-9,-10,-11,48,49,-29,-30,-31,-13,-12,-27,-28,]),'STAR':([1,2,14,16,18,20,24,25,26,27,31,32,34,48,49,50,],[-3,-4,18,-17,18,18,-18,18,-16,18,18,18,-24,18,18,-19,]),'AMPERSAND':([18,35,],[31,31,]),'COMMENT':([14,16,20,24,26,34,50,],[24,-17,24,-18,-16,-24,-19,]),'SEMICOLON':([19,21,28,29,30,37,38,39,40,41,42,43,44,45,46,47,51,52,],[-26,34,-9,-10,-11,-23,-22,50,-29,-30,-31,-13,-12,-25,-27,-28,-20,-21,]),'LBRACE':([11,],[14,]),'$end':([3,4,36,],[0,-1,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pointer':([14,18,20,25,27,31,32,48,49,],[17,28,17,37,40,43,17,37,37,]),'assignmentlist':([14,20,32,],[21,21,45,]),'address':([18,35,],[30,46,]),'args':([7,13,],[8,15,]),'statement':([14,20,],[20,20,]),'statements':([14,20,],[23,33,]),'xassignment':([14,20,],[16,16,]),'idlist':([25,48,49,],[39,51,52,]),'start':([0,],[3,]),'function':([0,],[4,]),'assignment':([14,20,32,],[19,19,19,]),'type':([0,7,13,14,20,],[5,9,9,25,25,]),'arg':([7,13,],[10,10,]),'declaration':([14,20,],[26,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> function','start',1,'p_start','assign1.py',76),
  ('function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE','function',8,'p_function','assign1.py',83),
  ('type -> INT','type',1,'p_function','assign1.py',84),
  ('type -> VOID','type',1,'p_function','assign1.py',85),
  ('args -> arg COMMA args','args',3,'p_args','assign1.py',91),
  ('args -> arg','args',1,'p_args','assign1.py',92),
  ('args -> <empty>','args',0,'p_args','assign1.py',93),
  ('arg -> type ID','arg',2,'p_args','assign1.py',94),
  ('pointer -> STAR pointer','pointer',2,'p_pointer','assign1.py',101),
  ('pointer -> STAR ID','pointer',2,'p_pointer','assign1.py',102),
  ('pointer -> STAR address','pointer',2,'p_pointer','assign1.py',103),
  ('address -> AMPERSAND ID','address',2,'p_address','assign1.py',110),
  ('address -> AMPERSAND pointer','address',2,'p_address','assign1.py',111),
  ('statements -> statement statements','statements',2,'p_statements','assign1.py',117),
  ('statements -> <empty>','statements',0,'p_statements','assign1.py',118),
  ('statement -> declaration','statement',1,'p_statements','assign1.py',119),
  ('statement -> xassignment','statement',1,'p_statements','assign1.py',120),
  ('statement -> COMMENT','statement',1,'p_statements','assign1.py',121),
  ('declaration -> type idlist SEMICOLON','declaration',3,'p_declaration','assign1.py',127),
  ('idlist -> pointer COMMA idlist','idlist',3,'p_idlist','assign1.py',133),
  ('idlist -> ID COMMA idlist','idlist',3,'p_idlist','assign1.py',134),
  ('idlist -> ID','idlist',1,'p_idlist','assign1.py',135),
  ('idlist -> pointer','idlist',1,'p_idlist','assign1.py',136),
  ('xassignment -> assignmentlist SEMICOLON','xassignment',2,'p_xassignment','assign1.py',146),
  ('assignmentlist -> assignment COMMA assignmentlist','assignmentlist',3,'p_assignmentlist','assign1.py',152),
  ('assignmentlist -> assignment','assignmentlist',1,'p_assignmentlist','assign1.py',153),
  ('assignment -> ID EQUALS address','assignment',3,'p_assignment','assign1.py',159),
  ('assignment -> ID EQUALS ID','assignment',3,'p_assignment','assign1.py',160),
  ('assignment -> pointer EQUALS pointer','assignment',3,'p_assignment','assign1.py',161),
  ('assignment -> pointer EQUALS NUMBER','assignment',3,'p_assignment','assign1.py',162),
  ('assignment -> pointer EQUALS ID','assignment',3,'p_assignment','assign1.py',163),
]
