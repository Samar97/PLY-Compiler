Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE
Rule 3     type -> INT
Rule 4     type -> VOID
Rule 5     args -> arg COMMA args
Rule 6     args -> arg
Rule 7     args -> <empty>
Rule 8     arg -> type ID
Rule 9     pointer -> STAR pointer
Rule 10    pointer -> STAR ID
Rule 11    address -> AMPERSAND ID
Rule 12    statements -> statement statements
Rule 13    statements -> <empty>
Rule 14    statement -> declaration
Rule 15    statement -> xassignment
Rule 16    statement -> COMMENT
Rule 17    declaration -> type idlist SEMICOLON
Rule 18    idlist -> pointer COMMA idlist
Rule 19    idlist -> ID COMMA idlist
Rule 20    idlist -> ID
Rule 21    idlist -> pointer
Rule 22    xassignment -> assignmentlist SEMICOLON
Rule 23    assignmentlist -> assignment COMMA assignmentlist
Rule 24    assignmentlist -> assignment
Rule 25    assignment -> ID EQUALS address
Rule 26    assignment -> ID EQUALS ID
Rule 27    assignment -> pointer EQUALS pointer
Rule 28    assignment -> pointer EQUALS NUMBER
Rule 29    assignment -> pointer EQUALS ID

Terminals, with rules where they appear

AMPERSAND            : 11
COMMA                : 5 18 19 23
COMMENT              : 16
EQUALS               : 25 26 27 28 29
ID                   : 8 10 11 19 20 25 26 26 29
INT                  : 3
LBRACE               : 2
LPAREN               : 2
MAIN                 : 2
NUMBER               : 28
RBRACE               : 2
RPAREN               : 2
SEMICOLON            : 17 22
STAR                 : 9 10
VOID                 : 4
error                : 

Nonterminals, with rules where they appear

address              : 25
arg                  : 5 6
args                 : 2 5
assignment           : 23 24
assignmentlist       : 22 23
declaration          : 14
function             : 1
idlist               : 17 18 19
pointer              : 9 18 21 27 27 28 29
start                : 0
statement            : 12
statements           : 2 12
type                 : 2 8 17
xassignment          : 15

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . type MAIN LPAREN args RPAREN LBRACE statements RBRACE
    (3) type -> . INT
    (4) type -> . VOID

    INT             shift and go to state 2
    VOID            shift and go to state 3

    type                           shift and go to state 1
    function                       shift and go to state 4
    start                          shift and go to state 5

state 1

    (2) function -> type . MAIN LPAREN args RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 6


state 2

    (3) type -> INT .

    MAIN            reduce using rule 3 (type -> INT .)
    ID              reduce using rule 3 (type -> INT .)
    STAR            reduce using rule 3 (type -> INT .)


state 3

    (4) type -> VOID .

    MAIN            reduce using rule 4 (type -> VOID .)
    ID              reduce using rule 4 (type -> VOID .)
    STAR            reduce using rule 4 (type -> VOID .)


state 4

    (1) start -> function .

    $end            reduce using rule 1 (start -> function .)


state 5

    (0) S' -> start .



state 6

    (2) function -> type MAIN . LPAREN args RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 7


state 7

    (2) function -> type MAIN LPAREN . args RPAREN LBRACE statements RBRACE
    (5) args -> . arg COMMA args
    (6) args -> . arg
    (7) args -> .
    (8) arg -> . type ID
    (3) type -> . INT
    (4) type -> . VOID

    RPAREN          reduce using rule 7 (args -> .)
    INT             shift and go to state 2
    VOID            shift and go to state 3

    type                           shift and go to state 8
    arg                            shift and go to state 9
    args                           shift and go to state 10

state 8

    (8) arg -> type . ID

    ID              shift and go to state 11


state 9

    (5) args -> arg . COMMA args
    (6) args -> arg .

    COMMA           shift and go to state 12
    RPAREN          reduce using rule 6 (args -> arg .)


state 10

    (2) function -> type MAIN LPAREN args . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 13


state 11

    (8) arg -> type ID .

    COMMA           reduce using rule 8 (arg -> type ID .)
    RPAREN          reduce using rule 8 (arg -> type ID .)


state 12

    (5) args -> arg COMMA . args
    (5) args -> . arg COMMA args
    (6) args -> . arg
    (7) args -> .
    (8) arg -> . type ID
    (3) type -> . INT
    (4) type -> . VOID

    RPAREN          reduce using rule 7 (args -> .)
    INT             shift and go to state 2
    VOID            shift and go to state 3

    type                           shift and go to state 8
    arg                            shift and go to state 9
    args                           shift and go to state 14

state 13

    (2) function -> type MAIN LPAREN args RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 15


state 14

    (5) args -> arg COMMA args .

    RPAREN          reduce using rule 5 (args -> arg COMMA args .)


state 15

    (2) function -> type MAIN LPAREN args RPAREN LBRACE . statements RBRACE
    (12) statements -> . statement statements
    (13) statements -> .
    (14) statement -> . declaration
    (15) statement -> . xassignment
    (16) statement -> . COMMENT
    (17) declaration -> . type idlist SEMICOLON
    (22) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (23) assignmentlist -> . assignment COMMA assignmentlist
    (24) assignmentlist -> . assignment
    (25) assignment -> . ID EQUALS address
    (26) assignment -> . ID EQUALS ID
    (27) assignment -> . pointer EQUALS pointer
    (28) assignment -> . pointer EQUALS NUMBER
    (29) assignment -> . pointer EQUALS ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID

    RBRACE          reduce using rule 13 (statements -> .)
    COMMENT         shift and go to state 22
    INT             shift and go to state 2
    VOID            shift and go to state 3
    ID              shift and go to state 17
    STAR            shift and go to state 23

    type                           shift and go to state 16
    statements                     shift and go to state 20
    xassignment                    shift and go to state 18
    statement                      shift and go to state 24
    pointer                        shift and go to state 19
    assignmentlist                 shift and go to state 25
    declaration                    shift and go to state 26
    assignment                     shift and go to state 21

state 16

    (17) declaration -> type . idlist SEMICOLON
    (18) idlist -> . pointer COMMA idlist
    (19) idlist -> . ID COMMA idlist
    (20) idlist -> . ID
    (21) idlist -> . pointer
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID

    ID              shift and go to state 28
    STAR            shift and go to state 23

    idlist                         shift and go to state 27
    pointer                        shift and go to state 29

state 17

    (25) assignment -> ID . EQUALS address
    (26) assignment -> ID . EQUALS ID

    EQUALS          shift and go to state 30


state 18

    (15) statement -> xassignment .

    COMMENT         reduce using rule 15 (statement -> xassignment .)
    INT             reduce using rule 15 (statement -> xassignment .)
    VOID            reduce using rule 15 (statement -> xassignment .)
    ID              reduce using rule 15 (statement -> xassignment .)
    STAR            reduce using rule 15 (statement -> xassignment .)
    RBRACE          reduce using rule 15 (statement -> xassignment .)


state 19

    (27) assignment -> pointer . EQUALS pointer
    (28) assignment -> pointer . EQUALS NUMBER
    (29) assignment -> pointer . EQUALS ID

    EQUALS          shift and go to state 31


state 20

    (2) function -> type MAIN LPAREN args RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 32


state 21

    (23) assignmentlist -> assignment . COMMA assignmentlist
    (24) assignmentlist -> assignment .

    COMMA           shift and go to state 33
    SEMICOLON       reduce using rule 24 (assignmentlist -> assignment .)


state 22

    (16) statement -> COMMENT .

    COMMENT         reduce using rule 16 (statement -> COMMENT .)
    INT             reduce using rule 16 (statement -> COMMENT .)
    VOID            reduce using rule 16 (statement -> COMMENT .)
    ID              reduce using rule 16 (statement -> COMMENT .)
    STAR            reduce using rule 16 (statement -> COMMENT .)
    RBRACE          reduce using rule 16 (statement -> COMMENT .)


state 23

    (9) pointer -> STAR . pointer
    (10) pointer -> STAR . ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID

    ID              shift and go to state 34
    STAR            shift and go to state 23

    pointer                        shift and go to state 35

state 24

    (12) statements -> statement . statements
    (12) statements -> . statement statements
    (13) statements -> .
    (14) statement -> . declaration
    (15) statement -> . xassignment
    (16) statement -> . COMMENT
    (17) declaration -> . type idlist SEMICOLON
    (22) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (23) assignmentlist -> . assignment COMMA assignmentlist
    (24) assignmentlist -> . assignment
    (25) assignment -> . ID EQUALS address
    (26) assignment -> . ID EQUALS ID
    (27) assignment -> . pointer EQUALS pointer
    (28) assignment -> . pointer EQUALS NUMBER
    (29) assignment -> . pointer EQUALS ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID

    RBRACE          reduce using rule 13 (statements -> .)
    COMMENT         shift and go to state 22
    INT             shift and go to state 2
    VOID            shift and go to state 3
    ID              shift and go to state 17
    STAR            shift and go to state 23

    statements                     shift and go to state 36
    statement                      shift and go to state 24
    xassignment                    shift and go to state 18
    assignment                     shift and go to state 21
    assignmentlist                 shift and go to state 25
    type                           shift and go to state 16
    declaration                    shift and go to state 26
    pointer                        shift and go to state 19

state 25

    (22) xassignment -> assignmentlist . SEMICOLON

    SEMICOLON       shift and go to state 37


state 26

    (14) statement -> declaration .

    COMMENT         reduce using rule 14 (statement -> declaration .)
    INT             reduce using rule 14 (statement -> declaration .)
    VOID            reduce using rule 14 (statement -> declaration .)
    ID              reduce using rule 14 (statement -> declaration .)
    STAR            reduce using rule 14 (statement -> declaration .)
    RBRACE          reduce using rule 14 (statement -> declaration .)


state 27

    (17) declaration -> type idlist . SEMICOLON

    SEMICOLON       shift and go to state 38


state 28

    (19) idlist -> ID . COMMA idlist
    (20) idlist -> ID .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 20 (idlist -> ID .)


state 29

    (18) idlist -> pointer . COMMA idlist
    (21) idlist -> pointer .

    COMMA           shift and go to state 40
    SEMICOLON       reduce using rule 21 (idlist -> pointer .)


state 30

    (25) assignment -> ID EQUALS . address
    (26) assignment -> ID EQUALS . ID
    (11) address -> . AMPERSAND ID

    ID              shift and go to state 42
    AMPERSAND       shift and go to state 41

    address                        shift and go to state 43

state 31

    (27) assignment -> pointer EQUALS . pointer
    (28) assignment -> pointer EQUALS . NUMBER
    (29) assignment -> pointer EQUALS . ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID

    NUMBER          shift and go to state 45
    ID              shift and go to state 44
    STAR            shift and go to state 23

    pointer                        shift and go to state 46

state 32

    (2) function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE .)


state 33

    (23) assignmentlist -> assignment COMMA . assignmentlist
    (23) assignmentlist -> . assignment COMMA assignmentlist
    (24) assignmentlist -> . assignment
    (25) assignment -> . ID EQUALS address
    (26) assignment -> . ID EQUALS ID
    (27) assignment -> . pointer EQUALS pointer
    (28) assignment -> . pointer EQUALS NUMBER
    (29) assignment -> . pointer EQUALS ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID

    ID              shift and go to state 17
    STAR            shift and go to state 23

    assignmentlist                 shift and go to state 47
    assignment                     shift and go to state 21
    pointer                        shift and go to state 19

state 34

    (10) pointer -> STAR ID .

    COMMA           reduce using rule 10 (pointer -> STAR ID .)
    SEMICOLON       reduce using rule 10 (pointer -> STAR ID .)
    EQUALS          reduce using rule 10 (pointer -> STAR ID .)


state 35

    (9) pointer -> STAR pointer .

    COMMA           reduce using rule 9 (pointer -> STAR pointer .)
    SEMICOLON       reduce using rule 9 (pointer -> STAR pointer .)
    EQUALS          reduce using rule 9 (pointer -> STAR pointer .)


state 36

    (12) statements -> statement statements .

    RBRACE          reduce using rule 12 (statements -> statement statements .)


state 37

    (22) xassignment -> assignmentlist SEMICOLON .

    COMMENT         reduce using rule 22 (xassignment -> assignmentlist SEMICOLON .)
    INT             reduce using rule 22 (xassignment -> assignmentlist SEMICOLON .)
    VOID            reduce using rule 22 (xassignment -> assignmentlist SEMICOLON .)
    ID              reduce using rule 22 (xassignment -> assignmentlist SEMICOLON .)
    STAR            reduce using rule 22 (xassignment -> assignmentlist SEMICOLON .)
    RBRACE          reduce using rule 22 (xassignment -> assignmentlist SEMICOLON .)


state 38

    (17) declaration -> type idlist SEMICOLON .

    COMMENT         reduce using rule 17 (declaration -> type idlist SEMICOLON .)
    INT             reduce using rule 17 (declaration -> type idlist SEMICOLON .)
    VOID            reduce using rule 17 (declaration -> type idlist SEMICOLON .)
    ID              reduce using rule 17 (declaration -> type idlist SEMICOLON .)
    STAR            reduce using rule 17 (declaration -> type idlist SEMICOLON .)
    RBRACE          reduce using rule 17 (declaration -> type idlist SEMICOLON .)


state 39

    (19) idlist -> ID COMMA . idlist
    (18) idlist -> . pointer COMMA idlist
    (19) idlist -> . ID COMMA idlist
    (20) idlist -> . ID
    (21) idlist -> . pointer
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID

    ID              shift and go to state 28
    STAR            shift and go to state 23

    idlist                         shift and go to state 48
    pointer                        shift and go to state 29

state 40

    (18) idlist -> pointer COMMA . idlist
    (18) idlist -> . pointer COMMA idlist
    (19) idlist -> . ID COMMA idlist
    (20) idlist -> . ID
    (21) idlist -> . pointer
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID

    ID              shift and go to state 28
    STAR            shift and go to state 23

    idlist                         shift and go to state 49
    pointer                        shift and go to state 29

state 41

    (11) address -> AMPERSAND . ID

    ID              shift and go to state 50


state 42

    (26) assignment -> ID EQUALS ID .

    COMMA           reduce using rule 26 (assignment -> ID EQUALS ID .)
    SEMICOLON       reduce using rule 26 (assignment -> ID EQUALS ID .)


state 43

    (25) assignment -> ID EQUALS address .

    COMMA           reduce using rule 25 (assignment -> ID EQUALS address .)
    SEMICOLON       reduce using rule 25 (assignment -> ID EQUALS address .)


state 44

    (29) assignment -> pointer EQUALS ID .

    COMMA           reduce using rule 29 (assignment -> pointer EQUALS ID .)
    SEMICOLON       reduce using rule 29 (assignment -> pointer EQUALS ID .)


state 45

    (28) assignment -> pointer EQUALS NUMBER .

    COMMA           reduce using rule 28 (assignment -> pointer EQUALS NUMBER .)
    SEMICOLON       reduce using rule 28 (assignment -> pointer EQUALS NUMBER .)


state 46

    (27) assignment -> pointer EQUALS pointer .

    COMMA           reduce using rule 27 (assignment -> pointer EQUALS pointer .)
    SEMICOLON       reduce using rule 27 (assignment -> pointer EQUALS pointer .)


state 47

    (23) assignmentlist -> assignment COMMA assignmentlist .

    SEMICOLON       reduce using rule 23 (assignmentlist -> assignment COMMA assignmentlist .)


state 48

    (19) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 19 (idlist -> ID COMMA idlist .)


state 49

    (18) idlist -> pointer COMMA idlist .

    SEMICOLON       reduce using rule 18 (idlist -> pointer COMMA idlist .)


state 50

    (11) address -> AMPERSAND ID .

    COMMA           reduce using rule 11 (address -> AMPERSAND ID .)
    SEMICOLON       reduce using rule 11 (address -> AMPERSAND ID .)

