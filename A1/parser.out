Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE
Rule 3     type -> INT
Rule 4     type -> VOID
Rule 5     args -> arg COMMA args
Rule 6     args -> arg
Rule 7     args -> <empty>
Rule 8     arg -> type ID
Rule 9     pointer -> STAR pointer
Rule 10    pointer -> STAR ID
Rule 11    pointer -> STAR address
Rule 12    address -> AMPERSAND ID
Rule 13    address -> AMPERSAND pointer
Rule 14    statements -> statement statements
Rule 15    statements -> <empty>
Rule 16    statement -> declaration
Rule 17    statement -> xassignment
Rule 18    statement -> COMMENT
Rule 19    declaration -> type idlist SEMICOLON
Rule 20    idlist -> pointer COMMA idlist
Rule 21    idlist -> ID COMMA idlist
Rule 22    idlist -> ID
Rule 23    idlist -> pointer
Rule 24    xassignment -> assignmentlist SEMICOLON
Rule 25    assignmentlist -> assignment COMMA assignmentlist
Rule 26    assignmentlist -> assignment
Rule 27    assignment -> ID EQUALS address
Rule 28    assignment -> ID EQUALS ID
Rule 29    assignment -> pointer EQUALS pointer
Rule 30    assignment -> pointer EQUALS NUMBER
Rule 31    assignment -> pointer EQUALS ID

Terminals, with rules where they appear

AMPERSAND            : 12 13
COMMA                : 5 20 21 25
COMMENT              : 18
EQUALS               : 27 28 29 30 31
ID                   : 8 10 12 21 22 27 28 28 31
INT                  : 3
LBRACE               : 2
LPAREN               : 2
MAIN                 : 2
NUMBER               : 30
RBRACE               : 2
RPAREN               : 2
SEMICOLON            : 19 24
STAR                 : 9 10 11
VOID                 : 4
error                : 

Nonterminals, with rules where they appear

address              : 11 27
arg                  : 5 6
args                 : 2 5
assignment           : 25 26
assignmentlist       : 24 25
declaration          : 16
function             : 1
idlist               : 19 20 21
pointer              : 9 13 20 23 29 29 30 31
start                : 0
statement            : 14
statements           : 2 14
type                 : 2 8 19
xassignment          : 17

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . type MAIN LPAREN args RPAREN LBRACE statements RBRACE
    (3) type -> . INT
    (4) type -> . VOID

    INT             shift and go to state 1
    VOID            shift and go to state 2

    start                          shift and go to state 3
    type                           shift and go to state 5
    function                       shift and go to state 4

state 1

    (3) type -> INT .

    ID              reduce using rule 3 (type -> INT .)
    STAR            reduce using rule 3 (type -> INT .)
    MAIN            reduce using rule 3 (type -> INT .)


state 2

    (4) type -> VOID .

    ID              reduce using rule 4 (type -> VOID .)
    STAR            reduce using rule 4 (type -> VOID .)
    MAIN            reduce using rule 4 (type -> VOID .)


state 3

    (0) S' -> start .



state 4

    (1) start -> function .

    $end            reduce using rule 1 (start -> function .)


state 5

    (2) function -> type . MAIN LPAREN args RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 6


state 6

    (2) function -> type MAIN . LPAREN args RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 7


state 7

    (2) function -> type MAIN LPAREN . args RPAREN LBRACE statements RBRACE
    (5) args -> . arg COMMA args
    (6) args -> . arg
    (7) args -> .
    (8) arg -> . type ID
    (3) type -> . INT
    (4) type -> . VOID

    RPAREN          reduce using rule 7 (args -> .)
    INT             shift and go to state 1
    VOID            shift and go to state 2

    type                           shift and go to state 9
    arg                            shift and go to state 10
    args                           shift and go to state 8

state 8

    (2) function -> type MAIN LPAREN args . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 11


state 9

    (8) arg -> type . ID

    ID              shift and go to state 12


state 10

    (5) args -> arg . COMMA args
    (6) args -> arg .

    COMMA           shift and go to state 13
    RPAREN          reduce using rule 6 (args -> arg .)


state 11

    (2) function -> type MAIN LPAREN args RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 14


state 12

    (8) arg -> type ID .

    COMMA           reduce using rule 8 (arg -> type ID .)
    RPAREN          reduce using rule 8 (arg -> type ID .)


state 13

    (5) args -> arg COMMA . args
    (5) args -> . arg COMMA args
    (6) args -> . arg
    (7) args -> .
    (8) arg -> . type ID
    (3) type -> . INT
    (4) type -> . VOID

    RPAREN          reduce using rule 7 (args -> .)
    INT             shift and go to state 1
    VOID            shift and go to state 2

    type                           shift and go to state 9
    arg                            shift and go to state 10
    args                           shift and go to state 15

state 14

    (2) function -> type MAIN LPAREN args RPAREN LBRACE . statements RBRACE
    (14) statements -> . statement statements
    (15) statements -> .
    (16) statement -> . declaration
    (17) statement -> . xassignment
    (18) statement -> . COMMENT
    (19) declaration -> . type idlist SEMICOLON
    (24) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (25) assignmentlist -> . assignment COMMA assignmentlist
    (26) assignmentlist -> . assignment
    (27) assignment -> . ID EQUALS address
    (28) assignment -> . ID EQUALS ID
    (29) assignment -> . pointer EQUALS pointer
    (30) assignment -> . pointer EQUALS NUMBER
    (31) assignment -> . pointer EQUALS ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address

    RBRACE          reduce using rule 15 (statements -> .)
    COMMENT         shift and go to state 24
    INT             shift and go to state 1
    VOID            shift and go to state 2
    ID              shift and go to state 22
    STAR            shift and go to state 18

    pointer                        shift and go to state 17
    statement                      shift and go to state 20
    assignmentlist                 shift and go to state 21
    assignment                     shift and go to state 19
    statements                     shift and go to state 23
    type                           shift and go to state 25
    xassignment                    shift and go to state 16
    declaration                    shift and go to state 26

state 15

    (5) args -> arg COMMA args .

    RPAREN          reduce using rule 5 (args -> arg COMMA args .)


state 16

    (17) statement -> xassignment .

    COMMENT         reduce using rule 17 (statement -> xassignment .)
    INT             reduce using rule 17 (statement -> xassignment .)
    VOID            reduce using rule 17 (statement -> xassignment .)
    ID              reduce using rule 17 (statement -> xassignment .)
    STAR            reduce using rule 17 (statement -> xassignment .)
    RBRACE          reduce using rule 17 (statement -> xassignment .)


state 17

    (29) assignment -> pointer . EQUALS pointer
    (30) assignment -> pointer . EQUALS NUMBER
    (31) assignment -> pointer . EQUALS ID

    EQUALS          shift and go to state 27


state 18

    (9) pointer -> STAR . pointer
    (10) pointer -> STAR . ID
    (11) pointer -> STAR . address
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer

    ID              shift and go to state 29
    STAR            shift and go to state 18
    AMPERSAND       shift and go to state 31

    pointer                        shift and go to state 28
    address                        shift and go to state 30

state 19

    (25) assignmentlist -> assignment . COMMA assignmentlist
    (26) assignmentlist -> assignment .

    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 26 (assignmentlist -> assignment .)


state 20

    (14) statements -> statement . statements
    (14) statements -> . statement statements
    (15) statements -> .
    (16) statement -> . declaration
    (17) statement -> . xassignment
    (18) statement -> . COMMENT
    (19) declaration -> . type idlist SEMICOLON
    (24) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (25) assignmentlist -> . assignment COMMA assignmentlist
    (26) assignmentlist -> . assignment
    (27) assignment -> . ID EQUALS address
    (28) assignment -> . ID EQUALS ID
    (29) assignment -> . pointer EQUALS pointer
    (30) assignment -> . pointer EQUALS NUMBER
    (31) assignment -> . pointer EQUALS ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address

    RBRACE          reduce using rule 15 (statements -> .)
    COMMENT         shift and go to state 24
    INT             shift and go to state 1
    VOID            shift and go to state 2
    ID              shift and go to state 22
    STAR            shift and go to state 18

    pointer                        shift and go to state 17
    statement                      shift and go to state 20
    assignmentlist                 shift and go to state 21
    assignment                     shift and go to state 19
    statements                     shift and go to state 33
    type                           shift and go to state 25
    xassignment                    shift and go to state 16
    declaration                    shift and go to state 26

state 21

    (24) xassignment -> assignmentlist . SEMICOLON

    SEMICOLON       shift and go to state 34


state 22

    (27) assignment -> ID . EQUALS address
    (28) assignment -> ID . EQUALS ID

    EQUALS          shift and go to state 35


state 23

    (2) function -> type MAIN LPAREN args RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 36


state 24

    (18) statement -> COMMENT .

    COMMENT         reduce using rule 18 (statement -> COMMENT .)
    INT             reduce using rule 18 (statement -> COMMENT .)
    VOID            reduce using rule 18 (statement -> COMMENT .)
    ID              reduce using rule 18 (statement -> COMMENT .)
    STAR            reduce using rule 18 (statement -> COMMENT .)
    RBRACE          reduce using rule 18 (statement -> COMMENT .)


state 25

    (19) declaration -> type . idlist SEMICOLON
    (20) idlist -> . pointer COMMA idlist
    (21) idlist -> . ID COMMA idlist
    (22) idlist -> . ID
    (23) idlist -> . pointer
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address

    ID              shift and go to state 38
    STAR            shift and go to state 18

    pointer                        shift and go to state 37
    idlist                         shift and go to state 39

state 26

    (16) statement -> declaration .

    COMMENT         reduce using rule 16 (statement -> declaration .)
    INT             reduce using rule 16 (statement -> declaration .)
    VOID            reduce using rule 16 (statement -> declaration .)
    ID              reduce using rule 16 (statement -> declaration .)
    STAR            reduce using rule 16 (statement -> declaration .)
    RBRACE          reduce using rule 16 (statement -> declaration .)


state 27

    (29) assignment -> pointer EQUALS . pointer
    (30) assignment -> pointer EQUALS . NUMBER
    (31) assignment -> pointer EQUALS . ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address

    NUMBER          shift and go to state 41
    ID              shift and go to state 42
    STAR            shift and go to state 18

    pointer                        shift and go to state 40

state 28

    (9) pointer -> STAR pointer .

    COMMA           reduce using rule 9 (pointer -> STAR pointer .)
    SEMICOLON       reduce using rule 9 (pointer -> STAR pointer .)
    EQUALS          reduce using rule 9 (pointer -> STAR pointer .)


state 29

    (10) pointer -> STAR ID .

    COMMA           reduce using rule 10 (pointer -> STAR ID .)
    SEMICOLON       reduce using rule 10 (pointer -> STAR ID .)
    EQUALS          reduce using rule 10 (pointer -> STAR ID .)


state 30

    (11) pointer -> STAR address .

    COMMA           reduce using rule 11 (pointer -> STAR address .)
    SEMICOLON       reduce using rule 11 (pointer -> STAR address .)
    EQUALS          reduce using rule 11 (pointer -> STAR address .)


state 31

    (12) address -> AMPERSAND . ID
    (13) address -> AMPERSAND . pointer
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address

    ID              shift and go to state 44
    STAR            shift and go to state 18

    pointer                        shift and go to state 43

state 32

    (25) assignmentlist -> assignment COMMA . assignmentlist
    (25) assignmentlist -> . assignment COMMA assignmentlist
    (26) assignmentlist -> . assignment
    (27) assignment -> . ID EQUALS address
    (28) assignment -> . ID EQUALS ID
    (29) assignment -> . pointer EQUALS pointer
    (30) assignment -> . pointer EQUALS NUMBER
    (31) assignment -> . pointer EQUALS ID
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address

    ID              shift and go to state 22
    STAR            shift and go to state 18

    pointer                        shift and go to state 17
    assignmentlist                 shift and go to state 45
    assignment                     shift and go to state 19

state 33

    (14) statements -> statement statements .

    RBRACE          reduce using rule 14 (statements -> statement statements .)


state 34

    (24) xassignment -> assignmentlist SEMICOLON .

    COMMENT         reduce using rule 24 (xassignment -> assignmentlist SEMICOLON .)
    INT             reduce using rule 24 (xassignment -> assignmentlist SEMICOLON .)
    VOID            reduce using rule 24 (xassignment -> assignmentlist SEMICOLON .)
    ID              reduce using rule 24 (xassignment -> assignmentlist SEMICOLON .)
    STAR            reduce using rule 24 (xassignment -> assignmentlist SEMICOLON .)
    RBRACE          reduce using rule 24 (xassignment -> assignmentlist SEMICOLON .)


state 35

    (27) assignment -> ID EQUALS . address
    (28) assignment -> ID EQUALS . ID
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer

    ID              shift and go to state 47
    AMPERSAND       shift and go to state 31

    address                        shift and go to state 46

state 36

    (2) function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE .)


state 37

    (20) idlist -> pointer . COMMA idlist
    (23) idlist -> pointer .

    COMMA           shift and go to state 48
    SEMICOLON       reduce using rule 23 (idlist -> pointer .)


state 38

    (21) idlist -> ID . COMMA idlist
    (22) idlist -> ID .

    COMMA           shift and go to state 49
    SEMICOLON       reduce using rule 22 (idlist -> ID .)


state 39

    (19) declaration -> type idlist . SEMICOLON

    SEMICOLON       shift and go to state 50


state 40

    (29) assignment -> pointer EQUALS pointer .

    COMMA           reduce using rule 29 (assignment -> pointer EQUALS pointer .)
    SEMICOLON       reduce using rule 29 (assignment -> pointer EQUALS pointer .)


state 41

    (30) assignment -> pointer EQUALS NUMBER .

    COMMA           reduce using rule 30 (assignment -> pointer EQUALS NUMBER .)
    SEMICOLON       reduce using rule 30 (assignment -> pointer EQUALS NUMBER .)


state 42

    (31) assignment -> pointer EQUALS ID .

    COMMA           reduce using rule 31 (assignment -> pointer EQUALS ID .)
    SEMICOLON       reduce using rule 31 (assignment -> pointer EQUALS ID .)


state 43

    (13) address -> AMPERSAND pointer .

    COMMA           reduce using rule 13 (address -> AMPERSAND pointer .)
    SEMICOLON       reduce using rule 13 (address -> AMPERSAND pointer .)
    EQUALS          reduce using rule 13 (address -> AMPERSAND pointer .)


state 44

    (12) address -> AMPERSAND ID .

    COMMA           reduce using rule 12 (address -> AMPERSAND ID .)
    SEMICOLON       reduce using rule 12 (address -> AMPERSAND ID .)
    EQUALS          reduce using rule 12 (address -> AMPERSAND ID .)


state 45

    (25) assignmentlist -> assignment COMMA assignmentlist .

    SEMICOLON       reduce using rule 25 (assignmentlist -> assignment COMMA assignmentlist .)


state 46

    (27) assignment -> ID EQUALS address .

    COMMA           reduce using rule 27 (assignment -> ID EQUALS address .)
    SEMICOLON       reduce using rule 27 (assignment -> ID EQUALS address .)


state 47

    (28) assignment -> ID EQUALS ID .

    COMMA           reduce using rule 28 (assignment -> ID EQUALS ID .)
    SEMICOLON       reduce using rule 28 (assignment -> ID EQUALS ID .)


state 48

    (20) idlist -> pointer COMMA . idlist
    (20) idlist -> . pointer COMMA idlist
    (21) idlist -> . ID COMMA idlist
    (22) idlist -> . ID
    (23) idlist -> . pointer
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address

    ID              shift and go to state 38
    STAR            shift and go to state 18

    pointer                        shift and go to state 37
    idlist                         shift and go to state 51

state 49

    (21) idlist -> ID COMMA . idlist
    (20) idlist -> . pointer COMMA idlist
    (21) idlist -> . ID COMMA idlist
    (22) idlist -> . ID
    (23) idlist -> . pointer
    (9) pointer -> . STAR pointer
    (10) pointer -> . STAR ID
    (11) pointer -> . STAR address

    ID              shift and go to state 38
    STAR            shift and go to state 18

    pointer                        shift and go to state 37
    idlist                         shift and go to state 52

state 50

    (19) declaration -> type idlist SEMICOLON .

    COMMENT         reduce using rule 19 (declaration -> type idlist SEMICOLON .)
    INT             reduce using rule 19 (declaration -> type idlist SEMICOLON .)
    VOID            reduce using rule 19 (declaration -> type idlist SEMICOLON .)
    ID              reduce using rule 19 (declaration -> type idlist SEMICOLON .)
    STAR            reduce using rule 19 (declaration -> type idlist SEMICOLON .)
    RBRACE          reduce using rule 19 (declaration -> type idlist SEMICOLON .)


state 51

    (20) idlist -> pointer COMMA idlist .

    SEMICOLON       reduce using rule 20 (idlist -> pointer COMMA idlist .)


state 52

    (21) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 21 (idlist -> ID COMMA idlist .)

