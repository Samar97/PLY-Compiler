Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE
Rule 3     type -> INT
Rule 4     type -> VOID
Rule 5     var -> ID
Rule 6     const -> NUMBER
Rule 7     pointer -> TIMES pointer
Rule 8     pointer -> TIMES address
Rule 9     pointer -> TIMES var
Rule 10    address -> AND pointer
Rule 11    address -> AND address
Rule 12    address -> AND var
Rule 13    statements -> statement statements
Rule 14    statements -> <empty>
Rule 15    statement -> declaration
Rule 16    statement -> assignment
Rule 17    statement -> ifstatement
Rule 18    statement -> whilestatement
Rule 19    statement -> COMMENT
Rule 20    declaration -> type idlist SEMICOLON
Rule 21    idlist -> pointer COMMA idlist
Rule 22    idlist -> ID COMMA idlist
Rule 23    idlist -> ID
Rule 24    idlist -> pointer
Rule 25    assignment -> pointer EQUALS expression SEMICOLON
Rule 26    assignment -> var EQUALS expression SEMICOLON
Rule 27    condition -> condition LESSER condition
Rule 28    condition -> condition GREATER condition
Rule 29    condition -> condition LESSEREQUAL condition
Rule 30    condition -> condition GREATEREQUAL condition
Rule 31    condition -> condition EQUALITY condition
Rule 32    condition -> condition UNEQUAL condition
Rule 33    condition -> condition AND condition
Rule 34    condition -> condition OR condition
Rule 35    condition -> expression
Rule 36    controlbody -> LBRACE statements RBRACE
Rule 37    controlbody -> statement
Rule 38    controlbody -> SEMICOLON
Rule 39    ifstatement -> IF LPAREN condition RPAREN controlbody
Rule 40    ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody
Rule 41    whilestatement -> WHILE LPAREN condition RPAREN controlbody
Rule 42    expression -> expression PLUS expression
Rule 43    expression -> expression MINUS expression
Rule 44    expression -> expression TIMES expression
Rule 45    expression -> expression DIVIDE expression
Rule 46    expression -> pointer
Rule 47    expression -> address
Rule 48    expression -> const
Rule 49    expression -> var
Rule 50    expression -> LPAREN expression RPAREN
Rule 51    expression -> MINUS expression

Terminals, with rules where they appear

AND                  : 10 11 12 33
COMMA                : 21 22
COMMENT              : 19
DIVIDE               : 45
ELSE                 : 40
EQUALITY             : 31
EQUALS               : 25 26
GREATER              : 28
GREATEREQUAL         : 30
ID                   : 5 22 23
IF                   : 39 40
INT                  : 3
LBRACE               : 2 36
LESSER               : 27
LESSEREQUAL          : 29
LPAREN               : 2 39 40 41 50
MAIN                 : 2
MINUS                : 43 51
NUMBER               : 6
OR                   : 34
PLUS                 : 42
RBRACE               : 2 36
RPAREN               : 2 39 40 41 50
SEMICOLON            : 20 25 26 38
TIMES                : 7 8 9 44
UNEQUAL              : 32
VOID                 : 2 4
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

address              : 8 11 47
assignment           : 16
condition            : 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 39 40 41
const                : 48
controlbody          : 39 40 40 41
declaration          : 15
expression           : 25 26 35 42 42 43 43 44 44 45 45 50 51
function             : 1
idlist               : 20 21 22
ifstatement          : 17
pointer              : 7 10 21 24 25 46
start                : 0
statement            : 13 37
statements           : 2 13 36
type                 : 20
var                  : 9 12 26 49
whilestatement       : 18

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . VOID MAIN LPAREN RPAREN LBRACE statements RBRACE

    VOID            shift and go to state 2

    function                       shift and go to state 1
    start                          shift and go to state 3

state 1

    (1) start -> function .

    $end            reduce using rule 1 (start -> function .)


state 2

    (2) function -> VOID . MAIN LPAREN RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 4


state 3

    (0) S' -> start .



state 4

    (2) function -> VOID MAIN . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 5


state 5

    (2) function -> VOID MAIN LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 6


state 6

    (2) function -> VOID MAIN LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 7


state 7

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE . statements RBRACE
    (13) statements -> . statement statements
    (14) statements -> .
    (15) statement -> . declaration
    (16) statement -> . assignment
    (17) statement -> . ifstatement
    (18) statement -> . whilestatement
    (19) statement -> . COMMENT
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    RBRACE          reduce using rule 14 (statements -> .)
    COMMENT         shift and go to state 15
    IF              shift and go to state 13
    WHILE           shift and go to state 22
    INT             shift and go to state 18
    VOID            shift and go to state 8
    TIMES           shift and go to state 16
    ID              shift and go to state 17

    type                           shift and go to state 19
    ifstatement                    shift and go to state 20
    var                            shift and go to state 21
    pointer                        shift and go to state 14
    assignment                     shift and go to state 10
    statements                     shift and go to state 11
    whilestatement                 shift and go to state 12
    declaration                    shift and go to state 9
    statement                      shift and go to state 23

state 8

    (4) type -> VOID .

    ID              reduce using rule 4 (type -> VOID .)
    TIMES           reduce using rule 4 (type -> VOID .)


state 9

    (15) statement -> declaration .

    ELSE            reduce using rule 15 (statement -> declaration .)
    COMMENT         reduce using rule 15 (statement -> declaration .)
    IF              reduce using rule 15 (statement -> declaration .)
    WHILE           reduce using rule 15 (statement -> declaration .)
    INT             reduce using rule 15 (statement -> declaration .)
    VOID            reduce using rule 15 (statement -> declaration .)
    TIMES           reduce using rule 15 (statement -> declaration .)
    ID              reduce using rule 15 (statement -> declaration .)
    RBRACE          reduce using rule 15 (statement -> declaration .)


state 10

    (16) statement -> assignment .

    ELSE            reduce using rule 16 (statement -> assignment .)
    COMMENT         reduce using rule 16 (statement -> assignment .)
    IF              reduce using rule 16 (statement -> assignment .)
    WHILE           reduce using rule 16 (statement -> assignment .)
    INT             reduce using rule 16 (statement -> assignment .)
    VOID            reduce using rule 16 (statement -> assignment .)
    TIMES           reduce using rule 16 (statement -> assignment .)
    ID              reduce using rule 16 (statement -> assignment .)
    RBRACE          reduce using rule 16 (statement -> assignment .)


state 11

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 24


state 12

    (18) statement -> whilestatement .

    ELSE            reduce using rule 18 (statement -> whilestatement .)
    COMMENT         reduce using rule 18 (statement -> whilestatement .)
    IF              reduce using rule 18 (statement -> whilestatement .)
    WHILE           reduce using rule 18 (statement -> whilestatement .)
    INT             reduce using rule 18 (statement -> whilestatement .)
    VOID            reduce using rule 18 (statement -> whilestatement .)
    TIMES           reduce using rule 18 (statement -> whilestatement .)
    ID              reduce using rule 18 (statement -> whilestatement .)
    RBRACE          reduce using rule 18 (statement -> whilestatement .)


state 13

    (39) ifstatement -> IF . LPAREN condition RPAREN controlbody
    (40) ifstatement -> IF . LPAREN condition RPAREN controlbody ELSE controlbody

    LPAREN          shift and go to state 25


state 14

    (25) assignment -> pointer . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 26


state 15

    (19) statement -> COMMENT .

    ELSE            reduce using rule 19 (statement -> COMMENT .)
    COMMENT         reduce using rule 19 (statement -> COMMENT .)
    IF              reduce using rule 19 (statement -> COMMENT .)
    WHILE           reduce using rule 19 (statement -> COMMENT .)
    INT             reduce using rule 19 (statement -> COMMENT .)
    VOID            reduce using rule 19 (statement -> COMMENT .)
    TIMES           reduce using rule 19 (statement -> COMMENT .)
    ID              reduce using rule 19 (statement -> COMMENT .)
    RBRACE          reduce using rule 19 (statement -> COMMENT .)


state 16

    (7) pointer -> TIMES . pointer
    (8) pointer -> TIMES . address
    (9) pointer -> TIMES . var
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (5) var -> . ID

    TIMES           shift and go to state 16
    AND             shift and go to state 28
    ID              shift and go to state 17

    address                        shift and go to state 27
    var                            shift and go to state 29
    pointer                        shift and go to state 30

state 17

    (5) var -> ID .

    RPAREN          reduce using rule 5 (var -> ID .)
    PLUS            reduce using rule 5 (var -> ID .)
    MINUS           reduce using rule 5 (var -> ID .)
    TIMES           reduce using rule 5 (var -> ID .)
    DIVIDE          reduce using rule 5 (var -> ID .)
    EQUALS          reduce using rule 5 (var -> ID .)
    LESSER          reduce using rule 5 (var -> ID .)
    GREATER         reduce using rule 5 (var -> ID .)
    LESSEREQUAL     reduce using rule 5 (var -> ID .)
    GREATEREQUAL    reduce using rule 5 (var -> ID .)
    EQUALITY        reduce using rule 5 (var -> ID .)
    UNEQUAL         reduce using rule 5 (var -> ID .)
    AND             reduce using rule 5 (var -> ID .)
    OR              reduce using rule 5 (var -> ID .)
    SEMICOLON       reduce using rule 5 (var -> ID .)
    COMMA           reduce using rule 5 (var -> ID .)


state 18

    (3) type -> INT .

    ID              reduce using rule 3 (type -> INT .)
    TIMES           reduce using rule 3 (type -> INT .)


state 19

    (20) declaration -> type . idlist SEMICOLON
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 31
    TIMES           shift and go to state 16

    idlist                         shift and go to state 32
    pointer                        shift and go to state 33

state 20

    (17) statement -> ifstatement .

    ELSE            reduce using rule 17 (statement -> ifstatement .)
    COMMENT         reduce using rule 17 (statement -> ifstatement .)
    IF              reduce using rule 17 (statement -> ifstatement .)
    WHILE           reduce using rule 17 (statement -> ifstatement .)
    INT             reduce using rule 17 (statement -> ifstatement .)
    VOID            reduce using rule 17 (statement -> ifstatement .)
    TIMES           reduce using rule 17 (statement -> ifstatement .)
    ID              reduce using rule 17 (statement -> ifstatement .)
    RBRACE          reduce using rule 17 (statement -> ifstatement .)


state 21

    (26) assignment -> var . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 34


state 22

    (41) whilestatement -> WHILE . LPAREN condition RPAREN controlbody

    LPAREN          shift and go to state 35


state 23

    (13) statements -> statement . statements
    (13) statements -> . statement statements
    (14) statements -> .
    (15) statement -> . declaration
    (16) statement -> . assignment
    (17) statement -> . ifstatement
    (18) statement -> . whilestatement
    (19) statement -> . COMMENT
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    RBRACE          reduce using rule 14 (statements -> .)
    COMMENT         shift and go to state 15
    IF              shift and go to state 13
    WHILE           shift and go to state 22
    INT             shift and go to state 18
    VOID            shift and go to state 8
    TIMES           shift and go to state 16
    ID              shift and go to state 17

    type                           shift and go to state 19
    ifstatement                    shift and go to state 20
    var                            shift and go to state 21
    pointer                        shift and go to state 14
    assignment                     shift and go to state 10
    statements                     shift and go to state 36
    whilestatement                 shift and go to state 12
    declaration                    shift and go to state 9
    statement                      shift and go to state 23

state 24

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE .)


state 25

    (39) ifstatement -> IF LPAREN . condition RPAREN controlbody
    (40) ifstatement -> IF LPAREN . condition RPAREN controlbody ELSE controlbody
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 40
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 26

    (25) assignment -> pointer EQUALS . expression SEMICOLON
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    expression                     shift and go to state 46
    const                          shift and go to state 38
    address                        shift and go to state 45
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 27

    (8) pointer -> TIMES address .

    PLUS            reduce using rule 8 (pointer -> TIMES address .)
    MINUS           reduce using rule 8 (pointer -> TIMES address .)
    TIMES           reduce using rule 8 (pointer -> TIMES address .)
    DIVIDE          reduce using rule 8 (pointer -> TIMES address .)
    LESSER          reduce using rule 8 (pointer -> TIMES address .)
    GREATER         reduce using rule 8 (pointer -> TIMES address .)
    LESSEREQUAL     reduce using rule 8 (pointer -> TIMES address .)
    GREATEREQUAL    reduce using rule 8 (pointer -> TIMES address .)
    EQUALITY        reduce using rule 8 (pointer -> TIMES address .)
    UNEQUAL         reduce using rule 8 (pointer -> TIMES address .)
    AND             reduce using rule 8 (pointer -> TIMES address .)
    OR              reduce using rule 8 (pointer -> TIMES address .)
    RPAREN          reduce using rule 8 (pointer -> TIMES address .)
    SEMICOLON       reduce using rule 8 (pointer -> TIMES address .)
    EQUALS          reduce using rule 8 (pointer -> TIMES address .)
    COMMA           reduce using rule 8 (pointer -> TIMES address .)


state 28

    (10) address -> AND . pointer
    (11) address -> AND . address
    (12) address -> AND . var
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (5) var -> . ID

    TIMES           shift and go to state 16
    AND             shift and go to state 28
    ID              shift and go to state 17

    address                        shift and go to state 47
    var                            shift and go to state 48
    pointer                        shift and go to state 49

state 29

    (9) pointer -> TIMES var .

    PLUS            reduce using rule 9 (pointer -> TIMES var .)
    MINUS           reduce using rule 9 (pointer -> TIMES var .)
    TIMES           reduce using rule 9 (pointer -> TIMES var .)
    DIVIDE          reduce using rule 9 (pointer -> TIMES var .)
    LESSER          reduce using rule 9 (pointer -> TIMES var .)
    GREATER         reduce using rule 9 (pointer -> TIMES var .)
    LESSEREQUAL     reduce using rule 9 (pointer -> TIMES var .)
    GREATEREQUAL    reduce using rule 9 (pointer -> TIMES var .)
    EQUALITY        reduce using rule 9 (pointer -> TIMES var .)
    UNEQUAL         reduce using rule 9 (pointer -> TIMES var .)
    AND             reduce using rule 9 (pointer -> TIMES var .)
    OR              reduce using rule 9 (pointer -> TIMES var .)
    RPAREN          reduce using rule 9 (pointer -> TIMES var .)
    SEMICOLON       reduce using rule 9 (pointer -> TIMES var .)
    EQUALS          reduce using rule 9 (pointer -> TIMES var .)
    COMMA           reduce using rule 9 (pointer -> TIMES var .)


state 30

    (7) pointer -> TIMES pointer .

    PLUS            reduce using rule 7 (pointer -> TIMES pointer .)
    MINUS           reduce using rule 7 (pointer -> TIMES pointer .)
    TIMES           reduce using rule 7 (pointer -> TIMES pointer .)
    DIVIDE          reduce using rule 7 (pointer -> TIMES pointer .)
    LESSER          reduce using rule 7 (pointer -> TIMES pointer .)
    GREATER         reduce using rule 7 (pointer -> TIMES pointer .)
    LESSEREQUAL     reduce using rule 7 (pointer -> TIMES pointer .)
    GREATEREQUAL    reduce using rule 7 (pointer -> TIMES pointer .)
    EQUALITY        reduce using rule 7 (pointer -> TIMES pointer .)
    UNEQUAL         reduce using rule 7 (pointer -> TIMES pointer .)
    AND             reduce using rule 7 (pointer -> TIMES pointer .)
    OR              reduce using rule 7 (pointer -> TIMES pointer .)
    RPAREN          reduce using rule 7 (pointer -> TIMES pointer .)
    SEMICOLON       reduce using rule 7 (pointer -> TIMES pointer .)
    EQUALS          reduce using rule 7 (pointer -> TIMES pointer .)
    COMMA           reduce using rule 7 (pointer -> TIMES pointer .)


state 31

    (22) idlist -> ID . COMMA idlist
    (23) idlist -> ID .

    COMMA           shift and go to state 50
    SEMICOLON       reduce using rule 23 (idlist -> ID .)


state 32

    (20) declaration -> type idlist . SEMICOLON

    SEMICOLON       shift and go to state 51


state 33

    (21) idlist -> pointer . COMMA idlist
    (24) idlist -> pointer .

    COMMA           shift and go to state 52
    SEMICOLON       reduce using rule 24 (idlist -> pointer .)


state 34

    (26) assignment -> var EQUALS . expression SEMICOLON
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    expression                     shift and go to state 53
    const                          shift and go to state 38
    address                        shift and go to state 45
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 35

    (41) whilestatement -> WHILE LPAREN . condition RPAREN controlbody
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 54
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 36

    (13) statements -> statement statements .

    RBRACE          reduce using rule 13 (statements -> statement statements .)


state 37

    (6) const -> NUMBER .

    PLUS            reduce using rule 6 (const -> NUMBER .)
    MINUS           reduce using rule 6 (const -> NUMBER .)
    TIMES           reduce using rule 6 (const -> NUMBER .)
    DIVIDE          reduce using rule 6 (const -> NUMBER .)
    LESSER          reduce using rule 6 (const -> NUMBER .)
    GREATER         reduce using rule 6 (const -> NUMBER .)
    LESSEREQUAL     reduce using rule 6 (const -> NUMBER .)
    GREATEREQUAL    reduce using rule 6 (const -> NUMBER .)
    EQUALITY        reduce using rule 6 (const -> NUMBER .)
    UNEQUAL         reduce using rule 6 (const -> NUMBER .)
    AND             reduce using rule 6 (const -> NUMBER .)
    OR              reduce using rule 6 (const -> NUMBER .)
    RPAREN          reduce using rule 6 (const -> NUMBER .)
    SEMICOLON       reduce using rule 6 (const -> NUMBER .)


state 38

    (48) expression -> const .

    PLUS            reduce using rule 48 (expression -> const .)
    MINUS           reduce using rule 48 (expression -> const .)
    TIMES           reduce using rule 48 (expression -> const .)
    DIVIDE          reduce using rule 48 (expression -> const .)
    RPAREN          reduce using rule 48 (expression -> const .)
    LESSER          reduce using rule 48 (expression -> const .)
    GREATER         reduce using rule 48 (expression -> const .)
    LESSEREQUAL     reduce using rule 48 (expression -> const .)
    GREATEREQUAL    reduce using rule 48 (expression -> const .)
    EQUALITY        reduce using rule 48 (expression -> const .)
    UNEQUAL         reduce using rule 48 (expression -> const .)
    AND             reduce using rule 48 (expression -> const .)
    OR              reduce using rule 48 (expression -> const .)
    SEMICOLON       reduce using rule 48 (expression -> const .)


state 39

    (46) expression -> pointer .

    PLUS            reduce using rule 46 (expression -> pointer .)
    MINUS           reduce using rule 46 (expression -> pointer .)
    TIMES           reduce using rule 46 (expression -> pointer .)
    DIVIDE          reduce using rule 46 (expression -> pointer .)
    RPAREN          reduce using rule 46 (expression -> pointer .)
    LESSER          reduce using rule 46 (expression -> pointer .)
    GREATER         reduce using rule 46 (expression -> pointer .)
    LESSEREQUAL     reduce using rule 46 (expression -> pointer .)
    GREATEREQUAL    reduce using rule 46 (expression -> pointer .)
    EQUALITY        reduce using rule 46 (expression -> pointer .)
    UNEQUAL         reduce using rule 46 (expression -> pointer .)
    AND             reduce using rule 46 (expression -> pointer .)
    OR              reduce using rule 46 (expression -> pointer .)
    SEMICOLON       reduce using rule 46 (expression -> pointer .)


state 40

    (39) ifstatement -> IF LPAREN condition . RPAREN controlbody
    (40) ifstatement -> IF LPAREN condition . RPAREN controlbody ELSE controlbody
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    RPAREN          shift and go to state 63
    LESSER          shift and go to state 58
    GREATER         shift and go to state 61
    LESSEREQUAL     shift and go to state 56
    GREATEREQUAL    shift and go to state 57
    EQUALITY        shift and go to state 55
    UNEQUAL         shift and go to state 60
    AND             shift and go to state 59
    OR              shift and go to state 62


state 41

    (35) condition -> expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    LESSER          reduce using rule 35 (condition -> expression .)
    GREATER         reduce using rule 35 (condition -> expression .)
    LESSEREQUAL     reduce using rule 35 (condition -> expression .)
    GREATEREQUAL    reduce using rule 35 (condition -> expression .)
    EQUALITY        reduce using rule 35 (condition -> expression .)
    UNEQUAL         reduce using rule 35 (condition -> expression .)
    AND             reduce using rule 35 (condition -> expression .)
    OR              reduce using rule 35 (condition -> expression .)
    RPAREN          reduce using rule 35 (condition -> expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 64


state 42

    (51) expression -> MINUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    expression                     shift and go to state 68
    const                          shift and go to state 38
    address                        shift and go to state 45
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 43

    (49) expression -> var .

    PLUS            reduce using rule 49 (expression -> var .)
    MINUS           reduce using rule 49 (expression -> var .)
    TIMES           reduce using rule 49 (expression -> var .)
    DIVIDE          reduce using rule 49 (expression -> var .)
    RPAREN          reduce using rule 49 (expression -> var .)
    LESSER          reduce using rule 49 (expression -> var .)
    GREATER         reduce using rule 49 (expression -> var .)
    LESSEREQUAL     reduce using rule 49 (expression -> var .)
    GREATEREQUAL    reduce using rule 49 (expression -> var .)
    EQUALITY        reduce using rule 49 (expression -> var .)
    UNEQUAL         reduce using rule 49 (expression -> var .)
    AND             reduce using rule 49 (expression -> var .)
    OR              reduce using rule 49 (expression -> var .)
    SEMICOLON       reduce using rule 49 (expression -> var .)


state 44

    (50) expression -> LPAREN . expression RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    expression                     shift and go to state 69
    const                          shift and go to state 38
    address                        shift and go to state 45
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 45

    (47) expression -> address .

    PLUS            reduce using rule 47 (expression -> address .)
    MINUS           reduce using rule 47 (expression -> address .)
    TIMES           reduce using rule 47 (expression -> address .)
    DIVIDE          reduce using rule 47 (expression -> address .)
    RPAREN          reduce using rule 47 (expression -> address .)
    LESSER          reduce using rule 47 (expression -> address .)
    GREATER         reduce using rule 47 (expression -> address .)
    LESSEREQUAL     reduce using rule 47 (expression -> address .)
    GREATEREQUAL    reduce using rule 47 (expression -> address .)
    EQUALITY        reduce using rule 47 (expression -> address .)
    UNEQUAL         reduce using rule 47 (expression -> address .)
    AND             reduce using rule 47 (expression -> address .)
    OR              reduce using rule 47 (expression -> address .)
    SEMICOLON       reduce using rule 47 (expression -> address .)


state 46

    (25) assignment -> pointer EQUALS expression . SEMICOLON
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 70
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 64


state 47

    (11) address -> AND address .

    PLUS            reduce using rule 11 (address -> AND address .)
    MINUS           reduce using rule 11 (address -> AND address .)
    TIMES           reduce using rule 11 (address -> AND address .)
    DIVIDE          reduce using rule 11 (address -> AND address .)
    LESSER          reduce using rule 11 (address -> AND address .)
    GREATER         reduce using rule 11 (address -> AND address .)
    LESSEREQUAL     reduce using rule 11 (address -> AND address .)
    GREATEREQUAL    reduce using rule 11 (address -> AND address .)
    EQUALITY        reduce using rule 11 (address -> AND address .)
    UNEQUAL         reduce using rule 11 (address -> AND address .)
    AND             reduce using rule 11 (address -> AND address .)
    OR              reduce using rule 11 (address -> AND address .)
    RPAREN          reduce using rule 11 (address -> AND address .)
    SEMICOLON       reduce using rule 11 (address -> AND address .)
    EQUALS          reduce using rule 11 (address -> AND address .)
    COMMA           reduce using rule 11 (address -> AND address .)


state 48

    (12) address -> AND var .

    PLUS            reduce using rule 12 (address -> AND var .)
    MINUS           reduce using rule 12 (address -> AND var .)
    TIMES           reduce using rule 12 (address -> AND var .)
    DIVIDE          reduce using rule 12 (address -> AND var .)
    LESSER          reduce using rule 12 (address -> AND var .)
    GREATER         reduce using rule 12 (address -> AND var .)
    LESSEREQUAL     reduce using rule 12 (address -> AND var .)
    GREATEREQUAL    reduce using rule 12 (address -> AND var .)
    EQUALITY        reduce using rule 12 (address -> AND var .)
    UNEQUAL         reduce using rule 12 (address -> AND var .)
    AND             reduce using rule 12 (address -> AND var .)
    OR              reduce using rule 12 (address -> AND var .)
    RPAREN          reduce using rule 12 (address -> AND var .)
    SEMICOLON       reduce using rule 12 (address -> AND var .)
    EQUALS          reduce using rule 12 (address -> AND var .)
    COMMA           reduce using rule 12 (address -> AND var .)


state 49

    (10) address -> AND pointer .

    PLUS            reduce using rule 10 (address -> AND pointer .)
    MINUS           reduce using rule 10 (address -> AND pointer .)
    TIMES           reduce using rule 10 (address -> AND pointer .)
    DIVIDE          reduce using rule 10 (address -> AND pointer .)
    LESSER          reduce using rule 10 (address -> AND pointer .)
    GREATER         reduce using rule 10 (address -> AND pointer .)
    LESSEREQUAL     reduce using rule 10 (address -> AND pointer .)
    GREATEREQUAL    reduce using rule 10 (address -> AND pointer .)
    EQUALITY        reduce using rule 10 (address -> AND pointer .)
    UNEQUAL         reduce using rule 10 (address -> AND pointer .)
    AND             reduce using rule 10 (address -> AND pointer .)
    OR              reduce using rule 10 (address -> AND pointer .)
    RPAREN          reduce using rule 10 (address -> AND pointer .)
    SEMICOLON       reduce using rule 10 (address -> AND pointer .)
    EQUALS          reduce using rule 10 (address -> AND pointer .)
    COMMA           reduce using rule 10 (address -> AND pointer .)


state 50

    (22) idlist -> ID COMMA . idlist
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 31
    TIMES           shift and go to state 16

    idlist                         shift and go to state 71
    pointer                        shift and go to state 33

state 51

    (20) declaration -> type idlist SEMICOLON .

    ELSE            reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    COMMENT         reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    IF              reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    WHILE           reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    INT             reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    VOID            reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    TIMES           reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    ID              reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    RBRACE          reduce using rule 20 (declaration -> type idlist SEMICOLON .)


state 52

    (21) idlist -> pointer COMMA . idlist
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 31
    TIMES           shift and go to state 16

    idlist                         shift and go to state 72
    pointer                        shift and go to state 33

state 53

    (26) assignment -> var EQUALS expression . SEMICOLON
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 73
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 64


state 54

    (41) whilestatement -> WHILE LPAREN condition . RPAREN controlbody
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    RPAREN          shift and go to state 74
    LESSER          shift and go to state 58
    GREATER         shift and go to state 61
    LESSEREQUAL     shift and go to state 56
    GREATEREQUAL    shift and go to state 57
    EQUALITY        shift and go to state 55
    UNEQUAL         shift and go to state 60
    AND             shift and go to state 59
    OR              shift and go to state 62


state 55

    (31) condition -> condition EQUALITY . condition
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 75
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 56

    (29) condition -> condition LESSEREQUAL . condition
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 76
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 57

    (30) condition -> condition GREATEREQUAL . condition
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 77
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 58

    (27) condition -> condition LESSER . condition
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 78
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 59

    (33) condition -> condition AND . condition
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 79
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 60

    (32) condition -> condition UNEQUAL . condition
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 80
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 61

    (28) condition -> condition GREATER . condition
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 81
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 62

    (34) condition -> condition OR . condition
    (27) condition -> . condition LESSER condition
    (28) condition -> . condition GREATER condition
    (29) condition -> . condition LESSEREQUAL condition
    (30) condition -> . condition GREATEREQUAL condition
    (31) condition -> . condition EQUALITY condition
    (32) condition -> . condition UNEQUAL condition
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    const                          shift and go to state 38
    condition                      shift and go to state 82
    address                        shift and go to state 45
    expression                     shift and go to state 41
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 63

    (39) ifstatement -> IF LPAREN condition RPAREN . controlbody
    (40) ifstatement -> IF LPAREN condition RPAREN . controlbody ELSE controlbody
    (36) controlbody -> . LBRACE statements RBRACE
    (37) controlbody -> . statement
    (38) controlbody -> . SEMICOLON
    (15) statement -> . declaration
    (16) statement -> . assignment
    (17) statement -> . ifstatement
    (18) statement -> . whilestatement
    (19) statement -> . COMMENT
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 83
    SEMICOLON       shift and go to state 84
    COMMENT         shift and go to state 15
    IF              shift and go to state 13
    WHILE           shift and go to state 22
    INT             shift and go to state 18
    VOID            shift and go to state 8
    TIMES           shift and go to state 16
    ID              shift and go to state 17

    type                           shift and go to state 19
    var                            shift and go to state 21
    ifstatement                    shift and go to state 20
    declaration                    shift and go to state 9
    pointer                        shift and go to state 14
    assignment                     shift and go to state 10
    whilestatement                 shift and go to state 12
    controlbody                    shift and go to state 86
    statement                      shift and go to state 85

state 64

    (45) expression -> expression DIVIDE . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    expression                     shift and go to state 87
    const                          shift and go to state 38
    address                        shift and go to state 45
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 65

    (44) expression -> expression TIMES . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    expression                     shift and go to state 88
    const                          shift and go to state 38
    address                        shift and go to state 45
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 66

    (42) expression -> expression PLUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    expression                     shift and go to state 89
    const                          shift and go to state 38
    address                        shift and go to state 45
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 67

    (43) expression -> expression MINUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AND pointer
    (11) address -> . AND address
    (12) address -> . AND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 44
    MINUS           shift and go to state 42
    TIMES           shift and go to state 16
    AND             shift and go to state 28
    NUMBER          shift and go to state 37
    ID              shift and go to state 17

    expression                     shift and go to state 90
    const                          shift and go to state 38
    address                        shift and go to state 45
    var                            shift and go to state 43
    pointer                        shift and go to state 39

state 68

    (51) expression -> MINUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 51 (expression -> MINUS expression .)
    MINUS           reduce using rule 51 (expression -> MINUS expression .)
    TIMES           reduce using rule 51 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 51 (expression -> MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> MINUS expression .)
    LESSER          reduce using rule 51 (expression -> MINUS expression .)
    GREATER         reduce using rule 51 (expression -> MINUS expression .)
    LESSEREQUAL     reduce using rule 51 (expression -> MINUS expression .)
    GREATEREQUAL    reduce using rule 51 (expression -> MINUS expression .)
    EQUALITY        reduce using rule 51 (expression -> MINUS expression .)
    UNEQUAL         reduce using rule 51 (expression -> MINUS expression .)
    AND             reduce using rule 51 (expression -> MINUS expression .)
    OR              reduce using rule 51 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 51 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 66 ]
  ! MINUS           [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 64 ]


state 69

    (50) expression -> LPAREN expression . RPAREN
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 91
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 64


state 70

    (25) assignment -> pointer EQUALS expression SEMICOLON .

    COMMENT         reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    IF              reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    INT             reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    VOID            reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    TIMES           reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    ID              reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)


state 71

    (22) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 22 (idlist -> ID COMMA idlist .)


state 72

    (21) idlist -> pointer COMMA idlist .

    SEMICOLON       reduce using rule 21 (idlist -> pointer COMMA idlist .)


state 73

    (26) assignment -> var EQUALS expression SEMICOLON .

    COMMENT         reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    IF              reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    INT             reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    VOID            reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    TIMES           reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    ID              reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)


state 74

    (41) whilestatement -> WHILE LPAREN condition RPAREN . controlbody
    (36) controlbody -> . LBRACE statements RBRACE
    (37) controlbody -> . statement
    (38) controlbody -> . SEMICOLON
    (15) statement -> . declaration
    (16) statement -> . assignment
    (17) statement -> . ifstatement
    (18) statement -> . whilestatement
    (19) statement -> . COMMENT
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 83
    SEMICOLON       shift and go to state 84
    COMMENT         shift and go to state 15
    IF              shift and go to state 13
    WHILE           shift and go to state 22
    INT             shift and go to state 18
    VOID            shift and go to state 8
    TIMES           shift and go to state 16
    ID              shift and go to state 17

    type                           shift and go to state 19
    var                            shift and go to state 21
    ifstatement                    shift and go to state 20
    declaration                    shift and go to state 9
    pointer                        shift and go to state 14
    assignment                     shift and go to state 10
    whilestatement                 shift and go to state 12
    controlbody                    shift and go to state 92
    statement                      shift and go to state 85

state 75

    (31) condition -> condition EQUALITY condition .
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    EQUALITY        reduce using rule 31 (condition -> condition EQUALITY condition .)
    UNEQUAL         reduce using rule 31 (condition -> condition EQUALITY condition .)
    AND             reduce using rule 31 (condition -> condition EQUALITY condition .)
    OR              reduce using rule 31 (condition -> condition EQUALITY condition .)
    RPAREN          reduce using rule 31 (condition -> condition EQUALITY condition .)
    LESSER          shift and go to state 58
    GREATER         shift and go to state 61
    LESSEREQUAL     shift and go to state 56
    GREATEREQUAL    shift and go to state 57

  ! LESSER          [ reduce using rule 31 (condition -> condition EQUALITY condition .) ]
  ! GREATER         [ reduce using rule 31 (condition -> condition EQUALITY condition .) ]
  ! LESSEREQUAL     [ reduce using rule 31 (condition -> condition EQUALITY condition .) ]
  ! GREATEREQUAL    [ reduce using rule 31 (condition -> condition EQUALITY condition .) ]
  ! EQUALITY        [ shift and go to state 55 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 62 ]


state 76

    (29) condition -> condition LESSEREQUAL condition .
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    LESSER          reduce using rule 29 (condition -> condition LESSEREQUAL condition .)
    GREATER         reduce using rule 29 (condition -> condition LESSEREQUAL condition .)
    LESSEREQUAL     reduce using rule 29 (condition -> condition LESSEREQUAL condition .)
    GREATEREQUAL    reduce using rule 29 (condition -> condition LESSEREQUAL condition .)
    EQUALITY        reduce using rule 29 (condition -> condition LESSEREQUAL condition .)
    UNEQUAL         reduce using rule 29 (condition -> condition LESSEREQUAL condition .)
    AND             reduce using rule 29 (condition -> condition LESSEREQUAL condition .)
    OR              reduce using rule 29 (condition -> condition LESSEREQUAL condition .)
    RPAREN          reduce using rule 29 (condition -> condition LESSEREQUAL condition .)

  ! LESSER          [ shift and go to state 58 ]
  ! GREATER         [ shift and go to state 61 ]
  ! LESSEREQUAL     [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]
  ! EQUALITY        [ shift and go to state 55 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 62 ]


state 77

    (30) condition -> condition GREATEREQUAL condition .
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    LESSER          reduce using rule 30 (condition -> condition GREATEREQUAL condition .)
    GREATER         reduce using rule 30 (condition -> condition GREATEREQUAL condition .)
    LESSEREQUAL     reduce using rule 30 (condition -> condition GREATEREQUAL condition .)
    GREATEREQUAL    reduce using rule 30 (condition -> condition GREATEREQUAL condition .)
    EQUALITY        reduce using rule 30 (condition -> condition GREATEREQUAL condition .)
    UNEQUAL         reduce using rule 30 (condition -> condition GREATEREQUAL condition .)
    AND             reduce using rule 30 (condition -> condition GREATEREQUAL condition .)
    OR              reduce using rule 30 (condition -> condition GREATEREQUAL condition .)
    RPAREN          reduce using rule 30 (condition -> condition GREATEREQUAL condition .)

  ! LESSER          [ shift and go to state 58 ]
  ! GREATER         [ shift and go to state 61 ]
  ! LESSEREQUAL     [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]
  ! EQUALITY        [ shift and go to state 55 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 62 ]


state 78

    (27) condition -> condition LESSER condition .
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    LESSER          reduce using rule 27 (condition -> condition LESSER condition .)
    GREATER         reduce using rule 27 (condition -> condition LESSER condition .)
    LESSEREQUAL     reduce using rule 27 (condition -> condition LESSER condition .)
    GREATEREQUAL    reduce using rule 27 (condition -> condition LESSER condition .)
    EQUALITY        reduce using rule 27 (condition -> condition LESSER condition .)
    UNEQUAL         reduce using rule 27 (condition -> condition LESSER condition .)
    AND             reduce using rule 27 (condition -> condition LESSER condition .)
    OR              reduce using rule 27 (condition -> condition LESSER condition .)
    RPAREN          reduce using rule 27 (condition -> condition LESSER condition .)

  ! LESSER          [ shift and go to state 58 ]
  ! GREATER         [ shift and go to state 61 ]
  ! LESSEREQUAL     [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]
  ! EQUALITY        [ shift and go to state 55 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 62 ]


state 79

    (33) condition -> condition AND condition .
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    AND             reduce using rule 33 (condition -> condition AND condition .)
    OR              reduce using rule 33 (condition -> condition AND condition .)
    RPAREN          reduce using rule 33 (condition -> condition AND condition .)
    LESSER          shift and go to state 58
    GREATER         shift and go to state 61
    LESSEREQUAL     shift and go to state 56
    GREATEREQUAL    shift and go to state 57
    EQUALITY        shift and go to state 55
    UNEQUAL         shift and go to state 60

  ! LESSER          [ reduce using rule 33 (condition -> condition AND condition .) ]
  ! GREATER         [ reduce using rule 33 (condition -> condition AND condition .) ]
  ! LESSEREQUAL     [ reduce using rule 33 (condition -> condition AND condition .) ]
  ! GREATEREQUAL    [ reduce using rule 33 (condition -> condition AND condition .) ]
  ! EQUALITY        [ reduce using rule 33 (condition -> condition AND condition .) ]
  ! UNEQUAL         [ reduce using rule 33 (condition -> condition AND condition .) ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 62 ]


state 80

    (32) condition -> condition UNEQUAL condition .
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    EQUALITY        reduce using rule 32 (condition -> condition UNEQUAL condition .)
    UNEQUAL         reduce using rule 32 (condition -> condition UNEQUAL condition .)
    AND             reduce using rule 32 (condition -> condition UNEQUAL condition .)
    OR              reduce using rule 32 (condition -> condition UNEQUAL condition .)
    RPAREN          reduce using rule 32 (condition -> condition UNEQUAL condition .)
    LESSER          shift and go to state 58
    GREATER         shift and go to state 61
    LESSEREQUAL     shift and go to state 56
    GREATEREQUAL    shift and go to state 57

  ! LESSER          [ reduce using rule 32 (condition -> condition UNEQUAL condition .) ]
  ! GREATER         [ reduce using rule 32 (condition -> condition UNEQUAL condition .) ]
  ! LESSEREQUAL     [ reduce using rule 32 (condition -> condition UNEQUAL condition .) ]
  ! GREATEREQUAL    [ reduce using rule 32 (condition -> condition UNEQUAL condition .) ]
  ! EQUALITY        [ shift and go to state 55 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 62 ]


state 81

    (28) condition -> condition GREATER condition .
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    LESSER          reduce using rule 28 (condition -> condition GREATER condition .)
    GREATER         reduce using rule 28 (condition -> condition GREATER condition .)
    LESSEREQUAL     reduce using rule 28 (condition -> condition GREATER condition .)
    GREATEREQUAL    reduce using rule 28 (condition -> condition GREATER condition .)
    EQUALITY        reduce using rule 28 (condition -> condition GREATER condition .)
    UNEQUAL         reduce using rule 28 (condition -> condition GREATER condition .)
    AND             reduce using rule 28 (condition -> condition GREATER condition .)
    OR              reduce using rule 28 (condition -> condition GREATER condition .)
    RPAREN          reduce using rule 28 (condition -> condition GREATER condition .)

  ! LESSER          [ shift and go to state 58 ]
  ! GREATER         [ shift and go to state 61 ]
  ! LESSEREQUAL     [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]
  ! EQUALITY        [ shift and go to state 55 ]
  ! UNEQUAL         [ shift and go to state 60 ]
  ! AND             [ shift and go to state 59 ]
  ! OR              [ shift and go to state 62 ]


state 82

    (34) condition -> condition OR condition .
    (27) condition -> condition . LESSER condition
    (28) condition -> condition . GREATER condition
    (29) condition -> condition . LESSEREQUAL condition
    (30) condition -> condition . GREATEREQUAL condition
    (31) condition -> condition . EQUALITY condition
    (32) condition -> condition . UNEQUAL condition
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    OR              reduce using rule 34 (condition -> condition OR condition .)
    RPAREN          reduce using rule 34 (condition -> condition OR condition .)
    LESSER          shift and go to state 58
    GREATER         shift and go to state 61
    LESSEREQUAL     shift and go to state 56
    GREATEREQUAL    shift and go to state 57
    EQUALITY        shift and go to state 55
    UNEQUAL         shift and go to state 60
    AND             shift and go to state 59

  ! LESSER          [ reduce using rule 34 (condition -> condition OR condition .) ]
  ! GREATER         [ reduce using rule 34 (condition -> condition OR condition .) ]
  ! LESSEREQUAL     [ reduce using rule 34 (condition -> condition OR condition .) ]
  ! GREATEREQUAL    [ reduce using rule 34 (condition -> condition OR condition .) ]
  ! EQUALITY        [ reduce using rule 34 (condition -> condition OR condition .) ]
  ! UNEQUAL         [ reduce using rule 34 (condition -> condition OR condition .) ]
  ! AND             [ reduce using rule 34 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 62 ]


state 83

    (36) controlbody -> LBRACE . statements RBRACE
    (13) statements -> . statement statements
    (14) statements -> .
    (15) statement -> . declaration
    (16) statement -> . assignment
    (17) statement -> . ifstatement
    (18) statement -> . whilestatement
    (19) statement -> . COMMENT
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    RBRACE          reduce using rule 14 (statements -> .)
    COMMENT         shift and go to state 15
    IF              shift and go to state 13
    WHILE           shift and go to state 22
    INT             shift and go to state 18
    VOID            shift and go to state 8
    TIMES           shift and go to state 16
    ID              shift and go to state 17

    type                           shift and go to state 19
    ifstatement                    shift and go to state 20
    var                            shift and go to state 21
    pointer                        shift and go to state 14
    assignment                     shift and go to state 10
    statements                     shift and go to state 93
    whilestatement                 shift and go to state 12
    declaration                    shift and go to state 9
    statement                      shift and go to state 23

state 84

    (38) controlbody -> SEMICOLON .

    ELSE            reduce using rule 38 (controlbody -> SEMICOLON .)
    COMMENT         reduce using rule 38 (controlbody -> SEMICOLON .)
    IF              reduce using rule 38 (controlbody -> SEMICOLON .)
    WHILE           reduce using rule 38 (controlbody -> SEMICOLON .)
    INT             reduce using rule 38 (controlbody -> SEMICOLON .)
    VOID            reduce using rule 38 (controlbody -> SEMICOLON .)
    TIMES           reduce using rule 38 (controlbody -> SEMICOLON .)
    ID              reduce using rule 38 (controlbody -> SEMICOLON .)
    RBRACE          reduce using rule 38 (controlbody -> SEMICOLON .)


state 85

    (37) controlbody -> statement .

    ELSE            reduce using rule 37 (controlbody -> statement .)
    COMMENT         reduce using rule 37 (controlbody -> statement .)
    IF              reduce using rule 37 (controlbody -> statement .)
    WHILE           reduce using rule 37 (controlbody -> statement .)
    INT             reduce using rule 37 (controlbody -> statement .)
    VOID            reduce using rule 37 (controlbody -> statement .)
    TIMES           reduce using rule 37 (controlbody -> statement .)
    ID              reduce using rule 37 (controlbody -> statement .)
    RBRACE          reduce using rule 37 (controlbody -> statement .)


state 86

    (39) ifstatement -> IF LPAREN condition RPAREN controlbody .
    (40) ifstatement -> IF LPAREN condition RPAREN controlbody . ELSE controlbody

    COMMENT         reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    IF              reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    WHILE           reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    INT             reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    VOID            reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    TIMES           reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    ID              reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    RBRACE          reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    ELSE            shift and go to state 94

  ! ELSE            [ reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .) ]


state 87

    (45) expression -> expression DIVIDE expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 45 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 45 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 45 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 45 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 45 (expression -> expression DIVIDE expression .)
    LESSER          reduce using rule 45 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 45 (expression -> expression DIVIDE expression .)
    LESSEREQUAL     reduce using rule 45 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 45 (expression -> expression DIVIDE expression .)
    EQUALITY        reduce using rule 45 (expression -> expression DIVIDE expression .)
    UNEQUAL         reduce using rule 45 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 45 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 45 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 66 ]
  ! MINUS           [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 64 ]


state 88

    (44) expression -> expression TIMES expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 44 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 44 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 44 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 44 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 44 (expression -> expression TIMES expression .)
    LESSER          reduce using rule 44 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 44 (expression -> expression TIMES expression .)
    LESSEREQUAL     reduce using rule 44 (expression -> expression TIMES expression .)
    GREATEREQUAL    reduce using rule 44 (expression -> expression TIMES expression .)
    EQUALITY        reduce using rule 44 (expression -> expression TIMES expression .)
    UNEQUAL         reduce using rule 44 (expression -> expression TIMES expression .)
    AND             reduce using rule 44 (expression -> expression TIMES expression .)
    OR              reduce using rule 44 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 66 ]
  ! MINUS           [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 64 ]


state 89

    (42) expression -> expression PLUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 42 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 42 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 42 (expression -> expression PLUS expression .)
    LESSER          reduce using rule 42 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 42 (expression -> expression PLUS expression .)
    LESSEREQUAL     reduce using rule 42 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 42 (expression -> expression PLUS expression .)
    EQUALITY        reduce using rule 42 (expression -> expression PLUS expression .)
    UNEQUAL         reduce using rule 42 (expression -> expression PLUS expression .)
    AND             reduce using rule 42 (expression -> expression PLUS expression .)
    OR              reduce using rule 42 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 64

  ! TIMES           [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 66 ]
  ! MINUS           [ shift and go to state 67 ]


state 90

    (43) expression -> expression MINUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 43 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 43 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 43 (expression -> expression MINUS expression .)
    LESSER          reduce using rule 43 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 43 (expression -> expression MINUS expression .)
    LESSEREQUAL     reduce using rule 43 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 43 (expression -> expression MINUS expression .)
    EQUALITY        reduce using rule 43 (expression -> expression MINUS expression .)
    UNEQUAL         reduce using rule 43 (expression -> expression MINUS expression .)
    AND             reduce using rule 43 (expression -> expression MINUS expression .)
    OR              reduce using rule 43 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 64

  ! TIMES           [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 66 ]
  ! MINUS           [ shift and go to state 67 ]


state 91

    (50) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LESSER          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LESSEREQUAL     reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    EQUALITY        reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    UNEQUAL         reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 50 (expression -> LPAREN expression RPAREN .)


state 92

    (41) whilestatement -> WHILE LPAREN condition RPAREN controlbody .

    COMMENT         reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    IF              reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    WHILE           reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    INT             reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    VOID            reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    TIMES           reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    ID              reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    RBRACE          reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    ELSE            reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)


state 93

    (36) controlbody -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 95


state 94

    (40) ifstatement -> IF LPAREN condition RPAREN controlbody ELSE . controlbody
    (36) controlbody -> . LBRACE statements RBRACE
    (37) controlbody -> . statement
    (38) controlbody -> . SEMICOLON
    (15) statement -> . declaration
    (16) statement -> . assignment
    (17) statement -> . ifstatement
    (18) statement -> . whilestatement
    (19) statement -> . COMMENT
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 83
    SEMICOLON       shift and go to state 84
    COMMENT         shift and go to state 15
    IF              shift and go to state 13
    WHILE           shift and go to state 22
    INT             shift and go to state 18
    VOID            shift and go to state 8
    TIMES           shift and go to state 16
    ID              shift and go to state 17

    type                           shift and go to state 19
    var                            shift and go to state 21
    ifstatement                    shift and go to state 20
    declaration                    shift and go to state 9
    pointer                        shift and go to state 14
    assignment                     shift and go to state 10
    whilestatement                 shift and go to state 12
    controlbody                    shift and go to state 96
    statement                      shift and go to state 85

state 95

    (36) controlbody -> LBRACE statements RBRACE .

    ELSE            reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    COMMENT         reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    IF              reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    INT             reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    VOID            reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    TIMES           reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    ID              reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)


state 96

    (40) ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .

    ELSE            reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    COMMENT         reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    IF              reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    WHILE           reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    INT             reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    VOID            reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    TIMES           reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    ID              reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    RBRACE          reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)

