Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE
Rule 3     type -> INT
Rule 4     type -> VOID
Rule 5     var -> ID
Rule 6     const -> NUMBER
Rule 7     pointer -> TIMES pointer
Rule 8     pointer -> TIMES address
Rule 9     pointer -> TIMES var
Rule 10    address -> AMPERSAND pointer
Rule 11    address -> AMPERSAND address
Rule 12    address -> AMPERSAND var
Rule 13    statements -> statement statements
Rule 14    statements -> COMMENT statements
Rule 15    statements -> declaration statements
Rule 16    statements -> <empty>
Rule 17    statement -> assignment
Rule 18    statement -> ifstatement
Rule 19    statement -> whilestatement
Rule 20    declaration -> type idlist SEMICOLON
Rule 21    idlist -> pointer COMMA idlist
Rule 22    idlist -> ID COMMA idlist
Rule 23    idlist -> ID
Rule 24    idlist -> pointer
Rule 25    assignment -> pointer EQUALS expression SEMICOLON
Rule 26    assignment -> var EQUALS expression SEMICOLON
Rule 27    condition -> expression LT expression
Rule 28    condition -> expression GT expression
Rule 29    condition -> expression LE expression
Rule 30    condition -> expression GE expression
Rule 31    condition -> expression EQ expression
Rule 32    condition -> condition AND condition
Rule 33    condition -> condition OR condition
Rule 34    condition -> NOT condition
Rule 35    condition -> LPAREN condition RPAREN
Rule 36    controlbody -> LBRACE statements RBRACE
Rule 37    controlbody -> statement
Rule 38    controlbody -> SEMICOLON
Rule 39    ifstatement -> IF LPAREN condition RPAREN controlbody
Rule 40    ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody
Rule 41    whilestatement -> WHILE LPAREN condition RPAREN controlbody
Rule 42    expression -> expression PLUS expression
Rule 43    expression -> expression MINUS expression
Rule 44    expression -> expression TIMES expression
Rule 45    expression -> expression DIVIDE expression
Rule 46    expression -> pointer
Rule 47    expression -> address
Rule 48    expression -> const
Rule 49    expression -> var
Rule 50    expression -> LPAREN expression RPAREN
Rule 51    expression -> MINUS expression

Terminals, with rules where they appear

AMPERSAND            : 10 11 12
AND                  : 32
COMMA                : 21 22
COMMENT              : 14
DIVIDE               : 45
ELSE                 : 40
EQ                   : 31
EQUALS               : 25 26
GE                   : 30
GT                   : 28
ID                   : 5 22 23
IF                   : 39 40
INT                  : 3
LBRACE               : 2 36
LE                   : 29
LPAREN               : 2 35 39 40 41 50
LT                   : 27
MAIN                 : 2
MINUS                : 43 51
NOT                  : 34
NUMBER               : 6
OR                   : 33
PLUS                 : 42
RBRACE               : 2 36
RPAREN               : 2 35 39 40 41 50
SEMICOLON            : 20 25 26 38
TIMES                : 7 8 9 44
VOID                 : 2 4
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

address              : 8 11 47
assignment           : 17
condition            : 32 32 33 33 34 35 39 40 41
const                : 48
controlbody          : 39 40 40 41
declaration          : 15
expression           : 25 26 27 27 28 28 29 29 30 30 31 31 42 42 43 43 44 44 45 45 50 51
function             : 1
idlist               : 20 21 22
ifstatement          : 18
pointer              : 7 10 21 24 25 46
start                : 0
statement            : 13 37
statements           : 2 13 14 15 36
type                 : 20
var                  : 9 12 26 49
whilestatement       : 19

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . VOID MAIN LPAREN RPAREN LBRACE statements RBRACE

    VOID            shift and go to state 2

    function                       shift and go to state 1
    start                          shift and go to state 3

state 1

    (1) start -> function .

    $end            reduce using rule 1 (start -> function .)


state 2

    (2) function -> VOID . MAIN LPAREN RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 4


state 3

    (0) S' -> start .



state 4

    (2) function -> VOID MAIN . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 5


state 5

    (2) function -> VOID MAIN LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 6


state 6

    (2) function -> VOID MAIN LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 7


state 7

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE . statements RBRACE
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 12
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 10
    INT             shift and go to state 22
    VOID            shift and go to state 9
    TIMES           shift and go to state 19
    ID              shift and go to state 20

    statements                     shift and go to state 8
    assignment                     shift and go to state 17
    whilestatement                 shift and go to state 13
    statement                      shift and go to state 14
    declaration                    shift and go to state 18
    var                            shift and go to state 15
    type                           shift and go to state 16
    pointer                        shift and go to state 11
    ifstatement                    shift and go to state 23

state 8

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 24


state 9

    (4) type -> VOID .

    ID              reduce using rule 4 (type -> VOID .)
    TIMES           reduce using rule 4 (type -> VOID .)


state 10

    (41) whilestatement -> WHILE . LPAREN condition RPAREN controlbody

    LPAREN          shift and go to state 25


state 11

    (25) assignment -> pointer . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 26


state 12

    (14) statements -> COMMENT . statements
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 12
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 10
    INT             shift and go to state 22
    VOID            shift and go to state 9
    TIMES           shift and go to state 19
    ID              shift and go to state 20

    statements                     shift and go to state 27
    assignment                     shift and go to state 17
    whilestatement                 shift and go to state 13
    statement                      shift and go to state 14
    declaration                    shift and go to state 18
    var                            shift and go to state 15
    type                           shift and go to state 16
    pointer                        shift and go to state 11
    ifstatement                    shift and go to state 23

state 13

    (19) statement -> whilestatement .

    COMMENT         reduce using rule 19 (statement -> whilestatement .)
    IF              reduce using rule 19 (statement -> whilestatement .)
    WHILE           reduce using rule 19 (statement -> whilestatement .)
    INT             reduce using rule 19 (statement -> whilestatement .)
    VOID            reduce using rule 19 (statement -> whilestatement .)
    TIMES           reduce using rule 19 (statement -> whilestatement .)
    ID              reduce using rule 19 (statement -> whilestatement .)
    RBRACE          reduce using rule 19 (statement -> whilestatement .)
    ELSE            reduce using rule 19 (statement -> whilestatement .)


state 14

    (13) statements -> statement . statements
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 12
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 10
    INT             shift and go to state 22
    VOID            shift and go to state 9
    TIMES           shift and go to state 19
    ID              shift and go to state 20

    statements                     shift and go to state 28
    assignment                     shift and go to state 17
    whilestatement                 shift and go to state 13
    statement                      shift and go to state 14
    declaration                    shift and go to state 18
    var                            shift and go to state 15
    type                           shift and go to state 16
    pointer                        shift and go to state 11
    ifstatement                    shift and go to state 23

state 15

    (26) assignment -> var . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 29


state 16

    (20) declaration -> type . idlist SEMICOLON
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 32
    TIMES           shift and go to state 19

    pointer                        shift and go to state 31
    idlist                         shift and go to state 30

state 17

    (17) statement -> assignment .

    COMMENT         reduce using rule 17 (statement -> assignment .)
    IF              reduce using rule 17 (statement -> assignment .)
    WHILE           reduce using rule 17 (statement -> assignment .)
    INT             reduce using rule 17 (statement -> assignment .)
    VOID            reduce using rule 17 (statement -> assignment .)
    TIMES           reduce using rule 17 (statement -> assignment .)
    ID              reduce using rule 17 (statement -> assignment .)
    RBRACE          reduce using rule 17 (statement -> assignment .)
    ELSE            reduce using rule 17 (statement -> assignment .)


state 18

    (15) statements -> declaration . statements
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 12
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 10
    INT             shift and go to state 22
    VOID            shift and go to state 9
    TIMES           shift and go to state 19
    ID              shift and go to state 20

    statements                     shift and go to state 33
    assignment                     shift and go to state 17
    whilestatement                 shift and go to state 13
    statement                      shift and go to state 14
    declaration                    shift and go to state 18
    var                            shift and go to state 15
    type                           shift and go to state 16
    pointer                        shift and go to state 11
    ifstatement                    shift and go to state 23

state 19

    (7) pointer -> TIMES . pointer
    (8) pointer -> TIMES . address
    (9) pointer -> TIMES . var
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (5) var -> . ID

    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    ID              shift and go to state 20

    var                            shift and go to state 36
    pointer                        shift and go to state 37
    address                        shift and go to state 35

state 20

    (5) var -> ID .

    EQUALS          reduce using rule 5 (var -> ID .)
    PLUS            reduce using rule 5 (var -> ID .)
    MINUS           reduce using rule 5 (var -> ID .)
    TIMES           reduce using rule 5 (var -> ID .)
    DIVIDE          reduce using rule 5 (var -> ID .)
    RPAREN          reduce using rule 5 (var -> ID .)
    AND             reduce using rule 5 (var -> ID .)
    OR              reduce using rule 5 (var -> ID .)
    LT              reduce using rule 5 (var -> ID .)
    GT              reduce using rule 5 (var -> ID .)
    LE              reduce using rule 5 (var -> ID .)
    GE              reduce using rule 5 (var -> ID .)
    EQ              reduce using rule 5 (var -> ID .)
    COMMA           reduce using rule 5 (var -> ID .)
    SEMICOLON       reduce using rule 5 (var -> ID .)


state 21

    (39) ifstatement -> IF . LPAREN condition RPAREN controlbody
    (40) ifstatement -> IF . LPAREN condition RPAREN controlbody ELSE controlbody

    LPAREN          shift and go to state 38


state 22

    (3) type -> INT .

    ID              reduce using rule 3 (type -> INT .)
    TIMES           reduce using rule 3 (type -> INT .)


state 23

    (18) statement -> ifstatement .

    COMMENT         reduce using rule 18 (statement -> ifstatement .)
    IF              reduce using rule 18 (statement -> ifstatement .)
    WHILE           reduce using rule 18 (statement -> ifstatement .)
    INT             reduce using rule 18 (statement -> ifstatement .)
    VOID            reduce using rule 18 (statement -> ifstatement .)
    TIMES           reduce using rule 18 (statement -> ifstatement .)
    ID              reduce using rule 18 (statement -> ifstatement .)
    RBRACE          reduce using rule 18 (statement -> ifstatement .)
    ELSE            reduce using rule 18 (statement -> ifstatement .)


state 24

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE .)


state 25

    (41) whilestatement -> WHILE LPAREN . condition RPAREN controlbody
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . condition AND condition
    (33) condition -> . condition OR condition
    (34) condition -> . NOT condition
    (35) condition -> . LPAREN condition RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 47
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    address                        shift and go to state 44
    var                            shift and go to state 42
    expression                     shift and go to state 48
    condition                      shift and go to state 46

state 26

    (25) assignment -> pointer EQUALS . expression SEMICOLON
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    expression                     shift and go to state 50
    var                            shift and go to state 42
    pointer                        shift and go to state 40
    address                        shift and go to state 44

state 27

    (14) statements -> COMMENT statements .

    RBRACE          reduce using rule 14 (statements -> COMMENT statements .)


state 28

    (13) statements -> statement statements .

    RBRACE          reduce using rule 13 (statements -> statement statements .)


state 29

    (26) assignment -> var EQUALS . expression SEMICOLON
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    var                            shift and go to state 42
    pointer                        shift and go to state 40
    const                          shift and go to state 45
    expression                     shift and go to state 51
    address                        shift and go to state 44

state 30

    (20) declaration -> type idlist . SEMICOLON

    SEMICOLON       shift and go to state 52


state 31

    (21) idlist -> pointer . COMMA idlist
    (24) idlist -> pointer .

    COMMA           shift and go to state 53
    SEMICOLON       reduce using rule 24 (idlist -> pointer .)


state 32

    (22) idlist -> ID . COMMA idlist
    (23) idlist -> ID .

    COMMA           shift and go to state 54
    SEMICOLON       reduce using rule 23 (idlist -> ID .)


state 33

    (15) statements -> declaration statements .

    RBRACE          reduce using rule 15 (statements -> declaration statements .)


state 34

    (10) address -> AMPERSAND . pointer
    (11) address -> AMPERSAND . address
    (12) address -> AMPERSAND . var
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (5) var -> . ID

    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    ID              shift and go to state 20

    var                            shift and go to state 56
    pointer                        shift and go to state 57
    address                        shift and go to state 55

state 35

    (8) pointer -> TIMES address .

    SEMICOLON       reduce using rule 8 (pointer -> TIMES address .)
    PLUS            reduce using rule 8 (pointer -> TIMES address .)
    MINUS           reduce using rule 8 (pointer -> TIMES address .)
    TIMES           reduce using rule 8 (pointer -> TIMES address .)
    DIVIDE          reduce using rule 8 (pointer -> TIMES address .)
    COMMA           reduce using rule 8 (pointer -> TIMES address .)
    LT              reduce using rule 8 (pointer -> TIMES address .)
    GT              reduce using rule 8 (pointer -> TIMES address .)
    LE              reduce using rule 8 (pointer -> TIMES address .)
    GE              reduce using rule 8 (pointer -> TIMES address .)
    EQ              reduce using rule 8 (pointer -> TIMES address .)
    RPAREN          reduce using rule 8 (pointer -> TIMES address .)
    AND             reduce using rule 8 (pointer -> TIMES address .)
    OR              reduce using rule 8 (pointer -> TIMES address .)
    EQUALS          reduce using rule 8 (pointer -> TIMES address .)


state 36

    (9) pointer -> TIMES var .

    SEMICOLON       reduce using rule 9 (pointer -> TIMES var .)
    PLUS            reduce using rule 9 (pointer -> TIMES var .)
    MINUS           reduce using rule 9 (pointer -> TIMES var .)
    TIMES           reduce using rule 9 (pointer -> TIMES var .)
    DIVIDE          reduce using rule 9 (pointer -> TIMES var .)
    COMMA           reduce using rule 9 (pointer -> TIMES var .)
    LT              reduce using rule 9 (pointer -> TIMES var .)
    GT              reduce using rule 9 (pointer -> TIMES var .)
    LE              reduce using rule 9 (pointer -> TIMES var .)
    GE              reduce using rule 9 (pointer -> TIMES var .)
    EQ              reduce using rule 9 (pointer -> TIMES var .)
    RPAREN          reduce using rule 9 (pointer -> TIMES var .)
    AND             reduce using rule 9 (pointer -> TIMES var .)
    OR              reduce using rule 9 (pointer -> TIMES var .)
    EQUALS          reduce using rule 9 (pointer -> TIMES var .)


state 37

    (7) pointer -> TIMES pointer .

    SEMICOLON       reduce using rule 7 (pointer -> TIMES pointer .)
    PLUS            reduce using rule 7 (pointer -> TIMES pointer .)
    MINUS           reduce using rule 7 (pointer -> TIMES pointer .)
    TIMES           reduce using rule 7 (pointer -> TIMES pointer .)
    DIVIDE          reduce using rule 7 (pointer -> TIMES pointer .)
    COMMA           reduce using rule 7 (pointer -> TIMES pointer .)
    LT              reduce using rule 7 (pointer -> TIMES pointer .)
    GT              reduce using rule 7 (pointer -> TIMES pointer .)
    LE              reduce using rule 7 (pointer -> TIMES pointer .)
    GE              reduce using rule 7 (pointer -> TIMES pointer .)
    EQ              reduce using rule 7 (pointer -> TIMES pointer .)
    RPAREN          reduce using rule 7 (pointer -> TIMES pointer .)
    AND             reduce using rule 7 (pointer -> TIMES pointer .)
    OR              reduce using rule 7 (pointer -> TIMES pointer .)
    EQUALS          reduce using rule 7 (pointer -> TIMES pointer .)


state 38

    (39) ifstatement -> IF LPAREN . condition RPAREN controlbody
    (40) ifstatement -> IF LPAREN . condition RPAREN controlbody ELSE controlbody
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . condition AND condition
    (33) condition -> . condition OR condition
    (34) condition -> . NOT condition
    (35) condition -> . LPAREN condition RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 47
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    address                        shift and go to state 44
    var                            shift and go to state 42
    expression                     shift and go to state 48
    condition                      shift and go to state 58

state 39

    (6) const -> NUMBER .

    PLUS            reduce using rule 6 (const -> NUMBER .)
    MINUS           reduce using rule 6 (const -> NUMBER .)
    TIMES           reduce using rule 6 (const -> NUMBER .)
    DIVIDE          reduce using rule 6 (const -> NUMBER .)
    LT              reduce using rule 6 (const -> NUMBER .)
    GT              reduce using rule 6 (const -> NUMBER .)
    LE              reduce using rule 6 (const -> NUMBER .)
    GE              reduce using rule 6 (const -> NUMBER .)
    EQ              reduce using rule 6 (const -> NUMBER .)
    SEMICOLON       reduce using rule 6 (const -> NUMBER .)
    RPAREN          reduce using rule 6 (const -> NUMBER .)
    AND             reduce using rule 6 (const -> NUMBER .)
    OR              reduce using rule 6 (const -> NUMBER .)


state 40

    (46) expression -> pointer .

    PLUS            reduce using rule 46 (expression -> pointer .)
    MINUS           reduce using rule 46 (expression -> pointer .)
    TIMES           reduce using rule 46 (expression -> pointer .)
    DIVIDE          reduce using rule 46 (expression -> pointer .)
    RPAREN          reduce using rule 46 (expression -> pointer .)
    AND             reduce using rule 46 (expression -> pointer .)
    OR              reduce using rule 46 (expression -> pointer .)
    LT              reduce using rule 46 (expression -> pointer .)
    GT              reduce using rule 46 (expression -> pointer .)
    LE              reduce using rule 46 (expression -> pointer .)
    GE              reduce using rule 46 (expression -> pointer .)
    EQ              reduce using rule 46 (expression -> pointer .)
    SEMICOLON       reduce using rule 46 (expression -> pointer .)


state 41

    (51) expression -> MINUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 59
    address                        shift and go to state 44

state 42

    (49) expression -> var .

    PLUS            reduce using rule 49 (expression -> var .)
    MINUS           reduce using rule 49 (expression -> var .)
    TIMES           reduce using rule 49 (expression -> var .)
    DIVIDE          reduce using rule 49 (expression -> var .)
    RPAREN          reduce using rule 49 (expression -> var .)
    AND             reduce using rule 49 (expression -> var .)
    OR              reduce using rule 49 (expression -> var .)
    LT              reduce using rule 49 (expression -> var .)
    GT              reduce using rule 49 (expression -> var .)
    LE              reduce using rule 49 (expression -> var .)
    GE              reduce using rule 49 (expression -> var .)
    EQ              reduce using rule 49 (expression -> var .)
    SEMICOLON       reduce using rule 49 (expression -> var .)


state 43

    (35) condition -> LPAREN . condition RPAREN
    (50) expression -> LPAREN . expression RPAREN
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . condition AND condition
    (33) condition -> . condition OR condition
    (34) condition -> . NOT condition
    (35) condition -> . LPAREN condition RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 47
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    expression                     shift and go to state 61
    address                        shift and go to state 44
    var                            shift and go to state 42
    pointer                        shift and go to state 40
    condition                      shift and go to state 60

state 44

    (47) expression -> address .

    PLUS            reduce using rule 47 (expression -> address .)
    MINUS           reduce using rule 47 (expression -> address .)
    TIMES           reduce using rule 47 (expression -> address .)
    DIVIDE          reduce using rule 47 (expression -> address .)
    RPAREN          reduce using rule 47 (expression -> address .)
    AND             reduce using rule 47 (expression -> address .)
    OR              reduce using rule 47 (expression -> address .)
    LT              reduce using rule 47 (expression -> address .)
    GT              reduce using rule 47 (expression -> address .)
    LE              reduce using rule 47 (expression -> address .)
    GE              reduce using rule 47 (expression -> address .)
    EQ              reduce using rule 47 (expression -> address .)
    SEMICOLON       reduce using rule 47 (expression -> address .)


state 45

    (48) expression -> const .

    PLUS            reduce using rule 48 (expression -> const .)
    MINUS           reduce using rule 48 (expression -> const .)
    TIMES           reduce using rule 48 (expression -> const .)
    DIVIDE          reduce using rule 48 (expression -> const .)
    RPAREN          reduce using rule 48 (expression -> const .)
    AND             reduce using rule 48 (expression -> const .)
    OR              reduce using rule 48 (expression -> const .)
    LT              reduce using rule 48 (expression -> const .)
    GT              reduce using rule 48 (expression -> const .)
    LE              reduce using rule 48 (expression -> const .)
    GE              reduce using rule 48 (expression -> const .)
    EQ              reduce using rule 48 (expression -> const .)
    SEMICOLON       reduce using rule 48 (expression -> const .)


state 46

    (41) whilestatement -> WHILE LPAREN condition . RPAREN controlbody
    (32) condition -> condition . AND condition
    (33) condition -> condition . OR condition

    RPAREN          shift and go to state 63
    AND             shift and go to state 62
    OR              shift and go to state 64


state 47

    (34) condition -> NOT . condition
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . condition AND condition
    (33) condition -> . condition OR condition
    (34) condition -> . NOT condition
    (35) condition -> . LPAREN condition RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 47
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    expression                     shift and go to state 48
    address                        shift and go to state 44
    var                            shift and go to state 42
    pointer                        shift and go to state 40
    condition                      shift and go to state 65

state 48

    (27) condition -> expression . LT expression
    (28) condition -> expression . GT expression
    (29) condition -> expression . LE expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . EQ expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    LT              shift and go to state 69
    GT              shift and go to state 66
    LE              shift and go to state 72
    GE              shift and go to state 71
    EQ              shift and go to state 68
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 49

    (50) expression -> LPAREN . expression RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 75
    address                        shift and go to state 44

state 50

    (25) assignment -> pointer EQUALS expression . SEMICOLON
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 51

    (26) assignment -> var EQUALS expression . SEMICOLON
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 77
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 52

    (20) declaration -> type idlist SEMICOLON .

    COMMENT         reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    IF              reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    WHILE           reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    INT             reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    VOID            reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    TIMES           reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    ID              reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    RBRACE          reduce using rule 20 (declaration -> type idlist SEMICOLON .)


state 53

    (21) idlist -> pointer COMMA . idlist
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 32
    TIMES           shift and go to state 19

    pointer                        shift and go to state 31
    idlist                         shift and go to state 78

state 54

    (22) idlist -> ID COMMA . idlist
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 32
    TIMES           shift and go to state 19

    pointer                        shift and go to state 31
    idlist                         shift and go to state 79

state 55

    (11) address -> AMPERSAND address .

    LT              reduce using rule 11 (address -> AMPERSAND address .)
    GT              reduce using rule 11 (address -> AMPERSAND address .)
    LE              reduce using rule 11 (address -> AMPERSAND address .)
    GE              reduce using rule 11 (address -> AMPERSAND address .)
    EQ              reduce using rule 11 (address -> AMPERSAND address .)
    PLUS            reduce using rule 11 (address -> AMPERSAND address .)
    MINUS           reduce using rule 11 (address -> AMPERSAND address .)
    TIMES           reduce using rule 11 (address -> AMPERSAND address .)
    DIVIDE          reduce using rule 11 (address -> AMPERSAND address .)
    EQUALS          reduce using rule 11 (address -> AMPERSAND address .)
    COMMA           reduce using rule 11 (address -> AMPERSAND address .)
    SEMICOLON       reduce using rule 11 (address -> AMPERSAND address .)
    RPAREN          reduce using rule 11 (address -> AMPERSAND address .)
    AND             reduce using rule 11 (address -> AMPERSAND address .)
    OR              reduce using rule 11 (address -> AMPERSAND address .)


state 56

    (12) address -> AMPERSAND var .

    LT              reduce using rule 12 (address -> AMPERSAND var .)
    GT              reduce using rule 12 (address -> AMPERSAND var .)
    LE              reduce using rule 12 (address -> AMPERSAND var .)
    GE              reduce using rule 12 (address -> AMPERSAND var .)
    EQ              reduce using rule 12 (address -> AMPERSAND var .)
    PLUS            reduce using rule 12 (address -> AMPERSAND var .)
    MINUS           reduce using rule 12 (address -> AMPERSAND var .)
    TIMES           reduce using rule 12 (address -> AMPERSAND var .)
    DIVIDE          reduce using rule 12 (address -> AMPERSAND var .)
    EQUALS          reduce using rule 12 (address -> AMPERSAND var .)
    COMMA           reduce using rule 12 (address -> AMPERSAND var .)
    SEMICOLON       reduce using rule 12 (address -> AMPERSAND var .)
    RPAREN          reduce using rule 12 (address -> AMPERSAND var .)
    AND             reduce using rule 12 (address -> AMPERSAND var .)
    OR              reduce using rule 12 (address -> AMPERSAND var .)


state 57

    (10) address -> AMPERSAND pointer .

    LT              reduce using rule 10 (address -> AMPERSAND pointer .)
    GT              reduce using rule 10 (address -> AMPERSAND pointer .)
    LE              reduce using rule 10 (address -> AMPERSAND pointer .)
    GE              reduce using rule 10 (address -> AMPERSAND pointer .)
    EQ              reduce using rule 10 (address -> AMPERSAND pointer .)
    PLUS            reduce using rule 10 (address -> AMPERSAND pointer .)
    MINUS           reduce using rule 10 (address -> AMPERSAND pointer .)
    TIMES           reduce using rule 10 (address -> AMPERSAND pointer .)
    DIVIDE          reduce using rule 10 (address -> AMPERSAND pointer .)
    EQUALS          reduce using rule 10 (address -> AMPERSAND pointer .)
    COMMA           reduce using rule 10 (address -> AMPERSAND pointer .)
    SEMICOLON       reduce using rule 10 (address -> AMPERSAND pointer .)
    RPAREN          reduce using rule 10 (address -> AMPERSAND pointer .)
    AND             reduce using rule 10 (address -> AMPERSAND pointer .)
    OR              reduce using rule 10 (address -> AMPERSAND pointer .)


state 58

    (39) ifstatement -> IF LPAREN condition . RPAREN controlbody
    (40) ifstatement -> IF LPAREN condition . RPAREN controlbody ELSE controlbody
    (32) condition -> condition . AND condition
    (33) condition -> condition . OR condition

    RPAREN          shift and go to state 80
    AND             shift and go to state 62
    OR              shift and go to state 64


state 59

    (51) expression -> MINUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 51 (expression -> MINUS expression .)
    MINUS           reduce using rule 51 (expression -> MINUS expression .)
    TIMES           reduce using rule 51 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 51 (expression -> MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> MINUS expression .)
    AND             reduce using rule 51 (expression -> MINUS expression .)
    OR              reduce using rule 51 (expression -> MINUS expression .)
    LT              reduce using rule 51 (expression -> MINUS expression .)
    GT              reduce using rule 51 (expression -> MINUS expression .)
    LE              reduce using rule 51 (expression -> MINUS expression .)
    GE              reduce using rule 51 (expression -> MINUS expression .)
    EQ              reduce using rule 51 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 51 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! TIMES           [ shift and go to state 70 ]
  ! DIVIDE          [ shift and go to state 67 ]


state 60

    (35) condition -> LPAREN condition . RPAREN
    (32) condition -> condition . AND condition
    (33) condition -> condition . OR condition

    RPAREN          shift and go to state 81
    AND             shift and go to state 62
    OR              shift and go to state 64


state 61

    (50) expression -> LPAREN expression . RPAREN
    (27) condition -> expression . LT expression
    (28) condition -> expression . GT expression
    (29) condition -> expression . LE expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . EQ expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 82
    LT              shift and go to state 69
    GT              shift and go to state 66
    LE              shift and go to state 72
    GE              shift and go to state 71
    EQ              shift and go to state 68
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 62

    (32) condition -> condition AND . condition
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . condition AND condition
    (33) condition -> . condition OR condition
    (34) condition -> . NOT condition
    (35) condition -> . LPAREN condition RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 47
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    expression                     shift and go to state 48
    address                        shift and go to state 44
    var                            shift and go to state 42
    pointer                        shift and go to state 40
    condition                      shift and go to state 83

state 63

    (41) whilestatement -> WHILE LPAREN condition RPAREN . controlbody
    (36) controlbody -> . LBRACE statements RBRACE
    (37) controlbody -> . statement
    (38) controlbody -> . SEMICOLON
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 87
    SEMICOLON       shift and go to state 84
    IF              shift and go to state 21
    WHILE           shift and go to state 10
    TIMES           shift and go to state 19
    ID              shift and go to state 20

    assignment                     shift and go to state 17
    whilestatement                 shift and go to state 13
    pointer                        shift and go to state 11
    statement                      shift and go to state 86
    var                            shift and go to state 15
    controlbody                    shift and go to state 85
    ifstatement                    shift and go to state 23

state 64

    (33) condition -> condition OR . condition
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . condition AND condition
    (33) condition -> . condition OR condition
    (34) condition -> . NOT condition
    (35) condition -> . LPAREN condition RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 47
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    expression                     shift and go to state 48
    address                        shift and go to state 44
    var                            shift and go to state 42
    pointer                        shift and go to state 40
    condition                      shift and go to state 88

state 65

    (34) condition -> NOT condition .
    (32) condition -> condition . AND condition
    (33) condition -> condition . OR condition

    AND             reduce using rule 34 (condition -> NOT condition .)
    OR              reduce using rule 34 (condition -> NOT condition .)
    RPAREN          reduce using rule 34 (condition -> NOT condition .)

  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 64 ]


state 66

    (28) condition -> expression GT . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 89
    address                        shift and go to state 44

state 67

    (45) expression -> expression DIVIDE . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 90
    address                        shift and go to state 44

state 68

    (31) condition -> expression EQ . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 91
    address                        shift and go to state 44

state 69

    (27) condition -> expression LT . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 92
    address                        shift and go to state 44

state 70

    (44) expression -> expression TIMES . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 93
    address                        shift and go to state 44

state 71

    (30) condition -> expression GE . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 94
    address                        shift and go to state 44

state 72

    (29) condition -> expression LE . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 95
    address                        shift and go to state 44

state 73

    (42) expression -> expression PLUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 96
    address                        shift and go to state 44

state 74

    (43) expression -> expression MINUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression TIMES expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . pointer
    (47) expression -> . address
    (48) expression -> . const
    (49) expression -> . var
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 41
    TIMES           shift and go to state 19
    AMPERSAND       shift and go to state 34
    NUMBER          shift and go to state 39
    ID              shift and go to state 20

    const                          shift and go to state 45
    pointer                        shift and go to state 40
    var                            shift and go to state 42
    expression                     shift and go to state 97
    address                        shift and go to state 44

state 75

    (50) expression -> LPAREN expression . RPAREN
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 76

    (25) assignment -> pointer EQUALS expression SEMICOLON .

    COMMENT         reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    IF              reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    INT             reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    VOID            reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    TIMES           reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    ID              reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)


state 77

    (26) assignment -> var EQUALS expression SEMICOLON .

    COMMENT         reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    IF              reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    INT             reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    VOID            reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    TIMES           reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    ID              reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)


state 78

    (21) idlist -> pointer COMMA idlist .

    SEMICOLON       reduce using rule 21 (idlist -> pointer COMMA idlist .)


state 79

    (22) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 22 (idlist -> ID COMMA idlist .)


state 80

    (39) ifstatement -> IF LPAREN condition RPAREN . controlbody
    (40) ifstatement -> IF LPAREN condition RPAREN . controlbody ELSE controlbody
    (36) controlbody -> . LBRACE statements RBRACE
    (37) controlbody -> . statement
    (38) controlbody -> . SEMICOLON
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 87
    SEMICOLON       shift and go to state 84
    IF              shift and go to state 21
    WHILE           shift and go to state 10
    TIMES           shift and go to state 19
    ID              shift and go to state 20

    assignment                     shift and go to state 17
    whilestatement                 shift and go to state 13
    pointer                        shift and go to state 11
    statement                      shift and go to state 86
    var                            shift and go to state 15
    controlbody                    shift and go to state 98
    ifstatement                    shift and go to state 23

state 81

    (35) condition -> LPAREN condition RPAREN .

    AND             reduce using rule 35 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 35 (condition -> LPAREN condition RPAREN .)
    RPAREN          reduce using rule 35 (condition -> LPAREN condition RPAREN .)


state 82

    (50) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 50 (expression -> LPAREN expression RPAREN .)


state 83

    (32) condition -> condition AND condition .
    (32) condition -> condition . AND condition
    (33) condition -> condition . OR condition

    AND             reduce using rule 32 (condition -> condition AND condition .)
    OR              reduce using rule 32 (condition -> condition AND condition .)
    RPAREN          reduce using rule 32 (condition -> condition AND condition .)

  ! AND             [ shift and go to state 62 ]
  ! OR              [ shift and go to state 64 ]


state 84

    (38) controlbody -> SEMICOLON .

    COMMENT         reduce using rule 38 (controlbody -> SEMICOLON .)
    IF              reduce using rule 38 (controlbody -> SEMICOLON .)
    WHILE           reduce using rule 38 (controlbody -> SEMICOLON .)
    INT             reduce using rule 38 (controlbody -> SEMICOLON .)
    VOID            reduce using rule 38 (controlbody -> SEMICOLON .)
    TIMES           reduce using rule 38 (controlbody -> SEMICOLON .)
    ID              reduce using rule 38 (controlbody -> SEMICOLON .)
    RBRACE          reduce using rule 38 (controlbody -> SEMICOLON .)
    ELSE            reduce using rule 38 (controlbody -> SEMICOLON .)


state 85

    (41) whilestatement -> WHILE LPAREN condition RPAREN controlbody .

    COMMENT         reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    IF              reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    WHILE           reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    INT             reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    VOID            reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    TIMES           reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    ID              reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    RBRACE          reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    ELSE            reduce using rule 41 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)


state 86

    (37) controlbody -> statement .

    COMMENT         reduce using rule 37 (controlbody -> statement .)
    IF              reduce using rule 37 (controlbody -> statement .)
    WHILE           reduce using rule 37 (controlbody -> statement .)
    INT             reduce using rule 37 (controlbody -> statement .)
    VOID            reduce using rule 37 (controlbody -> statement .)
    TIMES           reduce using rule 37 (controlbody -> statement .)
    ID              reduce using rule 37 (controlbody -> statement .)
    RBRACE          reduce using rule 37 (controlbody -> statement .)
    ELSE            reduce using rule 37 (controlbody -> statement .)


state 87

    (36) controlbody -> LBRACE . statements RBRACE
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 12
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 10
    INT             shift and go to state 22
    VOID            shift and go to state 9
    TIMES           shift and go to state 19
    ID              shift and go to state 20

    statements                     shift and go to state 99
    assignment                     shift and go to state 17
    whilestatement                 shift and go to state 13
    statement                      shift and go to state 14
    declaration                    shift and go to state 18
    var                            shift and go to state 15
    type                           shift and go to state 16
    pointer                        shift and go to state 11
    ifstatement                    shift and go to state 23

state 88

    (33) condition -> condition OR condition .
    (32) condition -> condition . AND condition
    (33) condition -> condition . OR condition

    OR              reduce using rule 33 (condition -> condition OR condition .)
    RPAREN          reduce using rule 33 (condition -> condition OR condition .)
    AND             shift and go to state 62

  ! AND             [ reduce using rule 33 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 64 ]


state 89

    (28) condition -> expression GT expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    AND             reduce using rule 28 (condition -> expression GT expression .)
    OR              reduce using rule 28 (condition -> expression GT expression .)
    RPAREN          reduce using rule 28 (condition -> expression GT expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 90

    (45) expression -> expression DIVIDE expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 45 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 45 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 45 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 45 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 45 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 45 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 45 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 45 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 45 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 45 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 45 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 45 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! TIMES           [ shift and go to state 70 ]
  ! DIVIDE          [ shift and go to state 67 ]


state 91

    (31) condition -> expression EQ expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    AND             reduce using rule 31 (condition -> expression EQ expression .)
    OR              reduce using rule 31 (condition -> expression EQ expression .)
    RPAREN          reduce using rule 31 (condition -> expression EQ expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 92

    (27) condition -> expression LT expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    AND             reduce using rule 27 (condition -> expression LT expression .)
    OR              reduce using rule 27 (condition -> expression LT expression .)
    RPAREN          reduce using rule 27 (condition -> expression LT expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 93

    (44) expression -> expression TIMES expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 44 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 44 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 44 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 44 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 44 (expression -> expression TIMES expression .)
    AND             reduce using rule 44 (expression -> expression TIMES expression .)
    OR              reduce using rule 44 (expression -> expression TIMES expression .)
    LT              reduce using rule 44 (expression -> expression TIMES expression .)
    GT              reduce using rule 44 (expression -> expression TIMES expression .)
    LE              reduce using rule 44 (expression -> expression TIMES expression .)
    GE              reduce using rule 44 (expression -> expression TIMES expression .)
    EQ              reduce using rule 44 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! TIMES           [ shift and go to state 70 ]
  ! DIVIDE          [ shift and go to state 67 ]


state 94

    (30) condition -> expression GE expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    AND             reduce using rule 30 (condition -> expression GE expression .)
    OR              reduce using rule 30 (condition -> expression GE expression .)
    RPAREN          reduce using rule 30 (condition -> expression GE expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 95

    (29) condition -> expression LE expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    AND             reduce using rule 29 (condition -> expression LE expression .)
    OR              reduce using rule 29 (condition -> expression LE expression .)
    RPAREN          reduce using rule 29 (condition -> expression LE expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67


state 96

    (42) expression -> expression PLUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 42 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 42 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 42 (expression -> expression PLUS expression .)
    AND             reduce using rule 42 (expression -> expression PLUS expression .)
    OR              reduce using rule 42 (expression -> expression PLUS expression .)
    LT              reduce using rule 42 (expression -> expression PLUS expression .)
    GT              reduce using rule 42 (expression -> expression PLUS expression .)
    LE              reduce using rule 42 (expression -> expression PLUS expression .)
    GE              reduce using rule 42 (expression -> expression PLUS expression .)
    EQ              reduce using rule 42 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67

  ! TIMES           [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 97

    (43) expression -> expression MINUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . TIMES expression
    (45) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 43 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 43 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 43 (expression -> expression MINUS expression .)
    AND             reduce using rule 43 (expression -> expression MINUS expression .)
    OR              reduce using rule 43 (expression -> expression MINUS expression .)
    LT              reduce using rule 43 (expression -> expression MINUS expression .)
    GT              reduce using rule 43 (expression -> expression MINUS expression .)
    LE              reduce using rule 43 (expression -> expression MINUS expression .)
    GE              reduce using rule 43 (expression -> expression MINUS expression .)
    EQ              reduce using rule 43 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 67

  ! TIMES           [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 98

    (39) ifstatement -> IF LPAREN condition RPAREN controlbody .
    (40) ifstatement -> IF LPAREN condition RPAREN controlbody . ELSE controlbody

    COMMENT         reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    IF              reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    WHILE           reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    INT             reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    VOID            reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    TIMES           reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    ID              reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    RBRACE          reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    ELSE            shift and go to state 100

  ! ELSE            [ reduce using rule 39 (ifstatement -> IF LPAREN condition RPAREN controlbody .) ]


state 99

    (36) controlbody -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 101


state 100

    (40) ifstatement -> IF LPAREN condition RPAREN controlbody ELSE . controlbody
    (36) controlbody -> . LBRACE statements RBRACE
    (37) controlbody -> . statement
    (38) controlbody -> . SEMICOLON
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (39) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (41) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 87
    SEMICOLON       shift and go to state 84
    IF              shift and go to state 21
    WHILE           shift and go to state 10
    TIMES           shift and go to state 19
    ID              shift and go to state 20

    assignment                     shift and go to state 17
    whilestatement                 shift and go to state 13
    pointer                        shift and go to state 11
    statement                      shift and go to state 86
    var                            shift and go to state 15
    controlbody                    shift and go to state 102
    ifstatement                    shift and go to state 23

state 101

    (36) controlbody -> LBRACE statements RBRACE .

    COMMENT         reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    IF              reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    INT             reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    VOID            reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    TIMES           reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    ID              reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 36 (controlbody -> LBRACE statements RBRACE .)


state 102

    (40) ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .

    COMMENT         reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    IF              reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    WHILE           reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    INT             reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    VOID            reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    TIMES           reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    ID              reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    RBRACE          reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    ELSE            reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)

