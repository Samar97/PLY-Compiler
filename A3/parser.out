Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE
Rule 3     type -> INT
Rule 4     type -> VOID
Rule 5     var -> ID
Rule 6     const -> NUMBER
Rule 7     pointer -> TIMES pointer
Rule 8     pointer -> TIMES address
Rule 9     pointer -> TIMES var
Rule 10    address -> AMPERSAND pointer
Rule 11    address -> AMPERSAND address
Rule 12    address -> AMPERSAND var
Rule 13    statements -> statement statements
Rule 14    statements -> COMMENT statements
Rule 15    statements -> declaration statements
Rule 16    statements -> <empty>
Rule 17    statement -> assignment
Rule 18    statement -> ifstatement
Rule 19    statement -> whilestatement
Rule 20    declaration -> type idlist SEMICOLON
Rule 21    idlist -> pointer COMMA idlist
Rule 22    idlist -> ID COMMA idlist
Rule 23    idlist -> ID
Rule 24    idlist -> pointer
Rule 25    assignment -> pointer EQUALS expression SEMICOLON
Rule 26    assignment -> var EQUALS expression SEMICOLON
Rule 27    condition -> expression LT expression
Rule 28    condition -> expression GT expression
Rule 29    condition -> expression LE expression
Rule 30    condition -> expression GE expression
Rule 31    condition -> expression EQ expression
Rule 32    condition -> expression NE expression
Rule 33    condition -> condition AND condition
Rule 34    condition -> condition OR condition
Rule 35    condition -> NOT condition
Rule 36    condition -> LPAREN condition RPAREN
Rule 37    controlbody -> LBRACE statements RBRACE
Rule 38    controlbody -> statement
Rule 39    controlbody -> SEMICOLON
Rule 40    ifstatement -> IF LPAREN condition RPAREN controlbody
Rule 41    ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody
Rule 42    whilestatement -> WHILE LPAREN condition RPAREN controlbody
Rule 43    expression -> expression PLUS expression
Rule 44    expression -> expression MINUS expression
Rule 45    expression -> expression TIMES expression
Rule 46    expression -> expression DIVIDE expression
Rule 47    expression -> pointer
Rule 48    expression -> address
Rule 49    expression -> const
Rule 50    expression -> var
Rule 51    expression -> LPAREN expression RPAREN
Rule 52    expression -> MINUS expression

Terminals, with rules where they appear

AMPERSAND            : 10 11 12
AND                  : 33
COMMA                : 21 22
COMMENT              : 14
DIVIDE               : 46
ELSE                 : 41
EQ                   : 31
EQUALS               : 25 26
GE                   : 30
GT                   : 28
ID                   : 5 22 23
IF                   : 40 41
INT                  : 3
LBRACE               : 2 37
LE                   : 29
LPAREN               : 2 36 40 41 42 51
LT                   : 27
MAIN                 : 2
MINUS                : 44 52
NE                   : 32
NOT                  : 35
NUMBER               : 6
OR                   : 34
PLUS                 : 43
RBRACE               : 2 37
RPAREN               : 2 36 40 41 42 51
SEMICOLON            : 20 25 26 39
TIMES                : 7 8 9 45
VOID                 : 2 4
WHILE                : 42
error                : 

Nonterminals, with rules where they appear

address              : 8 11 48
assignment           : 17
condition            : 33 33 34 34 35 36 40 41 42
const                : 49
controlbody          : 40 41 41 42
declaration          : 15
expression           : 25 26 27 27 28 28 29 29 30 30 31 31 32 32 43 43 44 44 45 45 46 46 51 52
function             : 1
idlist               : 20 21 22
ifstatement          : 18
pointer              : 7 10 21 24 25 47
start                : 0
statement            : 13 38
statements           : 2 13 14 15 37
type                 : 20
var                  : 9 12 26 50
whilestatement       : 19

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . VOID MAIN LPAREN RPAREN LBRACE statements RBRACE

    VOID            shift and go to state 2

    start                          shift and go to state 1
    function                       shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (2) function -> VOID . MAIN LPAREN RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 4


state 3

    (1) start -> function .

    $end            reduce using rule 1 (start -> function .)


state 4

    (2) function -> VOID MAIN . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 5


state 5

    (2) function -> VOID MAIN LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 6


state 6

    (2) function -> VOID MAIN LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 7


state 7

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE . statements RBRACE
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (41) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (42) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 8
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 9
    WHILE           shift and go to state 18
    INT             shift and go to state 21
    VOID            shift and go to state 15
    TIMES           shift and go to state 17
    ID              shift and go to state 22

    var                            shift and go to state 10
    type                           shift and go to state 19
    assignment                     shift and go to state 11
    statement                      shift and go to state 20
    statements                     shift and go to state 16
    pointer                        shift and go to state 12
    whilestatement                 shift and go to state 13
    declaration                    shift and go to state 14
    ifstatement                    shift and go to state 23

state 8

    (14) statements -> COMMENT . statements
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (41) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (42) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 8
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 9
    WHILE           shift and go to state 18
    INT             shift and go to state 21
    VOID            shift and go to state 15
    TIMES           shift and go to state 17
    ID              shift and go to state 22

    var                            shift and go to state 10
    type                           shift and go to state 19
    assignment                     shift and go to state 11
    statement                      shift and go to state 20
    statements                     shift and go to state 24
    pointer                        shift and go to state 12
    whilestatement                 shift and go to state 13
    declaration                    shift and go to state 14
    ifstatement                    shift and go to state 23

state 9

    (40) ifstatement -> IF . LPAREN condition RPAREN controlbody
    (41) ifstatement -> IF . LPAREN condition RPAREN controlbody ELSE controlbody

    LPAREN          shift and go to state 25


state 10

    (26) assignment -> var . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 26


state 11

    (17) statement -> assignment .

    COMMENT         reduce using rule 17 (statement -> assignment .)
    IF              reduce using rule 17 (statement -> assignment .)
    WHILE           reduce using rule 17 (statement -> assignment .)
    INT             reduce using rule 17 (statement -> assignment .)
    VOID            reduce using rule 17 (statement -> assignment .)
    TIMES           reduce using rule 17 (statement -> assignment .)
    ID              reduce using rule 17 (statement -> assignment .)
    RBRACE          reduce using rule 17 (statement -> assignment .)
    ELSE            reduce using rule 17 (statement -> assignment .)


state 12

    (25) assignment -> pointer . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 27


state 13

    (19) statement -> whilestatement .

    COMMENT         reduce using rule 19 (statement -> whilestatement .)
    IF              reduce using rule 19 (statement -> whilestatement .)
    WHILE           reduce using rule 19 (statement -> whilestatement .)
    INT             reduce using rule 19 (statement -> whilestatement .)
    VOID            reduce using rule 19 (statement -> whilestatement .)
    TIMES           reduce using rule 19 (statement -> whilestatement .)
    ID              reduce using rule 19 (statement -> whilestatement .)
    RBRACE          reduce using rule 19 (statement -> whilestatement .)
    ELSE            reduce using rule 19 (statement -> whilestatement .)


state 14

    (15) statements -> declaration . statements
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (41) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (42) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 8
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 9
    WHILE           shift and go to state 18
    INT             shift and go to state 21
    VOID            shift and go to state 15
    TIMES           shift and go to state 17
    ID              shift and go to state 22

    var                            shift and go to state 10
    type                           shift and go to state 19
    assignment                     shift and go to state 11
    statement                      shift and go to state 20
    statements                     shift and go to state 28
    pointer                        shift and go to state 12
    whilestatement                 shift and go to state 13
    declaration                    shift and go to state 14
    ifstatement                    shift and go to state 23

state 15

    (4) type -> VOID .

    ID              reduce using rule 4 (type -> VOID .)
    TIMES           reduce using rule 4 (type -> VOID .)


state 16

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 29


state 17

    (7) pointer -> TIMES . pointer
    (8) pointer -> TIMES . address
    (9) pointer -> TIMES . var
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (5) var -> . ID

    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    ID              shift and go to state 22

    pointer                        shift and go to state 32
    address                        shift and go to state 30
    var                            shift and go to state 31

state 18

    (42) whilestatement -> WHILE . LPAREN condition RPAREN controlbody

    LPAREN          shift and go to state 34


state 19

    (20) declaration -> type . idlist SEMICOLON
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 36
    TIMES           shift and go to state 17

    pointer                        shift and go to state 35
    idlist                         shift and go to state 37

state 20

    (13) statements -> statement . statements
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (41) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (42) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 8
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 9
    WHILE           shift and go to state 18
    INT             shift and go to state 21
    VOID            shift and go to state 15
    TIMES           shift and go to state 17
    ID              shift and go to state 22

    var                            shift and go to state 10
    type                           shift and go to state 19
    assignment                     shift and go to state 11
    statement                      shift and go to state 20
    statements                     shift and go to state 38
    pointer                        shift and go to state 12
    whilestatement                 shift and go to state 13
    declaration                    shift and go to state 14
    ifstatement                    shift and go to state 23

state 21

    (3) type -> INT .

    ID              reduce using rule 3 (type -> INT .)
    TIMES           reduce using rule 3 (type -> INT .)


state 22

    (5) var -> ID .

    RPAREN          reduce using rule 5 (var -> ID .)
    LT              reduce using rule 5 (var -> ID .)
    GT              reduce using rule 5 (var -> ID .)
    LE              reduce using rule 5 (var -> ID .)
    GE              reduce using rule 5 (var -> ID .)
    EQ              reduce using rule 5 (var -> ID .)
    NE              reduce using rule 5 (var -> ID .)
    PLUS            reduce using rule 5 (var -> ID .)
    MINUS           reduce using rule 5 (var -> ID .)
    TIMES           reduce using rule 5 (var -> ID .)
    DIVIDE          reduce using rule 5 (var -> ID .)
    SEMICOLON       reduce using rule 5 (var -> ID .)
    AND             reduce using rule 5 (var -> ID .)
    OR              reduce using rule 5 (var -> ID .)
    EQUALS          reduce using rule 5 (var -> ID .)
    COMMA           reduce using rule 5 (var -> ID .)


state 23

    (18) statement -> ifstatement .

    COMMENT         reduce using rule 18 (statement -> ifstatement .)
    IF              reduce using rule 18 (statement -> ifstatement .)
    WHILE           reduce using rule 18 (statement -> ifstatement .)
    INT             reduce using rule 18 (statement -> ifstatement .)
    VOID            reduce using rule 18 (statement -> ifstatement .)
    TIMES           reduce using rule 18 (statement -> ifstatement .)
    ID              reduce using rule 18 (statement -> ifstatement .)
    RBRACE          reduce using rule 18 (statement -> ifstatement .)
    ELSE            reduce using rule 18 (statement -> ifstatement .)


state 24

    (14) statements -> COMMENT statements .

    RBRACE          reduce using rule 14 (statements -> COMMENT statements .)


state 25

    (40) ifstatement -> IF LPAREN . condition RPAREN controlbody
    (41) ifstatement -> IF LPAREN . condition RPAREN controlbody ELSE controlbody
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . expression NE expression
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . NOT condition
    (36) condition -> . LPAREN condition RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 39
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    pointer                        shift and go to state 41
    address                        shift and go to state 47
    const                          shift and go to state 46
    var                            shift and go to state 44
    condition                      shift and go to state 45
    expression                     shift and go to state 42

state 26

    (26) assignment -> var EQUALS . expression SEMICOLON
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 50
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 27

    (25) assignment -> pointer EQUALS . expression SEMICOLON
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    pointer                        shift and go to state 41
    address                        shift and go to state 47
    expression                     shift and go to state 51
    var                            shift and go to state 44
    const                          shift and go to state 46

state 28

    (15) statements -> declaration statements .

    RBRACE          reduce using rule 15 (statements -> declaration statements .)


state 29

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE .)


state 30

    (8) pointer -> TIMES address .

    COMMA           reduce using rule 8 (pointer -> TIMES address .)
    SEMICOLON       reduce using rule 8 (pointer -> TIMES address .)
    PLUS            reduce using rule 8 (pointer -> TIMES address .)
    MINUS           reduce using rule 8 (pointer -> TIMES address .)
    TIMES           reduce using rule 8 (pointer -> TIMES address .)
    DIVIDE          reduce using rule 8 (pointer -> TIMES address .)
    LT              reduce using rule 8 (pointer -> TIMES address .)
    GT              reduce using rule 8 (pointer -> TIMES address .)
    LE              reduce using rule 8 (pointer -> TIMES address .)
    GE              reduce using rule 8 (pointer -> TIMES address .)
    EQ              reduce using rule 8 (pointer -> TIMES address .)
    NE              reduce using rule 8 (pointer -> TIMES address .)
    RPAREN          reduce using rule 8 (pointer -> TIMES address .)
    AND             reduce using rule 8 (pointer -> TIMES address .)
    OR              reduce using rule 8 (pointer -> TIMES address .)
    EQUALS          reduce using rule 8 (pointer -> TIMES address .)


state 31

    (9) pointer -> TIMES var .

    COMMA           reduce using rule 9 (pointer -> TIMES var .)
    SEMICOLON       reduce using rule 9 (pointer -> TIMES var .)
    PLUS            reduce using rule 9 (pointer -> TIMES var .)
    MINUS           reduce using rule 9 (pointer -> TIMES var .)
    TIMES           reduce using rule 9 (pointer -> TIMES var .)
    DIVIDE          reduce using rule 9 (pointer -> TIMES var .)
    LT              reduce using rule 9 (pointer -> TIMES var .)
    GT              reduce using rule 9 (pointer -> TIMES var .)
    LE              reduce using rule 9 (pointer -> TIMES var .)
    GE              reduce using rule 9 (pointer -> TIMES var .)
    EQ              reduce using rule 9 (pointer -> TIMES var .)
    NE              reduce using rule 9 (pointer -> TIMES var .)
    RPAREN          reduce using rule 9 (pointer -> TIMES var .)
    AND             reduce using rule 9 (pointer -> TIMES var .)
    OR              reduce using rule 9 (pointer -> TIMES var .)
    EQUALS          reduce using rule 9 (pointer -> TIMES var .)


state 32

    (7) pointer -> TIMES pointer .

    COMMA           reduce using rule 7 (pointer -> TIMES pointer .)
    SEMICOLON       reduce using rule 7 (pointer -> TIMES pointer .)
    PLUS            reduce using rule 7 (pointer -> TIMES pointer .)
    MINUS           reduce using rule 7 (pointer -> TIMES pointer .)
    TIMES           reduce using rule 7 (pointer -> TIMES pointer .)
    DIVIDE          reduce using rule 7 (pointer -> TIMES pointer .)
    LT              reduce using rule 7 (pointer -> TIMES pointer .)
    GT              reduce using rule 7 (pointer -> TIMES pointer .)
    LE              reduce using rule 7 (pointer -> TIMES pointer .)
    GE              reduce using rule 7 (pointer -> TIMES pointer .)
    EQ              reduce using rule 7 (pointer -> TIMES pointer .)
    NE              reduce using rule 7 (pointer -> TIMES pointer .)
    RPAREN          reduce using rule 7 (pointer -> TIMES pointer .)
    AND             reduce using rule 7 (pointer -> TIMES pointer .)
    OR              reduce using rule 7 (pointer -> TIMES pointer .)
    EQUALS          reduce using rule 7 (pointer -> TIMES pointer .)


state 33

    (10) address -> AMPERSAND . pointer
    (11) address -> AMPERSAND . address
    (12) address -> AMPERSAND . var
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (5) var -> . ID

    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    ID              shift and go to state 22

    pointer                        shift and go to state 54
    address                        shift and go to state 52
    var                            shift and go to state 53

state 34

    (42) whilestatement -> WHILE LPAREN . condition RPAREN controlbody
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . expression NE expression
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . NOT condition
    (36) condition -> . LPAREN condition RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 39
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    pointer                        shift and go to state 41
    address                        shift and go to state 47
    const                          shift and go to state 46
    var                            shift and go to state 44
    condition                      shift and go to state 55
    expression                     shift and go to state 42

state 35

    (21) idlist -> pointer . COMMA idlist
    (24) idlist -> pointer .

    COMMA           shift and go to state 56
    SEMICOLON       reduce using rule 24 (idlist -> pointer .)


state 36

    (22) idlist -> ID . COMMA idlist
    (23) idlist -> ID .

    COMMA           shift and go to state 57
    SEMICOLON       reduce using rule 23 (idlist -> ID .)


state 37

    (20) declaration -> type idlist . SEMICOLON

    SEMICOLON       shift and go to state 58


state 38

    (13) statements -> statement statements .

    RBRACE          reduce using rule 13 (statements -> statement statements .)


state 39

    (35) condition -> NOT . condition
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . expression NE expression
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . NOT condition
    (36) condition -> . LPAREN condition RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 39
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    pointer                        shift and go to state 41
    address                        shift and go to state 47
    const                          shift and go to state 46
    var                            shift and go to state 44
    condition                      shift and go to state 59
    expression                     shift and go to state 42

state 40

    (6) const -> NUMBER .

    PLUS            reduce using rule 6 (const -> NUMBER .)
    MINUS           reduce using rule 6 (const -> NUMBER .)
    TIMES           reduce using rule 6 (const -> NUMBER .)
    DIVIDE          reduce using rule 6 (const -> NUMBER .)
    RPAREN          reduce using rule 6 (const -> NUMBER .)
    AND             reduce using rule 6 (const -> NUMBER .)
    OR              reduce using rule 6 (const -> NUMBER .)
    LT              reduce using rule 6 (const -> NUMBER .)
    GT              reduce using rule 6 (const -> NUMBER .)
    LE              reduce using rule 6 (const -> NUMBER .)
    GE              reduce using rule 6 (const -> NUMBER .)
    EQ              reduce using rule 6 (const -> NUMBER .)
    NE              reduce using rule 6 (const -> NUMBER .)
    SEMICOLON       reduce using rule 6 (const -> NUMBER .)


state 41

    (47) expression -> pointer .

    PLUS            reduce using rule 47 (expression -> pointer .)
    MINUS           reduce using rule 47 (expression -> pointer .)
    TIMES           reduce using rule 47 (expression -> pointer .)
    DIVIDE          reduce using rule 47 (expression -> pointer .)
    RPAREN          reduce using rule 47 (expression -> pointer .)
    AND             reduce using rule 47 (expression -> pointer .)
    OR              reduce using rule 47 (expression -> pointer .)
    LT              reduce using rule 47 (expression -> pointer .)
    GT              reduce using rule 47 (expression -> pointer .)
    LE              reduce using rule 47 (expression -> pointer .)
    GE              reduce using rule 47 (expression -> pointer .)
    EQ              reduce using rule 47 (expression -> pointer .)
    NE              reduce using rule 47 (expression -> pointer .)
    SEMICOLON       reduce using rule 47 (expression -> pointer .)


state 42

    (27) condition -> expression . LT expression
    (28) condition -> expression . GT expression
    (29) condition -> expression . LE expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . EQ expression
    (32) condition -> expression . NE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    LT              shift and go to state 69
    GT              shift and go to state 66
    LE              shift and go to state 65
    GE              shift and go to state 68
    EQ              shift and go to state 60
    NE              shift and go to state 64
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 43

    (36) condition -> LPAREN . condition RPAREN
    (51) expression -> LPAREN . expression RPAREN
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . expression NE expression
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . NOT condition
    (36) condition -> . LPAREN condition RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 39
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    pointer                        shift and go to state 41
    address                        shift and go to state 47
    const                          shift and go to state 46
    var                            shift and go to state 44
    condition                      shift and go to state 71
    expression                     shift and go to state 70

state 44

    (50) expression -> var .

    PLUS            reduce using rule 50 (expression -> var .)
    MINUS           reduce using rule 50 (expression -> var .)
    TIMES           reduce using rule 50 (expression -> var .)
    DIVIDE          reduce using rule 50 (expression -> var .)
    RPAREN          reduce using rule 50 (expression -> var .)
    AND             reduce using rule 50 (expression -> var .)
    OR              reduce using rule 50 (expression -> var .)
    LT              reduce using rule 50 (expression -> var .)
    GT              reduce using rule 50 (expression -> var .)
    LE              reduce using rule 50 (expression -> var .)
    GE              reduce using rule 50 (expression -> var .)
    EQ              reduce using rule 50 (expression -> var .)
    NE              reduce using rule 50 (expression -> var .)
    SEMICOLON       reduce using rule 50 (expression -> var .)


state 45

    (40) ifstatement -> IF LPAREN condition . RPAREN controlbody
    (41) ifstatement -> IF LPAREN condition . RPAREN controlbody ELSE controlbody
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    RPAREN          shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 72


state 46

    (49) expression -> const .

    PLUS            reduce using rule 49 (expression -> const .)
    MINUS           reduce using rule 49 (expression -> const .)
    TIMES           reduce using rule 49 (expression -> const .)
    DIVIDE          reduce using rule 49 (expression -> const .)
    RPAREN          reduce using rule 49 (expression -> const .)
    AND             reduce using rule 49 (expression -> const .)
    OR              reduce using rule 49 (expression -> const .)
    LT              reduce using rule 49 (expression -> const .)
    GT              reduce using rule 49 (expression -> const .)
    LE              reduce using rule 49 (expression -> const .)
    GE              reduce using rule 49 (expression -> const .)
    EQ              reduce using rule 49 (expression -> const .)
    NE              reduce using rule 49 (expression -> const .)
    SEMICOLON       reduce using rule 49 (expression -> const .)


state 47

    (48) expression -> address .

    PLUS            reduce using rule 48 (expression -> address .)
    MINUS           reduce using rule 48 (expression -> address .)
    TIMES           reduce using rule 48 (expression -> address .)
    DIVIDE          reduce using rule 48 (expression -> address .)
    RPAREN          reduce using rule 48 (expression -> address .)
    AND             reduce using rule 48 (expression -> address .)
    OR              reduce using rule 48 (expression -> address .)
    LT              reduce using rule 48 (expression -> address .)
    GT              reduce using rule 48 (expression -> address .)
    LE              reduce using rule 48 (expression -> address .)
    GE              reduce using rule 48 (expression -> address .)
    EQ              reduce using rule 48 (expression -> address .)
    NE              reduce using rule 48 (expression -> address .)
    SEMICOLON       reduce using rule 48 (expression -> address .)


state 48

    (52) expression -> MINUS . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 75
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 49

    (51) expression -> LPAREN . expression RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 76
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 50

    (26) assignment -> var EQUALS expression . SEMICOLON
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 77
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 51

    (25) assignment -> pointer EQUALS expression . SEMICOLON
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 78
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 52

    (11) address -> AMPERSAND address .

    PLUS            reduce using rule 11 (address -> AMPERSAND address .)
    MINUS           reduce using rule 11 (address -> AMPERSAND address .)
    TIMES           reduce using rule 11 (address -> AMPERSAND address .)
    DIVIDE          reduce using rule 11 (address -> AMPERSAND address .)
    RPAREN          reduce using rule 11 (address -> AMPERSAND address .)
    AND             reduce using rule 11 (address -> AMPERSAND address .)
    OR              reduce using rule 11 (address -> AMPERSAND address .)
    LT              reduce using rule 11 (address -> AMPERSAND address .)
    GT              reduce using rule 11 (address -> AMPERSAND address .)
    LE              reduce using rule 11 (address -> AMPERSAND address .)
    GE              reduce using rule 11 (address -> AMPERSAND address .)
    EQ              reduce using rule 11 (address -> AMPERSAND address .)
    NE              reduce using rule 11 (address -> AMPERSAND address .)
    SEMICOLON       reduce using rule 11 (address -> AMPERSAND address .)
    EQUALS          reduce using rule 11 (address -> AMPERSAND address .)
    COMMA           reduce using rule 11 (address -> AMPERSAND address .)


state 53

    (12) address -> AMPERSAND var .

    PLUS            reduce using rule 12 (address -> AMPERSAND var .)
    MINUS           reduce using rule 12 (address -> AMPERSAND var .)
    TIMES           reduce using rule 12 (address -> AMPERSAND var .)
    DIVIDE          reduce using rule 12 (address -> AMPERSAND var .)
    RPAREN          reduce using rule 12 (address -> AMPERSAND var .)
    AND             reduce using rule 12 (address -> AMPERSAND var .)
    OR              reduce using rule 12 (address -> AMPERSAND var .)
    LT              reduce using rule 12 (address -> AMPERSAND var .)
    GT              reduce using rule 12 (address -> AMPERSAND var .)
    LE              reduce using rule 12 (address -> AMPERSAND var .)
    GE              reduce using rule 12 (address -> AMPERSAND var .)
    EQ              reduce using rule 12 (address -> AMPERSAND var .)
    NE              reduce using rule 12 (address -> AMPERSAND var .)
    SEMICOLON       reduce using rule 12 (address -> AMPERSAND var .)
    EQUALS          reduce using rule 12 (address -> AMPERSAND var .)
    COMMA           reduce using rule 12 (address -> AMPERSAND var .)


state 54

    (10) address -> AMPERSAND pointer .

    PLUS            reduce using rule 10 (address -> AMPERSAND pointer .)
    MINUS           reduce using rule 10 (address -> AMPERSAND pointer .)
    TIMES           reduce using rule 10 (address -> AMPERSAND pointer .)
    DIVIDE          reduce using rule 10 (address -> AMPERSAND pointer .)
    RPAREN          reduce using rule 10 (address -> AMPERSAND pointer .)
    AND             reduce using rule 10 (address -> AMPERSAND pointer .)
    OR              reduce using rule 10 (address -> AMPERSAND pointer .)
    LT              reduce using rule 10 (address -> AMPERSAND pointer .)
    GT              reduce using rule 10 (address -> AMPERSAND pointer .)
    LE              reduce using rule 10 (address -> AMPERSAND pointer .)
    GE              reduce using rule 10 (address -> AMPERSAND pointer .)
    EQ              reduce using rule 10 (address -> AMPERSAND pointer .)
    NE              reduce using rule 10 (address -> AMPERSAND pointer .)
    SEMICOLON       reduce using rule 10 (address -> AMPERSAND pointer .)
    EQUALS          reduce using rule 10 (address -> AMPERSAND pointer .)
    COMMA           reduce using rule 10 (address -> AMPERSAND pointer .)


state 55

    (42) whilestatement -> WHILE LPAREN condition . RPAREN controlbody
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    RPAREN          shift and go to state 79
    AND             shift and go to state 74
    OR              shift and go to state 72


state 56

    (21) idlist -> pointer COMMA . idlist
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 36
    TIMES           shift and go to state 17

    pointer                        shift and go to state 35
    idlist                         shift and go to state 80

state 57

    (22) idlist -> ID COMMA . idlist
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 36
    TIMES           shift and go to state 17

    pointer                        shift and go to state 35
    idlist                         shift and go to state 81

state 58

    (20) declaration -> type idlist SEMICOLON .

    COMMENT         reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    IF              reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    WHILE           reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    INT             reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    VOID            reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    TIMES           reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    ID              reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    RBRACE          reduce using rule 20 (declaration -> type idlist SEMICOLON .)


state 59

    (35) condition -> NOT condition .
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    RPAREN          reduce using rule 35 (condition -> NOT condition .)
    AND             reduce using rule 35 (condition -> NOT condition .)
    OR              reduce using rule 35 (condition -> NOT condition .)

  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 72 ]


state 60

    (31) condition -> expression EQ . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 82
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 61

    (45) expression -> expression TIMES . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 83
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 62

    (43) expression -> expression PLUS . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 84
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 63

    (46) expression -> expression DIVIDE . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 85
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 64

    (32) condition -> expression NE . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 86
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 65

    (29) condition -> expression LE . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 87
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 66

    (28) condition -> expression GT . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 88
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 67

    (44) expression -> expression MINUS . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 89
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 68

    (30) condition -> expression GE . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 90
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 69

    (27) condition -> expression LT . expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 49
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    expression                     shift and go to state 91
    address                        shift and go to state 47
    pointer                        shift and go to state 41
    var                            shift and go to state 44
    const                          shift and go to state 46

state 70

    (51) expression -> LPAREN expression . RPAREN
    (27) condition -> expression . LT expression
    (28) condition -> expression . GT expression
    (29) condition -> expression . LE expression
    (30) condition -> expression . GE expression
    (31) condition -> expression . EQ expression
    (32) condition -> expression . NE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 92
    LT              shift and go to state 69
    GT              shift and go to state 66
    LE              shift and go to state 65
    GE              shift and go to state 68
    EQ              shift and go to state 60
    NE              shift and go to state 64
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 71

    (36) condition -> LPAREN condition . RPAREN
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    RPAREN          shift and go to state 93
    AND             shift and go to state 74
    OR              shift and go to state 72


state 72

    (34) condition -> condition OR . condition
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . expression NE expression
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . NOT condition
    (36) condition -> . LPAREN condition RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 39
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    pointer                        shift and go to state 41
    address                        shift and go to state 47
    const                          shift and go to state 46
    var                            shift and go to state 44
    condition                      shift and go to state 94
    expression                     shift and go to state 42

state 73

    (40) ifstatement -> IF LPAREN condition RPAREN . controlbody
    (41) ifstatement -> IF LPAREN condition RPAREN . controlbody ELSE controlbody
    (37) controlbody -> . LBRACE statements RBRACE
    (38) controlbody -> . statement
    (39) controlbody -> . SEMICOLON
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (41) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (42) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 95
    SEMICOLON       shift and go to state 96
    IF              shift and go to state 9
    WHILE           shift and go to state 18
    TIMES           shift and go to state 17
    ID              shift and go to state 22

    pointer                        shift and go to state 12
    whilestatement                 shift and go to state 13
    var                            shift and go to state 10
    ifstatement                    shift and go to state 23
    controlbody                    shift and go to state 97
    assignment                     shift and go to state 11
    statement                      shift and go to state 98

state 74

    (33) condition -> condition AND . condition
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression LE expression
    (30) condition -> . expression GE expression
    (31) condition -> . expression EQ expression
    (32) condition -> . expression NE expression
    (33) condition -> . condition AND condition
    (34) condition -> . condition OR condition
    (35) condition -> . NOT condition
    (36) condition -> . LPAREN condition RPAREN
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression TIMES expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . pointer
    (48) expression -> . address
    (49) expression -> . const
    (50) expression -> . var
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    NOT             shift and go to state 39
    LPAREN          shift and go to state 43
    MINUS           shift and go to state 48
    TIMES           shift and go to state 17
    AMPERSAND       shift and go to state 33
    NUMBER          shift and go to state 40
    ID              shift and go to state 22

    pointer                        shift and go to state 41
    address                        shift and go to state 47
    const                          shift and go to state 46
    var                            shift and go to state 44
    condition                      shift and go to state 99
    expression                     shift and go to state 42

state 75

    (52) expression -> MINUS expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 52 (expression -> MINUS expression .)
    MINUS           reduce using rule 52 (expression -> MINUS expression .)
    TIMES           reduce using rule 52 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 52 (expression -> MINUS expression .)
    RPAREN          reduce using rule 52 (expression -> MINUS expression .)
    AND             reduce using rule 52 (expression -> MINUS expression .)
    OR              reduce using rule 52 (expression -> MINUS expression .)
    LT              reduce using rule 52 (expression -> MINUS expression .)
    GT              reduce using rule 52 (expression -> MINUS expression .)
    LE              reduce using rule 52 (expression -> MINUS expression .)
    GE              reduce using rule 52 (expression -> MINUS expression .)
    EQ              reduce using rule 52 (expression -> MINUS expression .)
    NE              reduce using rule 52 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 52 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 62 ]
  ! MINUS           [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 61 ]
  ! DIVIDE          [ shift and go to state 63 ]


state 76

    (51) expression -> LPAREN expression . RPAREN
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 92
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 77

    (26) assignment -> var EQUALS expression SEMICOLON .

    ELSE            reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    COMMENT         reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    IF              reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    INT             reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    VOID            reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    TIMES           reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    ID              reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 26 (assignment -> var EQUALS expression SEMICOLON .)


state 78

    (25) assignment -> pointer EQUALS expression SEMICOLON .

    ELSE            reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    COMMENT         reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    IF              reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    INT             reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    VOID            reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    TIMES           reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    ID              reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 25 (assignment -> pointer EQUALS expression SEMICOLON .)


state 79

    (42) whilestatement -> WHILE LPAREN condition RPAREN . controlbody
    (37) controlbody -> . LBRACE statements RBRACE
    (38) controlbody -> . statement
    (39) controlbody -> . SEMICOLON
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (41) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (42) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 95
    SEMICOLON       shift and go to state 96
    IF              shift and go to state 9
    WHILE           shift and go to state 18
    TIMES           shift and go to state 17
    ID              shift and go to state 22

    pointer                        shift and go to state 12
    whilestatement                 shift and go to state 13
    var                            shift and go to state 10
    ifstatement                    shift and go to state 23
    controlbody                    shift and go to state 100
    assignment                     shift and go to state 11
    statement                      shift and go to state 98

state 80

    (21) idlist -> pointer COMMA idlist .

    SEMICOLON       reduce using rule 21 (idlist -> pointer COMMA idlist .)


state 81

    (22) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 22 (idlist -> ID COMMA idlist .)


state 82

    (31) condition -> expression EQ expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 31 (condition -> expression EQ expression .)
    AND             reduce using rule 31 (condition -> expression EQ expression .)
    OR              reduce using rule 31 (condition -> expression EQ expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 83

    (45) expression -> expression TIMES expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 45 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 45 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 45 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 45 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 45 (expression -> expression TIMES expression .)
    AND             reduce using rule 45 (expression -> expression TIMES expression .)
    OR              reduce using rule 45 (expression -> expression TIMES expression .)
    LT              reduce using rule 45 (expression -> expression TIMES expression .)
    GT              reduce using rule 45 (expression -> expression TIMES expression .)
    LE              reduce using rule 45 (expression -> expression TIMES expression .)
    GE              reduce using rule 45 (expression -> expression TIMES expression .)
    EQ              reduce using rule 45 (expression -> expression TIMES expression .)
    NE              reduce using rule 45 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 62 ]
  ! MINUS           [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 61 ]
  ! DIVIDE          [ shift and go to state 63 ]


state 84

    (43) expression -> expression PLUS expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 43 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 43 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 43 (expression -> expression PLUS expression .)
    AND             reduce using rule 43 (expression -> expression PLUS expression .)
    OR              reduce using rule 43 (expression -> expression PLUS expression .)
    LT              reduce using rule 43 (expression -> expression PLUS expression .)
    GT              reduce using rule 43 (expression -> expression PLUS expression .)
    LE              reduce using rule 43 (expression -> expression PLUS expression .)
    GE              reduce using rule 43 (expression -> expression PLUS expression .)
    EQ              reduce using rule 43 (expression -> expression PLUS expression .)
    NE              reduce using rule 43 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 62 ]
  ! MINUS           [ shift and go to state 67 ]


state 85

    (46) expression -> expression DIVIDE expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 46 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 46 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 46 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 46 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 46 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 46 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 46 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 46 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 46 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 46 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 46 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 46 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 46 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 62 ]
  ! MINUS           [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 61 ]
  ! DIVIDE          [ shift and go to state 63 ]


state 86

    (32) condition -> expression NE expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 32 (condition -> expression NE expression .)
    AND             reduce using rule 32 (condition -> expression NE expression .)
    OR              reduce using rule 32 (condition -> expression NE expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 87

    (29) condition -> expression LE expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 29 (condition -> expression LE expression .)
    AND             reduce using rule 29 (condition -> expression LE expression .)
    OR              reduce using rule 29 (condition -> expression LE expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 88

    (28) condition -> expression GT expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 28 (condition -> expression GT expression .)
    AND             reduce using rule 28 (condition -> expression GT expression .)
    OR              reduce using rule 28 (condition -> expression GT expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 89

    (44) expression -> expression MINUS expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 44 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 44 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 44 (expression -> expression MINUS expression .)
    AND             reduce using rule 44 (expression -> expression MINUS expression .)
    OR              reduce using rule 44 (expression -> expression MINUS expression .)
    LT              reduce using rule 44 (expression -> expression MINUS expression .)
    GT              reduce using rule 44 (expression -> expression MINUS expression .)
    LE              reduce using rule 44 (expression -> expression MINUS expression .)
    GE              reduce using rule 44 (expression -> expression MINUS expression .)
    EQ              reduce using rule 44 (expression -> expression MINUS expression .)
    NE              reduce using rule 44 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63

  ! TIMES           [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 62 ]
  ! MINUS           [ shift and go to state 67 ]


state 90

    (30) condition -> expression GE expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 30 (condition -> expression GE expression .)
    AND             reduce using rule 30 (condition -> expression GE expression .)
    OR              reduce using rule 30 (condition -> expression GE expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 91

    (27) condition -> expression LT expression .
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . TIMES expression
    (46) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 27 (condition -> expression LT expression .)
    AND             reduce using rule 27 (condition -> expression LT expression .)
    OR              reduce using rule 27 (condition -> expression LT expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 67
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 63


state 92

    (51) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 51 (expression -> LPAREN expression RPAREN .)


state 93

    (36) condition -> LPAREN condition RPAREN .

    RPAREN          reduce using rule 36 (condition -> LPAREN condition RPAREN .)
    AND             reduce using rule 36 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 36 (condition -> LPAREN condition RPAREN .)


state 94

    (34) condition -> condition OR condition .
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    RPAREN          reduce using rule 34 (condition -> condition OR condition .)
    OR              reduce using rule 34 (condition -> condition OR condition .)
    AND             shift and go to state 74

  ! AND             [ reduce using rule 34 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 72 ]


state 95

    (37) controlbody -> LBRACE . statements RBRACE
    (13) statements -> . statement statements
    (14) statements -> . COMMENT statements
    (15) statements -> . declaration statements
    (16) statements -> .
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (20) declaration -> . type idlist SEMICOLON
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (41) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (42) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (3) type -> . INT
    (4) type -> . VOID
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    COMMENT         shift and go to state 8
    RBRACE          reduce using rule 16 (statements -> .)
    IF              shift and go to state 9
    WHILE           shift and go to state 18
    INT             shift and go to state 21
    VOID            shift and go to state 15
    TIMES           shift and go to state 17
    ID              shift and go to state 22

    var                            shift and go to state 10
    type                           shift and go to state 19
    assignment                     shift and go to state 11
    statement                      shift and go to state 20
    statements                     shift and go to state 101
    pointer                        shift and go to state 12
    whilestatement                 shift and go to state 13
    declaration                    shift and go to state 14
    ifstatement                    shift and go to state 23

state 96

    (39) controlbody -> SEMICOLON .

    ELSE            reduce using rule 39 (controlbody -> SEMICOLON .)
    COMMENT         reduce using rule 39 (controlbody -> SEMICOLON .)
    IF              reduce using rule 39 (controlbody -> SEMICOLON .)
    WHILE           reduce using rule 39 (controlbody -> SEMICOLON .)
    INT             reduce using rule 39 (controlbody -> SEMICOLON .)
    VOID            reduce using rule 39 (controlbody -> SEMICOLON .)
    TIMES           reduce using rule 39 (controlbody -> SEMICOLON .)
    ID              reduce using rule 39 (controlbody -> SEMICOLON .)
    RBRACE          reduce using rule 39 (controlbody -> SEMICOLON .)


state 97

    (40) ifstatement -> IF LPAREN condition RPAREN controlbody .
    (41) ifstatement -> IF LPAREN condition RPAREN controlbody . ELSE controlbody

    COMMENT         reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    IF              reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    WHILE           reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    INT             reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    VOID            reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    TIMES           reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    ID              reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    RBRACE          reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .)
    ELSE            shift and go to state 102

  ! ELSE            [ reduce using rule 40 (ifstatement -> IF LPAREN condition RPAREN controlbody .) ]


state 98

    (38) controlbody -> statement .

    ELSE            reduce using rule 38 (controlbody -> statement .)
    COMMENT         reduce using rule 38 (controlbody -> statement .)
    IF              reduce using rule 38 (controlbody -> statement .)
    WHILE           reduce using rule 38 (controlbody -> statement .)
    INT             reduce using rule 38 (controlbody -> statement .)
    VOID            reduce using rule 38 (controlbody -> statement .)
    TIMES           reduce using rule 38 (controlbody -> statement .)
    ID              reduce using rule 38 (controlbody -> statement .)
    RBRACE          reduce using rule 38 (controlbody -> statement .)


state 99

    (33) condition -> condition AND condition .
    (33) condition -> condition . AND condition
    (34) condition -> condition . OR condition

    RPAREN          reduce using rule 33 (condition -> condition AND condition .)
    AND             reduce using rule 33 (condition -> condition AND condition .)
    OR              reduce using rule 33 (condition -> condition AND condition .)

  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 72 ]


state 100

    (42) whilestatement -> WHILE LPAREN condition RPAREN controlbody .

    COMMENT         reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    IF              reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    WHILE           reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    INT             reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    VOID            reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    TIMES           reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    ID              reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    RBRACE          reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)
    ELSE            reduce using rule 42 (whilestatement -> WHILE LPAREN condition RPAREN controlbody .)


state 101

    (37) controlbody -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 103


state 102

    (41) ifstatement -> IF LPAREN condition RPAREN controlbody ELSE . controlbody
    (37) controlbody -> . LBRACE statements RBRACE
    (38) controlbody -> . statement
    (39) controlbody -> . SEMICOLON
    (17) statement -> . assignment
    (18) statement -> . ifstatement
    (19) statement -> . whilestatement
    (25) assignment -> . pointer EQUALS expression SEMICOLON
    (26) assignment -> . var EQUALS expression SEMICOLON
    (40) ifstatement -> . IF LPAREN condition RPAREN controlbody
    (41) ifstatement -> . IF LPAREN condition RPAREN controlbody ELSE controlbody
    (42) whilestatement -> . WHILE LPAREN condition RPAREN controlbody
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    LBRACE          shift and go to state 95
    SEMICOLON       shift and go to state 96
    IF              shift and go to state 9
    WHILE           shift and go to state 18
    TIMES           shift and go to state 17
    ID              shift and go to state 22

    pointer                        shift and go to state 12
    whilestatement                 shift and go to state 13
    var                            shift and go to state 10
    ifstatement                    shift and go to state 23
    controlbody                    shift and go to state 104
    assignment                     shift and go to state 11
    statement                      shift and go to state 98

state 103

    (37) controlbody -> LBRACE statements RBRACE .

    ELSE            reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)
    COMMENT         reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)
    IF              reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)
    INT             reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)
    VOID            reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)
    TIMES           reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)
    ID              reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 37 (controlbody -> LBRACE statements RBRACE .)


state 104

    (41) ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .

    ELSE            reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    COMMENT         reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    IF              reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    WHILE           reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    INT             reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    VOID            reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    TIMES           reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    ID              reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)
    RBRACE          reduce using rule 41 (ifstatement -> IF LPAREN condition RPAREN controlbody ELSE controlbody .)

