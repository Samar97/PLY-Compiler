Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE
Rule 3     type -> INT
Rule 4     type -> VOID
Rule 5     args -> arg COMMA args
Rule 6     args -> arg
Rule 7     args -> <empty>
Rule 8     arg -> type ID
Rule 9     pointer -> TIMES pointer
Rule 10    pointer -> TIMES ID
Rule 11    pointer -> TIMES address
Rule 12    address -> AMPERSAND ID
Rule 13    address -> AMPERSAND pointer
Rule 14    address -> AMPERSAND address
Rule 15    statements -> statement statements
Rule 16    statements -> <empty>
Rule 17    statement -> declaration
Rule 18    statement -> xassignment
Rule 19    statement -> COMMENT
Rule 20    declaration -> type idlist SEMICOLON
Rule 21    idlist -> pointer COMMA idlist
Rule 22    idlist -> ID COMMA idlist
Rule 23    idlist -> ID
Rule 24    idlist -> pointer
Rule 25    xassignment -> assignmentlist SEMICOLON
Rule 26    assignmentlist -> assignment COMMA assignmentlist
Rule 27    assignmentlist -> assignment
Rule 28    assignment -> ID EQUALS address
Rule 29    assignment -> ID EQUALS ID
Rule 30    assignment -> pointer EQUALS expression
Rule 31    expression -> expression PLUS expression
Rule 32    expression -> expression MINUS expression
Rule 33    expression -> expression TIMES expression
Rule 34    expression -> expression DIVIDE expression
Rule 35    expression -> pointer
Rule 36    expression -> address
Rule 37    expression -> NUMBER
Rule 38    expression -> ID
Rule 39    expression -> MINUS expression

Terminals, with rules where they appear

AMPERSAND            : 12 13 14
COMMA                : 5 21 22 26
COMMENT              : 19
DIVIDE               : 34
EQUALS               : 28 29 30
ID                   : 8 10 12 22 23 28 29 29 38
INT                  : 3
LBRACE               : 2
LPAREN               : 2
MAIN                 : 2
MINUS                : 32 39
NUMBER               : 37
PLUS                 : 31
RBRACE               : 2
RPAREN               : 2
SEMICOLON            : 20 25
TIMES                : 9 10 11 33
VOID                 : 4
error                : 

Nonterminals, with rules where they appear

address              : 11 14 28 36
arg                  : 5 6
args                 : 2 5
assignment           : 26 27
assignmentlist       : 25 26
declaration          : 17
expression           : 30 31 31 32 32 33 33 34 34 39
function             : 1
idlist               : 20 21 22
pointer              : 9 13 21 24 30 35
start                : 0
statement            : 15
statements           : 2 15
type                 : 2 8 20
xassignment          : 18

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . type MAIN LPAREN args RPAREN LBRACE statements RBRACE
    (3) type -> . INT
    (4) type -> . VOID

    INT             shift and go to state 1
    VOID            shift and go to state 2

    function                       shift and go to state 3
    type                           shift and go to state 4
    start                          shift and go to state 5

state 1

    (3) type -> INT .

    ID              reduce using rule 3 (type -> INT .)
    TIMES           reduce using rule 3 (type -> INT .)
    MAIN            reduce using rule 3 (type -> INT .)


state 2

    (4) type -> VOID .

    ID              reduce using rule 4 (type -> VOID .)
    TIMES           reduce using rule 4 (type -> VOID .)
    MAIN            reduce using rule 4 (type -> VOID .)


state 3

    (1) start -> function .

    $end            reduce using rule 1 (start -> function .)


state 4

    (2) function -> type . MAIN LPAREN args RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 6


state 5

    (0) S' -> start .



state 6

    (2) function -> type MAIN . LPAREN args RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 7


state 7

    (2) function -> type MAIN LPAREN . args RPAREN LBRACE statements RBRACE
    (5) args -> . arg COMMA args
    (6) args -> . arg
    (7) args -> .
    (8) arg -> . type ID
    (3) type -> . INT
    (4) type -> . VOID

    RPAREN          reduce using rule 7 (args -> .)
    INT             shift and go to state 1
    VOID            shift and go to state 2

    args                           shift and go to state 9
    arg                            shift and go to state 8
    type                           shift and go to state 10

state 8

    (5) args -> arg . COMMA args
    (6) args -> arg .

    COMMA           shift and go to state 11
    RPAREN          reduce using rule 6 (args -> arg .)


state 9

    (2) function -> type MAIN LPAREN args . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 12


state 10

    (8) arg -> type . ID

    ID              shift and go to state 13


state 11

    (5) args -> arg COMMA . args
    (5) args -> . arg COMMA args
    (6) args -> . arg
    (7) args -> .
    (8) arg -> . type ID
    (3) type -> . INT
    (4) type -> . VOID

    RPAREN          reduce using rule 7 (args -> .)
    INT             shift and go to state 1
    VOID            shift and go to state 2

    arg                            shift and go to state 8
    args                           shift and go to state 14
    type                           shift and go to state 10

state 12

    (2) function -> type MAIN LPAREN args RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 15


state 13

    (8) arg -> type ID .

    COMMA           reduce using rule 8 (arg -> type ID .)
    RPAREN          reduce using rule 8 (arg -> type ID .)


state 14

    (5) args -> arg COMMA args .

    RPAREN          reduce using rule 5 (args -> arg COMMA args .)


state 15

    (2) function -> type MAIN LPAREN args RPAREN LBRACE . statements RBRACE
    (15) statements -> . statement statements
    (16) statements -> .
    (17) statement -> . declaration
    (18) statement -> . xassignment
    (19) statement -> . COMMENT
    (20) declaration -> . type idlist SEMICOLON
    (25) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (26) assignmentlist -> . assignment COMMA assignmentlist
    (27) assignmentlist -> . assignment
    (28) assignment -> . ID EQUALS address
    (29) assignment -> . ID EQUALS ID
    (30) assignment -> . pointer EQUALS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address

    RBRACE          reduce using rule 16 (statements -> .)
    COMMENT         shift and go to state 21
    INT             shift and go to state 1
    VOID            shift and go to state 2
    ID              shift and go to state 25
    TIMES           shift and go to state 23

    statements                     shift and go to state 16
    statement                      shift and go to state 22
    pointer                        shift and go to state 24
    declaration                    shift and go to state 26
    assignmentlist                 shift and go to state 17
    xassignment                    shift and go to state 18
    assignment                     shift and go to state 19
    type                           shift and go to state 20

state 16

    (2) function -> type MAIN LPAREN args RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 27


state 17

    (25) xassignment -> assignmentlist . SEMICOLON

    SEMICOLON       shift and go to state 28


state 18

    (18) statement -> xassignment .

    COMMENT         reduce using rule 18 (statement -> xassignment .)
    INT             reduce using rule 18 (statement -> xassignment .)
    VOID            reduce using rule 18 (statement -> xassignment .)
    ID              reduce using rule 18 (statement -> xassignment .)
    TIMES           reduce using rule 18 (statement -> xassignment .)
    RBRACE          reduce using rule 18 (statement -> xassignment .)


state 19

    (26) assignmentlist -> assignment . COMMA assignmentlist
    (27) assignmentlist -> assignment .

    COMMA           shift and go to state 29
    SEMICOLON       reduce using rule 27 (assignmentlist -> assignment .)


state 20

    (20) declaration -> type . idlist SEMICOLON
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address

    ID              shift and go to state 31
    TIMES           shift and go to state 23

    pointer                        shift and go to state 30
    idlist                         shift and go to state 32

state 21

    (19) statement -> COMMENT .

    COMMENT         reduce using rule 19 (statement -> COMMENT .)
    INT             reduce using rule 19 (statement -> COMMENT .)
    VOID            reduce using rule 19 (statement -> COMMENT .)
    ID              reduce using rule 19 (statement -> COMMENT .)
    TIMES           reduce using rule 19 (statement -> COMMENT .)
    RBRACE          reduce using rule 19 (statement -> COMMENT .)


state 22

    (15) statements -> statement . statements
    (15) statements -> . statement statements
    (16) statements -> .
    (17) statement -> . declaration
    (18) statement -> . xassignment
    (19) statement -> . COMMENT
    (20) declaration -> . type idlist SEMICOLON
    (25) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (26) assignmentlist -> . assignment COMMA assignmentlist
    (27) assignmentlist -> . assignment
    (28) assignment -> . ID EQUALS address
    (29) assignment -> . ID EQUALS ID
    (30) assignment -> . pointer EQUALS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address

    RBRACE          reduce using rule 16 (statements -> .)
    COMMENT         shift and go to state 21
    INT             shift and go to state 1
    VOID            shift and go to state 2
    ID              shift and go to state 25
    TIMES           shift and go to state 23

    statements                     shift and go to state 33
    assignment                     shift and go to state 19
    pointer                        shift and go to state 24
    declaration                    shift and go to state 26
    assignmentlist                 shift and go to state 17
    xassignment                    shift and go to state 18
    statement                      shift and go to state 22
    type                           shift and go to state 20

state 23

    (9) pointer -> TIMES . pointer
    (10) pointer -> TIMES . ID
    (11) pointer -> TIMES . address
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    ID              shift and go to state 35
    TIMES           shift and go to state 23
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 34
    pointer                        shift and go to state 37

state 24

    (30) assignment -> pointer . EQUALS expression

    EQUALS          shift and go to state 38


state 25

    (28) assignment -> ID . EQUALS address
    (29) assignment -> ID . EQUALS ID

    EQUALS          shift and go to state 39


state 26

    (17) statement -> declaration .

    COMMENT         reduce using rule 17 (statement -> declaration .)
    INT             reduce using rule 17 (statement -> declaration .)
    VOID            reduce using rule 17 (statement -> declaration .)
    ID              reduce using rule 17 (statement -> declaration .)
    TIMES           reduce using rule 17 (statement -> declaration .)
    RBRACE          reduce using rule 17 (statement -> declaration .)


state 27

    (2) function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE .)


state 28

    (25) xassignment -> assignmentlist SEMICOLON .

    COMMENT         reduce using rule 25 (xassignment -> assignmentlist SEMICOLON .)
    INT             reduce using rule 25 (xassignment -> assignmentlist SEMICOLON .)
    VOID            reduce using rule 25 (xassignment -> assignmentlist SEMICOLON .)
    ID              reduce using rule 25 (xassignment -> assignmentlist SEMICOLON .)
    TIMES           reduce using rule 25 (xassignment -> assignmentlist SEMICOLON .)
    RBRACE          reduce using rule 25 (xassignment -> assignmentlist SEMICOLON .)


state 29

    (26) assignmentlist -> assignment COMMA . assignmentlist
    (26) assignmentlist -> . assignment COMMA assignmentlist
    (27) assignmentlist -> . assignment
    (28) assignment -> . ID EQUALS address
    (29) assignment -> . ID EQUALS ID
    (30) assignment -> . pointer EQUALS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address

    ID              shift and go to state 25
    TIMES           shift and go to state 23

    assignment                     shift and go to state 19
    pointer                        shift and go to state 24
    assignmentlist                 shift and go to state 40

state 30

    (21) idlist -> pointer . COMMA idlist
    (24) idlist -> pointer .

    COMMA           shift and go to state 41
    SEMICOLON       reduce using rule 24 (idlist -> pointer .)


state 31

    (22) idlist -> ID . COMMA idlist
    (23) idlist -> ID .

    COMMA           shift and go to state 42
    SEMICOLON       reduce using rule 23 (idlist -> ID .)


state 32

    (20) declaration -> type idlist . SEMICOLON

    SEMICOLON       shift and go to state 43


state 33

    (15) statements -> statement statements .

    RBRACE          reduce using rule 15 (statements -> statement statements .)


state 34

    (11) pointer -> TIMES address .

    EQUALS          reduce using rule 11 (pointer -> TIMES address .)
    PLUS            reduce using rule 11 (pointer -> TIMES address .)
    MINUS           reduce using rule 11 (pointer -> TIMES address .)
    TIMES           reduce using rule 11 (pointer -> TIMES address .)
    DIVIDE          reduce using rule 11 (pointer -> TIMES address .)
    COMMA           reduce using rule 11 (pointer -> TIMES address .)
    SEMICOLON       reduce using rule 11 (pointer -> TIMES address .)


state 35

    (10) pointer -> TIMES ID .

    EQUALS          reduce using rule 10 (pointer -> TIMES ID .)
    PLUS            reduce using rule 10 (pointer -> TIMES ID .)
    MINUS           reduce using rule 10 (pointer -> TIMES ID .)
    TIMES           reduce using rule 10 (pointer -> TIMES ID .)
    DIVIDE          reduce using rule 10 (pointer -> TIMES ID .)
    COMMA           reduce using rule 10 (pointer -> TIMES ID .)
    SEMICOLON       reduce using rule 10 (pointer -> TIMES ID .)


state 36

    (12) address -> AMPERSAND . ID
    (13) address -> AMPERSAND . pointer
    (14) address -> AMPERSAND . address
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    ID              shift and go to state 45
    TIMES           shift and go to state 23
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 44
    pointer                        shift and go to state 46

state 37

    (9) pointer -> TIMES pointer .

    EQUALS          reduce using rule 9 (pointer -> TIMES pointer .)
    PLUS            reduce using rule 9 (pointer -> TIMES pointer .)
    MINUS           reduce using rule 9 (pointer -> TIMES pointer .)
    TIMES           reduce using rule 9 (pointer -> TIMES pointer .)
    DIVIDE          reduce using rule 9 (pointer -> TIMES pointer .)
    COMMA           reduce using rule 9 (pointer -> TIMES pointer .)
    SEMICOLON       reduce using rule 9 (pointer -> TIMES pointer .)


state 38

    (30) assignment -> pointer EQUALS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . pointer
    (36) expression -> . address
    (37) expression -> . NUMBER
    (38) expression -> . ID
    (39) expression -> . MINUS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    NUMBER          shift and go to state 51
    ID              shift and go to state 50
    MINUS           shift and go to state 52
    TIMES           shift and go to state 23
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 47
    expression                     shift and go to state 49
    pointer                        shift and go to state 48

state 39

    (28) assignment -> ID EQUALS . address
    (29) assignment -> ID EQUALS . ID
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    ID              shift and go to state 54
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 53

state 40

    (26) assignmentlist -> assignment COMMA assignmentlist .

    SEMICOLON       reduce using rule 26 (assignmentlist -> assignment COMMA assignmentlist .)


state 41

    (21) idlist -> pointer COMMA . idlist
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address

    ID              shift and go to state 31
    TIMES           shift and go to state 23

    pointer                        shift and go to state 30
    idlist                         shift and go to state 55

state 42

    (22) idlist -> ID COMMA . idlist
    (21) idlist -> . pointer COMMA idlist
    (22) idlist -> . ID COMMA idlist
    (23) idlist -> . ID
    (24) idlist -> . pointer
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address

    ID              shift and go to state 31
    TIMES           shift and go to state 23

    pointer                        shift and go to state 30
    idlist                         shift and go to state 56

state 43

    (20) declaration -> type idlist SEMICOLON .

    COMMENT         reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    INT             reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    VOID            reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    ID              reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    TIMES           reduce using rule 20 (declaration -> type idlist SEMICOLON .)
    RBRACE          reduce using rule 20 (declaration -> type idlist SEMICOLON .)


state 44

    (14) address -> AMPERSAND address .

    PLUS            reduce using rule 14 (address -> AMPERSAND address .)
    MINUS           reduce using rule 14 (address -> AMPERSAND address .)
    TIMES           reduce using rule 14 (address -> AMPERSAND address .)
    DIVIDE          reduce using rule 14 (address -> AMPERSAND address .)
    COMMA           reduce using rule 14 (address -> AMPERSAND address .)
    SEMICOLON       reduce using rule 14 (address -> AMPERSAND address .)
    EQUALS          reduce using rule 14 (address -> AMPERSAND address .)


state 45

    (12) address -> AMPERSAND ID .

    PLUS            reduce using rule 12 (address -> AMPERSAND ID .)
    MINUS           reduce using rule 12 (address -> AMPERSAND ID .)
    TIMES           reduce using rule 12 (address -> AMPERSAND ID .)
    DIVIDE          reduce using rule 12 (address -> AMPERSAND ID .)
    COMMA           reduce using rule 12 (address -> AMPERSAND ID .)
    SEMICOLON       reduce using rule 12 (address -> AMPERSAND ID .)
    EQUALS          reduce using rule 12 (address -> AMPERSAND ID .)


state 46

    (13) address -> AMPERSAND pointer .

    PLUS            reduce using rule 13 (address -> AMPERSAND pointer .)
    MINUS           reduce using rule 13 (address -> AMPERSAND pointer .)
    TIMES           reduce using rule 13 (address -> AMPERSAND pointer .)
    DIVIDE          reduce using rule 13 (address -> AMPERSAND pointer .)
    COMMA           reduce using rule 13 (address -> AMPERSAND pointer .)
    SEMICOLON       reduce using rule 13 (address -> AMPERSAND pointer .)
    EQUALS          reduce using rule 13 (address -> AMPERSAND pointer .)


state 47

    (36) expression -> address .

    PLUS            reduce using rule 36 (expression -> address .)
    MINUS           reduce using rule 36 (expression -> address .)
    TIMES           reduce using rule 36 (expression -> address .)
    DIVIDE          reduce using rule 36 (expression -> address .)
    COMMA           reduce using rule 36 (expression -> address .)
    SEMICOLON       reduce using rule 36 (expression -> address .)


state 48

    (35) expression -> pointer .

    PLUS            reduce using rule 35 (expression -> pointer .)
    MINUS           reduce using rule 35 (expression -> pointer .)
    TIMES           reduce using rule 35 (expression -> pointer .)
    DIVIDE          reduce using rule 35 (expression -> pointer .)
    COMMA           reduce using rule 35 (expression -> pointer .)
    SEMICOLON       reduce using rule 35 (expression -> pointer .)


state 49

    (30) assignment -> pointer EQUALS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 30 (assignment -> pointer EQUALS expression .)
    SEMICOLON       reduce using rule 30 (assignment -> pointer EQUALS expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 59
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57


state 50

    (38) expression -> ID .

    PLUS            reduce using rule 38 (expression -> ID .)
    MINUS           reduce using rule 38 (expression -> ID .)
    TIMES           reduce using rule 38 (expression -> ID .)
    DIVIDE          reduce using rule 38 (expression -> ID .)
    COMMA           reduce using rule 38 (expression -> ID .)
    SEMICOLON       reduce using rule 38 (expression -> ID .)


state 51

    (37) expression -> NUMBER .

    PLUS            reduce using rule 37 (expression -> NUMBER .)
    MINUS           reduce using rule 37 (expression -> NUMBER .)
    TIMES           reduce using rule 37 (expression -> NUMBER .)
    DIVIDE          reduce using rule 37 (expression -> NUMBER .)
    COMMA           reduce using rule 37 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 37 (expression -> NUMBER .)


state 52

    (39) expression -> MINUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . pointer
    (36) expression -> . address
    (37) expression -> . NUMBER
    (38) expression -> . ID
    (39) expression -> . MINUS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    NUMBER          shift and go to state 51
    ID              shift and go to state 50
    MINUS           shift and go to state 52
    TIMES           shift and go to state 23
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 47
    expression                     shift and go to state 61
    pointer                        shift and go to state 48

state 53

    (28) assignment -> ID EQUALS address .

    COMMA           reduce using rule 28 (assignment -> ID EQUALS address .)
    SEMICOLON       reduce using rule 28 (assignment -> ID EQUALS address .)


state 54

    (29) assignment -> ID EQUALS ID .

    COMMA           reduce using rule 29 (assignment -> ID EQUALS ID .)
    SEMICOLON       reduce using rule 29 (assignment -> ID EQUALS ID .)


state 55

    (21) idlist -> pointer COMMA idlist .

    SEMICOLON       reduce using rule 21 (idlist -> pointer COMMA idlist .)


state 56

    (22) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 22 (idlist -> ID COMMA idlist .)


state 57

    (34) expression -> expression DIVIDE . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . pointer
    (36) expression -> . address
    (37) expression -> . NUMBER
    (38) expression -> . ID
    (39) expression -> . MINUS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    NUMBER          shift and go to state 51
    ID              shift and go to state 50
    MINUS           shift and go to state 52
    TIMES           shift and go to state 23
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 47
    expression                     shift and go to state 62
    pointer                        shift and go to state 48

state 58

    (33) expression -> expression TIMES . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . pointer
    (36) expression -> . address
    (37) expression -> . NUMBER
    (38) expression -> . ID
    (39) expression -> . MINUS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    NUMBER          shift and go to state 51
    ID              shift and go to state 50
    MINUS           shift and go to state 52
    TIMES           shift and go to state 23
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 47
    expression                     shift and go to state 63
    pointer                        shift and go to state 48

state 59

    (32) expression -> expression MINUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . pointer
    (36) expression -> . address
    (37) expression -> . NUMBER
    (38) expression -> . ID
    (39) expression -> . MINUS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    NUMBER          shift and go to state 51
    ID              shift and go to state 50
    MINUS           shift and go to state 52
    TIMES           shift and go to state 23
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 47
    expression                     shift and go to state 64
    pointer                        shift and go to state 48

state 60

    (31) expression -> expression PLUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . pointer
    (36) expression -> . address
    (37) expression -> . NUMBER
    (38) expression -> . ID
    (39) expression -> . MINUS expression
    (9) pointer -> . TIMES pointer
    (10) pointer -> . TIMES ID
    (11) pointer -> . TIMES address
    (12) address -> . AMPERSAND ID
    (13) address -> . AMPERSAND pointer
    (14) address -> . AMPERSAND address

    NUMBER          shift and go to state 51
    ID              shift and go to state 50
    MINUS           shift and go to state 52
    TIMES           shift and go to state 23
    AMPERSAND       shift and go to state 36

    address                        shift and go to state 47
    expression                     shift and go to state 65
    pointer                        shift and go to state 48

state 61

    (39) expression -> MINUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 39 (expression -> MINUS expression .)
    MINUS           reduce using rule 39 (expression -> MINUS expression .)
    TIMES           reduce using rule 39 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 39 (expression -> MINUS expression .)
    COMMA           reduce using rule 39 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 39 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 57 ]


state 62

    (34) expression -> expression DIVIDE expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 34 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 34 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 34 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 34 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 34 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 57 ]


state 63

    (33) expression -> expression TIMES expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 33 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 33 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 33 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 33 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 33 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 59 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 57 ]


state 64

    (32) expression -> expression MINUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 32 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 32 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 32 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57

  ! TIMES           [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 59 ]


state 65

    (31) expression -> expression PLUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 31 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 31 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 31 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57

  ! TIMES           [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 59 ]

