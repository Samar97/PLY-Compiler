Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE
Rule 3     type -> INT
Rule 4     type -> VOID
Rule 5     args -> arg COMMA args
Rule 6     args -> arg
Rule 7     args -> <empty>
Rule 8     arg -> type ID
Rule 9     var -> ID
Rule 10    const -> NUMBER
Rule 11    pointer -> TIMES pointer
Rule 12    pointer -> TIMES address
Rule 13    pointer -> TIMES var
Rule 14    address -> AMPERSAND pointer
Rule 15    address -> AMPERSAND address
Rule 16    address -> AMPERSAND var
Rule 17    statements -> statement statements
Rule 18    statements -> <empty>
Rule 19    statement -> declaration
Rule 20    statement -> xassignment
Rule 21    statement -> COMMENT
Rule 22    declaration -> type idlist SEMICOLON
Rule 23    idlist -> pointer COMMA idlist
Rule 24    idlist -> ID COMMA idlist
Rule 25    idlist -> ID
Rule 26    idlist -> pointer
Rule 27    xassignment -> assignmentlist SEMICOLON
Rule 28    assignmentlist -> assignment COMMA assignmentlist
Rule 29    assignmentlist -> assignment
Rule 30    assignment -> var EQUALS address
Rule 31    assignment -> var EQUALS var
Rule 32    assignment -> pointer EQUALS expression
Rule 33    expression -> expression PLUS expression
Rule 34    expression -> expression MINUS expression
Rule 35    expression -> expression TIMES expression
Rule 36    expression -> expression DIVIDE expression
Rule 37    expression -> pointer
Rule 38    expression -> address
Rule 39    expression -> const
Rule 40    expression -> var
Rule 41    expression -> MINUS expression

Terminals, with rules where they appear

AMPERSAND            : 14 15 16
COMMA                : 5 23 24 28
COMMENT              : 21
DIVIDE               : 36
EQUALS               : 30 31 32
ID                   : 8 9 24 25
INT                  : 3
LBRACE               : 2
LPAREN               : 2
MAIN                 : 2
MINUS                : 34 41
NUMBER               : 10
PLUS                 : 33
RBRACE               : 2
RPAREN               : 2
SEMICOLON            : 22 27
TIMES                : 11 12 13 35
VOID                 : 4
error                : 

Nonterminals, with rules where they appear

address              : 12 15 30 38
arg                  : 5 6
args                 : 2 5
assignment           : 28 29
assignmentlist       : 27 28
const                : 39
declaration          : 19
expression           : 32 33 33 34 34 35 35 36 36 41
function             : 1
idlist               : 22 23 24
pointer              : 11 14 23 26 32 37
start                : 0
statement            : 17
statements           : 2 17
type                 : 2 8 22
var                  : 13 16 30 31 31 40
xassignment          : 20

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . type MAIN LPAREN args RPAREN LBRACE statements RBRACE
    (3) type -> . INT
    (4) type -> . VOID

    INT             shift and go to state 2
    VOID            shift and go to state 3

    function                       shift and go to state 1
    start                          shift and go to state 4
    type                           shift and go to state 5

state 1

    (1) start -> function .

    $end            reduce using rule 1 (start -> function .)


state 2

    (3) type -> INT .

    ID              reduce using rule 3 (type -> INT .)
    TIMES           reduce using rule 3 (type -> INT .)
    MAIN            reduce using rule 3 (type -> INT .)


state 3

    (4) type -> VOID .

    ID              reduce using rule 4 (type -> VOID .)
    TIMES           reduce using rule 4 (type -> VOID .)
    MAIN            reduce using rule 4 (type -> VOID .)


state 4

    (0) S' -> start .



state 5

    (2) function -> type . MAIN LPAREN args RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 6


state 6

    (2) function -> type MAIN . LPAREN args RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 7


state 7

    (2) function -> type MAIN LPAREN . args RPAREN LBRACE statements RBRACE
    (5) args -> . arg COMMA args
    (6) args -> . arg
    (7) args -> .
    (8) arg -> . type ID
    (3) type -> . INT
    (4) type -> . VOID

    RPAREN          reduce using rule 7 (args -> .)
    INT             shift and go to state 2
    VOID            shift and go to state 3

    args                           shift and go to state 8
    type                           shift and go to state 10
    arg                            shift and go to state 9

state 8

    (2) function -> type MAIN LPAREN args . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 11


state 9

    (5) args -> arg . COMMA args
    (6) args -> arg .

    COMMA           shift and go to state 12
    RPAREN          reduce using rule 6 (args -> arg .)


state 10

    (8) arg -> type . ID

    ID              shift and go to state 13


state 11

    (2) function -> type MAIN LPAREN args RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 14


state 12

    (5) args -> arg COMMA . args
    (5) args -> . arg COMMA args
    (6) args -> . arg
    (7) args -> .
    (8) arg -> . type ID
    (3) type -> . INT
    (4) type -> . VOID

    RPAREN          reduce using rule 7 (args -> .)
    INT             shift and go to state 2
    VOID            shift and go to state 3

    args                           shift and go to state 15
    type                           shift and go to state 10
    arg                            shift and go to state 9

state 13

    (8) arg -> type ID .

    COMMA           reduce using rule 8 (arg -> type ID .)
    RPAREN          reduce using rule 8 (arg -> type ID .)


state 14

    (2) function -> type MAIN LPAREN args RPAREN LBRACE . statements RBRACE
    (17) statements -> . statement statements
    (18) statements -> .
    (19) statement -> . declaration
    (20) statement -> . xassignment
    (21) statement -> . COMMENT
    (22) declaration -> . type idlist SEMICOLON
    (27) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (28) assignmentlist -> . assignment COMMA assignmentlist
    (29) assignmentlist -> . assignment
    (30) assignment -> . var EQUALS address
    (31) assignment -> . var EQUALS var
    (32) assignment -> . pointer EQUALS expression
    (9) var -> . ID
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var

    RBRACE          reduce using rule 18 (statements -> .)
    COMMENT         shift and go to state 20
    INT             shift and go to state 2
    VOID            shift and go to state 3
    ID              shift and go to state 27
    TIMES           shift and go to state 25

    statements                     shift and go to state 16
    assignment                     shift and go to state 24
    xassignment                    shift and go to state 17
    pointer                        shift and go to state 19
    statement                      shift and go to state 21
    declaration                    shift and go to state 26
    var                            shift and go to state 22
    assignmentlist                 shift and go to state 18
    type                           shift and go to state 23

state 15

    (5) args -> arg COMMA args .

    RPAREN          reduce using rule 5 (args -> arg COMMA args .)


state 16

    (2) function -> type MAIN LPAREN args RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 28


state 17

    (20) statement -> xassignment .

    COMMENT         reduce using rule 20 (statement -> xassignment .)
    INT             reduce using rule 20 (statement -> xassignment .)
    VOID            reduce using rule 20 (statement -> xassignment .)
    ID              reduce using rule 20 (statement -> xassignment .)
    TIMES           reduce using rule 20 (statement -> xassignment .)
    RBRACE          reduce using rule 20 (statement -> xassignment .)


state 18

    (27) xassignment -> assignmentlist . SEMICOLON

    SEMICOLON       shift and go to state 29


state 19

    (32) assignment -> pointer . EQUALS expression

    EQUALS          shift and go to state 30


state 20

    (21) statement -> COMMENT .

    COMMENT         reduce using rule 21 (statement -> COMMENT .)
    INT             reduce using rule 21 (statement -> COMMENT .)
    VOID            reduce using rule 21 (statement -> COMMENT .)
    ID              reduce using rule 21 (statement -> COMMENT .)
    TIMES           reduce using rule 21 (statement -> COMMENT .)
    RBRACE          reduce using rule 21 (statement -> COMMENT .)


state 21

    (17) statements -> statement . statements
    (17) statements -> . statement statements
    (18) statements -> .
    (19) statement -> . declaration
    (20) statement -> . xassignment
    (21) statement -> . COMMENT
    (22) declaration -> . type idlist SEMICOLON
    (27) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (28) assignmentlist -> . assignment COMMA assignmentlist
    (29) assignmentlist -> . assignment
    (30) assignment -> . var EQUALS address
    (31) assignment -> . var EQUALS var
    (32) assignment -> . pointer EQUALS expression
    (9) var -> . ID
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var

    RBRACE          reduce using rule 18 (statements -> .)
    COMMENT         shift and go to state 20
    INT             shift and go to state 2
    VOID            shift and go to state 3
    ID              shift and go to state 27
    TIMES           shift and go to state 25

    statements                     shift and go to state 31
    assignment                     shift and go to state 24
    xassignment                    shift and go to state 17
    statement                      shift and go to state 21
    declaration                    shift and go to state 26
    var                            shift and go to state 22
    assignmentlist                 shift and go to state 18
    type                           shift and go to state 23
    pointer                        shift and go to state 19

state 22

    (30) assignment -> var . EQUALS address
    (31) assignment -> var . EQUALS var

    EQUALS          shift and go to state 32


state 23

    (22) declaration -> type . idlist SEMICOLON
    (23) idlist -> . pointer COMMA idlist
    (24) idlist -> . ID COMMA idlist
    (25) idlist -> . ID
    (26) idlist -> . pointer
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var

    ID              shift and go to state 35
    TIMES           shift and go to state 25

    pointer                        shift and go to state 34
    idlist                         shift and go to state 33

state 24

    (28) assignmentlist -> assignment . COMMA assignmentlist
    (29) assignmentlist -> assignment .

    COMMA           shift and go to state 36
    SEMICOLON       reduce using rule 29 (assignmentlist -> assignment .)


state 25

    (11) pointer -> TIMES . pointer
    (12) pointer -> TIMES . address
    (13) pointer -> TIMES . var
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (9) var -> . ID

    TIMES           shift and go to state 25
    AMPERSAND       shift and go to state 37
    ID              shift and go to state 27

    var                            shift and go to state 39
    pointer                        shift and go to state 40
    address                        shift and go to state 38

state 26

    (19) statement -> declaration .

    COMMENT         reduce using rule 19 (statement -> declaration .)
    INT             reduce using rule 19 (statement -> declaration .)
    VOID            reduce using rule 19 (statement -> declaration .)
    ID              reduce using rule 19 (statement -> declaration .)
    TIMES           reduce using rule 19 (statement -> declaration .)
    RBRACE          reduce using rule 19 (statement -> declaration .)


state 27

    (9) var -> ID .

    PLUS            reduce using rule 9 (var -> ID .)
    MINUS           reduce using rule 9 (var -> ID .)
    TIMES           reduce using rule 9 (var -> ID .)
    DIVIDE          reduce using rule 9 (var -> ID .)
    COMMA           reduce using rule 9 (var -> ID .)
    SEMICOLON       reduce using rule 9 (var -> ID .)
    EQUALS          reduce using rule 9 (var -> ID .)


state 28

    (2) function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE .)


state 29

    (27) xassignment -> assignmentlist SEMICOLON .

    COMMENT         reduce using rule 27 (xassignment -> assignmentlist SEMICOLON .)
    INT             reduce using rule 27 (xassignment -> assignmentlist SEMICOLON .)
    VOID            reduce using rule 27 (xassignment -> assignmentlist SEMICOLON .)
    ID              reduce using rule 27 (xassignment -> assignmentlist SEMICOLON .)
    TIMES           reduce using rule 27 (xassignment -> assignmentlist SEMICOLON .)
    RBRACE          reduce using rule 27 (xassignment -> assignmentlist SEMICOLON .)


state 30

    (32) assignment -> pointer EQUALS . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . pointer
    (38) expression -> . address
    (39) expression -> . const
    (40) expression -> . var
    (41) expression -> . MINUS expression
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (10) const -> . NUMBER
    (9) var -> . ID

    MINUS           shift and go to state 47
    TIMES           shift and go to state 25
    AMPERSAND       shift and go to state 37
    NUMBER          shift and go to state 42
    ID              shift and go to state 27

    const                          shift and go to state 41
    expression                     shift and go to state 46
    var                            shift and go to state 45
    pointer                        shift and go to state 43
    address                        shift and go to state 44

state 31

    (17) statements -> statement statements .

    RBRACE          reduce using rule 17 (statements -> statement statements .)


state 32

    (30) assignment -> var EQUALS . address
    (31) assignment -> var EQUALS . var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (9) var -> . ID

    AMPERSAND       shift and go to state 37
    ID              shift and go to state 27

    var                            shift and go to state 49
    address                        shift and go to state 48

state 33

    (22) declaration -> type idlist . SEMICOLON

    SEMICOLON       shift and go to state 50


state 34

    (23) idlist -> pointer . COMMA idlist
    (26) idlist -> pointer .

    COMMA           shift and go to state 51
    SEMICOLON       reduce using rule 26 (idlist -> pointer .)


state 35

    (24) idlist -> ID . COMMA idlist
    (25) idlist -> ID .

    COMMA           shift and go to state 52
    SEMICOLON       reduce using rule 25 (idlist -> ID .)


state 36

    (28) assignmentlist -> assignment COMMA . assignmentlist
    (28) assignmentlist -> . assignment COMMA assignmentlist
    (29) assignmentlist -> . assignment
    (30) assignment -> . var EQUALS address
    (31) assignment -> . var EQUALS var
    (32) assignment -> . pointer EQUALS expression
    (9) var -> . ID
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var

    ID              shift and go to state 27
    TIMES           shift and go to state 25

    assignment                     shift and go to state 24
    var                            shift and go to state 22
    assignmentlist                 shift and go to state 53
    pointer                        shift and go to state 19

state 37

    (14) address -> AMPERSAND . pointer
    (15) address -> AMPERSAND . address
    (16) address -> AMPERSAND . var
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (9) var -> . ID

    TIMES           shift and go to state 25
    AMPERSAND       shift and go to state 37
    ID              shift and go to state 27

    var                            shift and go to state 55
    pointer                        shift and go to state 56
    address                        shift and go to state 54

state 38

    (12) pointer -> TIMES address .

    EQUALS          reduce using rule 12 (pointer -> TIMES address .)
    PLUS            reduce using rule 12 (pointer -> TIMES address .)
    MINUS           reduce using rule 12 (pointer -> TIMES address .)
    TIMES           reduce using rule 12 (pointer -> TIMES address .)
    DIVIDE          reduce using rule 12 (pointer -> TIMES address .)
    COMMA           reduce using rule 12 (pointer -> TIMES address .)
    SEMICOLON       reduce using rule 12 (pointer -> TIMES address .)


state 39

    (13) pointer -> TIMES var .

    EQUALS          reduce using rule 13 (pointer -> TIMES var .)
    PLUS            reduce using rule 13 (pointer -> TIMES var .)
    MINUS           reduce using rule 13 (pointer -> TIMES var .)
    TIMES           reduce using rule 13 (pointer -> TIMES var .)
    DIVIDE          reduce using rule 13 (pointer -> TIMES var .)
    COMMA           reduce using rule 13 (pointer -> TIMES var .)
    SEMICOLON       reduce using rule 13 (pointer -> TIMES var .)


state 40

    (11) pointer -> TIMES pointer .

    EQUALS          reduce using rule 11 (pointer -> TIMES pointer .)
    PLUS            reduce using rule 11 (pointer -> TIMES pointer .)
    MINUS           reduce using rule 11 (pointer -> TIMES pointer .)
    TIMES           reduce using rule 11 (pointer -> TIMES pointer .)
    DIVIDE          reduce using rule 11 (pointer -> TIMES pointer .)
    COMMA           reduce using rule 11 (pointer -> TIMES pointer .)
    SEMICOLON       reduce using rule 11 (pointer -> TIMES pointer .)


state 41

    (39) expression -> const .

    PLUS            reduce using rule 39 (expression -> const .)
    MINUS           reduce using rule 39 (expression -> const .)
    TIMES           reduce using rule 39 (expression -> const .)
    DIVIDE          reduce using rule 39 (expression -> const .)
    COMMA           reduce using rule 39 (expression -> const .)
    SEMICOLON       reduce using rule 39 (expression -> const .)


state 42

    (10) const -> NUMBER .

    PLUS            reduce using rule 10 (const -> NUMBER .)
    MINUS           reduce using rule 10 (const -> NUMBER .)
    TIMES           reduce using rule 10 (const -> NUMBER .)
    DIVIDE          reduce using rule 10 (const -> NUMBER .)
    COMMA           reduce using rule 10 (const -> NUMBER .)
    SEMICOLON       reduce using rule 10 (const -> NUMBER .)


state 43

    (37) expression -> pointer .

    PLUS            reduce using rule 37 (expression -> pointer .)
    MINUS           reduce using rule 37 (expression -> pointer .)
    TIMES           reduce using rule 37 (expression -> pointer .)
    DIVIDE          reduce using rule 37 (expression -> pointer .)
    COMMA           reduce using rule 37 (expression -> pointer .)
    SEMICOLON       reduce using rule 37 (expression -> pointer .)


state 44

    (38) expression -> address .

    PLUS            reduce using rule 38 (expression -> address .)
    MINUS           reduce using rule 38 (expression -> address .)
    TIMES           reduce using rule 38 (expression -> address .)
    DIVIDE          reduce using rule 38 (expression -> address .)
    COMMA           reduce using rule 38 (expression -> address .)
    SEMICOLON       reduce using rule 38 (expression -> address .)


state 45

    (40) expression -> var .

    PLUS            reduce using rule 40 (expression -> var .)
    MINUS           reduce using rule 40 (expression -> var .)
    TIMES           reduce using rule 40 (expression -> var .)
    DIVIDE          reduce using rule 40 (expression -> var .)
    COMMA           reduce using rule 40 (expression -> var .)
    SEMICOLON       reduce using rule 40 (expression -> var .)


state 46

    (32) assignment -> pointer EQUALS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 32 (assignment -> pointer EQUALS expression .)
    SEMICOLON       reduce using rule 32 (assignment -> pointer EQUALS expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57


state 47

    (41) expression -> MINUS . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . pointer
    (38) expression -> . address
    (39) expression -> . const
    (40) expression -> . var
    (41) expression -> . MINUS expression
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (10) const -> . NUMBER
    (9) var -> . ID

    MINUS           shift and go to state 47
    TIMES           shift and go to state 25
    AMPERSAND       shift and go to state 37
    NUMBER          shift and go to state 42
    ID              shift and go to state 27

    const                          shift and go to state 41
    pointer                        shift and go to state 43
    var                            shift and go to state 45
    expression                     shift and go to state 61
    address                        shift and go to state 44

state 48

    (30) assignment -> var EQUALS address .

    COMMA           reduce using rule 30 (assignment -> var EQUALS address .)
    SEMICOLON       reduce using rule 30 (assignment -> var EQUALS address .)


state 49

    (31) assignment -> var EQUALS var .

    COMMA           reduce using rule 31 (assignment -> var EQUALS var .)
    SEMICOLON       reduce using rule 31 (assignment -> var EQUALS var .)


state 50

    (22) declaration -> type idlist SEMICOLON .

    COMMENT         reduce using rule 22 (declaration -> type idlist SEMICOLON .)
    INT             reduce using rule 22 (declaration -> type idlist SEMICOLON .)
    VOID            reduce using rule 22 (declaration -> type idlist SEMICOLON .)
    ID              reduce using rule 22 (declaration -> type idlist SEMICOLON .)
    TIMES           reduce using rule 22 (declaration -> type idlist SEMICOLON .)
    RBRACE          reduce using rule 22 (declaration -> type idlist SEMICOLON .)


state 51

    (23) idlist -> pointer COMMA . idlist
    (23) idlist -> . pointer COMMA idlist
    (24) idlist -> . ID COMMA idlist
    (25) idlist -> . ID
    (26) idlist -> . pointer
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var

    ID              shift and go to state 35
    TIMES           shift and go to state 25

    pointer                        shift and go to state 34
    idlist                         shift and go to state 62

state 52

    (24) idlist -> ID COMMA . idlist
    (23) idlist -> . pointer COMMA idlist
    (24) idlist -> . ID COMMA idlist
    (25) idlist -> . ID
    (26) idlist -> . pointer
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var

    ID              shift and go to state 35
    TIMES           shift and go to state 25

    pointer                        shift and go to state 34
    idlist                         shift and go to state 63

state 53

    (28) assignmentlist -> assignment COMMA assignmentlist .

    SEMICOLON       reduce using rule 28 (assignmentlist -> assignment COMMA assignmentlist .)


state 54

    (15) address -> AMPERSAND address .

    PLUS            reduce using rule 15 (address -> AMPERSAND address .)
    MINUS           reduce using rule 15 (address -> AMPERSAND address .)
    TIMES           reduce using rule 15 (address -> AMPERSAND address .)
    DIVIDE          reduce using rule 15 (address -> AMPERSAND address .)
    COMMA           reduce using rule 15 (address -> AMPERSAND address .)
    SEMICOLON       reduce using rule 15 (address -> AMPERSAND address .)
    EQUALS          reduce using rule 15 (address -> AMPERSAND address .)


state 55

    (16) address -> AMPERSAND var .

    PLUS            reduce using rule 16 (address -> AMPERSAND var .)
    MINUS           reduce using rule 16 (address -> AMPERSAND var .)
    TIMES           reduce using rule 16 (address -> AMPERSAND var .)
    DIVIDE          reduce using rule 16 (address -> AMPERSAND var .)
    COMMA           reduce using rule 16 (address -> AMPERSAND var .)
    SEMICOLON       reduce using rule 16 (address -> AMPERSAND var .)
    EQUALS          reduce using rule 16 (address -> AMPERSAND var .)


state 56

    (14) address -> AMPERSAND pointer .

    PLUS            reduce using rule 14 (address -> AMPERSAND pointer .)
    MINUS           reduce using rule 14 (address -> AMPERSAND pointer .)
    TIMES           reduce using rule 14 (address -> AMPERSAND pointer .)
    DIVIDE          reduce using rule 14 (address -> AMPERSAND pointer .)
    COMMA           reduce using rule 14 (address -> AMPERSAND pointer .)
    SEMICOLON       reduce using rule 14 (address -> AMPERSAND pointer .)
    EQUALS          reduce using rule 14 (address -> AMPERSAND pointer .)


state 57

    (36) expression -> expression DIVIDE . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . pointer
    (38) expression -> . address
    (39) expression -> . const
    (40) expression -> . var
    (41) expression -> . MINUS expression
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (10) const -> . NUMBER
    (9) var -> . ID

    MINUS           shift and go to state 47
    TIMES           shift and go to state 25
    AMPERSAND       shift and go to state 37
    NUMBER          shift and go to state 42
    ID              shift and go to state 27

    const                          shift and go to state 41
    pointer                        shift and go to state 43
    var                            shift and go to state 45
    expression                     shift and go to state 64
    address                        shift and go to state 44

state 58

    (35) expression -> expression TIMES . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . pointer
    (38) expression -> . address
    (39) expression -> . const
    (40) expression -> . var
    (41) expression -> . MINUS expression
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (10) const -> . NUMBER
    (9) var -> . ID

    MINUS           shift and go to state 47
    TIMES           shift and go to state 25
    AMPERSAND       shift and go to state 37
    NUMBER          shift and go to state 42
    ID              shift and go to state 27

    const                          shift and go to state 41
    pointer                        shift and go to state 43
    var                            shift and go to state 45
    expression                     shift and go to state 65
    address                        shift and go to state 44

state 59

    (33) expression -> expression PLUS . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . pointer
    (38) expression -> . address
    (39) expression -> . const
    (40) expression -> . var
    (41) expression -> . MINUS expression
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (10) const -> . NUMBER
    (9) var -> . ID

    MINUS           shift and go to state 47
    TIMES           shift and go to state 25
    AMPERSAND       shift and go to state 37
    NUMBER          shift and go to state 42
    ID              shift and go to state 27

    const                          shift and go to state 41
    pointer                        shift and go to state 43
    var                            shift and go to state 45
    expression                     shift and go to state 66
    address                        shift and go to state 44

state 60

    (34) expression -> expression MINUS . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . pointer
    (38) expression -> . address
    (39) expression -> . const
    (40) expression -> . var
    (41) expression -> . MINUS expression
    (11) pointer -> . TIMES pointer
    (12) pointer -> . TIMES address
    (13) pointer -> . TIMES var
    (14) address -> . AMPERSAND pointer
    (15) address -> . AMPERSAND address
    (16) address -> . AMPERSAND var
    (10) const -> . NUMBER
    (9) var -> . ID

    MINUS           shift and go to state 47
    TIMES           shift and go to state 25
    AMPERSAND       shift and go to state 37
    NUMBER          shift and go to state 42
    ID              shift and go to state 27

    const                          shift and go to state 41
    pointer                        shift and go to state 43
    var                            shift and go to state 45
    expression                     shift and go to state 67
    address                        shift and go to state 44

state 61

    (41) expression -> MINUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 41 (expression -> MINUS expression .)
    MINUS           reduce using rule 41 (expression -> MINUS expression .)
    TIMES           reduce using rule 41 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 41 (expression -> MINUS expression .)
    COMMA           reduce using rule 41 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 41 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 57 ]


state 62

    (23) idlist -> pointer COMMA idlist .

    SEMICOLON       reduce using rule 23 (idlist -> pointer COMMA idlist .)


state 63

    (24) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 24 (idlist -> ID COMMA idlist .)


state 64

    (36) expression -> expression DIVIDE expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 36 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 36 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 36 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 36 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 36 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 57 ]


state 65

    (35) expression -> expression TIMES expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 35 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 35 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 35 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 35 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 35 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 57 ]


state 66

    (33) expression -> expression PLUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 33 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 33 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 33 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57

  ! TIMES           [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]


state 67

    (34) expression -> expression MINUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 34 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 34 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 34 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 57

  ! TIMES           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]

