Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> function
Rule 2     function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE
Rule 3     type -> INT
Rule 4     type -> VOID
Rule 5     var -> ID
Rule 6     const -> NUMBER
Rule 7     pointer -> TIMES pointer
Rule 8     pointer -> TIMES address
Rule 9     pointer -> TIMES var
Rule 10    address -> AMPERSAND pointer
Rule 11    address -> AMPERSAND address
Rule 12    address -> AMPERSAND var
Rule 13    statements -> statement statements
Rule 14    statements -> <empty>
Rule 15    statement -> declaration
Rule 16    statement -> xassignment
Rule 17    statement -> COMMENT
Rule 18    declaration -> type idlist SEMICOLON
Rule 19    idlist -> pointer COMMA idlist
Rule 20    idlist -> ID COMMA idlist
Rule 21    idlist -> ID
Rule 22    idlist -> pointer
Rule 23    xassignment -> assignmentlist SEMICOLON
Rule 24    assignmentlist -> assignment COMMA assignmentlist
Rule 25    assignmentlist -> assignment
Rule 26    assignment -> pointer EQUALS expression
Rule 27    assignment -> var EQUALS expression
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression TIMES expression
Rule 31    expression -> expression DIVIDE expression
Rule 32    expression -> pointer
Rule 33    expression -> address
Rule 34    expression -> const
Rule 35    expression -> var
Rule 36    expression -> LPAREN expression RPAREN
Rule 37    expression -> MINUS expression

Terminals, with rules where they appear

AMPERSAND            : 10 11 12
COMMA                : 19 20 24
COMMENT              : 17
DIVIDE               : 31
EQUALS               : 26 27
ID                   : 5 20 21
INT                  : 3
LBRACE               : 2
LPAREN               : 2 36
MAIN                 : 2
MINUS                : 29 37
NUMBER               : 6
PLUS                 : 28
RBRACE               : 2
RPAREN               : 2 36
SEMICOLON            : 18 23
TIMES                : 7 8 9 30
VOID                 : 2 4
error                : 

Nonterminals, with rules where they appear

address              : 8 11 33
assignment           : 24 25
assignmentlist       : 23 24
const                : 34
declaration          : 15
expression           : 26 27 28 28 29 29 30 30 31 31 36 37
function             : 1
idlist               : 18 19 20
pointer              : 7 10 19 22 26 32
start                : 0
statement            : 13
statements           : 2 13
type                 : 18
var                  : 9 12 27 35
xassignment          : 16

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . function
    (2) function -> . VOID MAIN LPAREN RPAREN LBRACE statements RBRACE

    VOID            shift and go to state 1

    start                          shift and go to state 3
    function                       shift and go to state 2

state 1

    (2) function -> VOID . MAIN LPAREN RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 4


state 2

    (1) start -> function .

    $end            reduce using rule 1 (start -> function .)


state 3

    (0) S' -> start .



state 4

    (2) function -> VOID MAIN . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 5


state 5

    (2) function -> VOID MAIN LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 6


state 6

    (2) function -> VOID MAIN LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 7


state 7

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE . statements RBRACE
    (13) statements -> . statement statements
    (14) statements -> .
    (15) statement -> . declaration
    (16) statement -> . xassignment
    (17) statement -> . COMMENT
    (18) declaration -> . type idlist SEMICOLON
    (23) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (24) assignmentlist -> . assignment COMMA assignmentlist
    (25) assignmentlist -> . assignment
    (26) assignment -> . pointer EQUALS expression
    (27) assignment -> . var EQUALS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    RBRACE          reduce using rule 14 (statements -> .)
    COMMENT         shift and go to state 16
    INT             shift and go to state 9
    VOID            shift and go to state 12
    TIMES           shift and go to state 21
    ID              shift and go to state 11

    assignment                     shift and go to state 13
    statements                     shift and go to state 8
    statement                      shift and go to state 14
    pointer                        shift and go to state 15
    declaration                    shift and go to state 17
    type                           shift and go to state 18
    var                            shift and go to state 19
    assignmentlist                 shift and go to state 20
    xassignment                    shift and go to state 10

state 8

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 22


state 9

    (3) type -> INT .

    ID              reduce using rule 3 (type -> INT .)
    TIMES           reduce using rule 3 (type -> INT .)


state 10

    (16) statement -> xassignment .

    COMMENT         reduce using rule 16 (statement -> xassignment .)
    INT             reduce using rule 16 (statement -> xassignment .)
    VOID            reduce using rule 16 (statement -> xassignment .)
    TIMES           reduce using rule 16 (statement -> xassignment .)
    ID              reduce using rule 16 (statement -> xassignment .)
    RBRACE          reduce using rule 16 (statement -> xassignment .)


state 11

    (5) var -> ID .

    PLUS            reduce using rule 5 (var -> ID .)
    MINUS           reduce using rule 5 (var -> ID .)
    TIMES           reduce using rule 5 (var -> ID .)
    DIVIDE          reduce using rule 5 (var -> ID .)
    COMMA           reduce using rule 5 (var -> ID .)
    SEMICOLON       reduce using rule 5 (var -> ID .)
    RPAREN          reduce using rule 5 (var -> ID .)
    EQUALS          reduce using rule 5 (var -> ID .)


state 12

    (4) type -> VOID .

    ID              reduce using rule 4 (type -> VOID .)
    TIMES           reduce using rule 4 (type -> VOID .)


state 13

    (24) assignmentlist -> assignment . COMMA assignmentlist
    (25) assignmentlist -> assignment .

    COMMA           shift and go to state 23
    SEMICOLON       reduce using rule 25 (assignmentlist -> assignment .)


state 14

    (13) statements -> statement . statements
    (13) statements -> . statement statements
    (14) statements -> .
    (15) statement -> . declaration
    (16) statement -> . xassignment
    (17) statement -> . COMMENT
    (18) declaration -> . type idlist SEMICOLON
    (23) xassignment -> . assignmentlist SEMICOLON
    (3) type -> . INT
    (4) type -> . VOID
    (24) assignmentlist -> . assignment COMMA assignmentlist
    (25) assignmentlist -> . assignment
    (26) assignment -> . pointer EQUALS expression
    (27) assignment -> . var EQUALS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    RBRACE          reduce using rule 14 (statements -> .)
    COMMENT         shift and go to state 16
    INT             shift and go to state 9
    VOID            shift and go to state 12
    TIMES           shift and go to state 21
    ID              shift and go to state 11

    assignment                     shift and go to state 13
    statements                     shift and go to state 24
    statement                      shift and go to state 14
    pointer                        shift and go to state 15
    declaration                    shift and go to state 17
    type                           shift and go to state 18
    var                            shift and go to state 19
    assignmentlist                 shift and go to state 20
    xassignment                    shift and go to state 10

state 15

    (26) assignment -> pointer . EQUALS expression

    EQUALS          shift and go to state 25


state 16

    (17) statement -> COMMENT .

    COMMENT         reduce using rule 17 (statement -> COMMENT .)
    INT             reduce using rule 17 (statement -> COMMENT .)
    VOID            reduce using rule 17 (statement -> COMMENT .)
    TIMES           reduce using rule 17 (statement -> COMMENT .)
    ID              reduce using rule 17 (statement -> COMMENT .)
    RBRACE          reduce using rule 17 (statement -> COMMENT .)


state 17

    (15) statement -> declaration .

    COMMENT         reduce using rule 15 (statement -> declaration .)
    INT             reduce using rule 15 (statement -> declaration .)
    VOID            reduce using rule 15 (statement -> declaration .)
    TIMES           reduce using rule 15 (statement -> declaration .)
    ID              reduce using rule 15 (statement -> declaration .)
    RBRACE          reduce using rule 15 (statement -> declaration .)


state 18

    (18) declaration -> type . idlist SEMICOLON
    (19) idlist -> . pointer COMMA idlist
    (20) idlist -> . ID COMMA idlist
    (21) idlist -> . ID
    (22) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 26
    TIMES           shift and go to state 21

    idlist                         shift and go to state 27
    pointer                        shift and go to state 28

state 19

    (27) assignment -> var . EQUALS expression

    EQUALS          shift and go to state 29


state 20

    (23) xassignment -> assignmentlist . SEMICOLON

    SEMICOLON       shift and go to state 30


state 21

    (7) pointer -> TIMES . pointer
    (8) pointer -> TIMES . address
    (9) pointer -> TIMES . var
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (5) var -> . ID

    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    ID              shift and go to state 11

    address                        shift and go to state 32
    pointer                        shift and go to state 34
    var                            shift and go to state 33

state 22

    (2) function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function -> VOID MAIN LPAREN RPAREN LBRACE statements RBRACE .)


state 23

    (24) assignmentlist -> assignment COMMA . assignmentlist
    (24) assignmentlist -> . assignment COMMA assignmentlist
    (25) assignmentlist -> . assignment
    (26) assignment -> . pointer EQUALS expression
    (27) assignment -> . var EQUALS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (5) var -> . ID

    TIMES           shift and go to state 21
    ID              shift and go to state 11

    assignment                     shift and go to state 13
    var                            shift and go to state 19
    assignmentlist                 shift and go to state 35
    pointer                        shift and go to state 15

state 24

    (13) statements -> statement statements .

    RBRACE          reduce using rule 13 (statements -> statement statements .)


state 25

    (26) assignment -> pointer EQUALS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . pointer
    (33) expression -> . address
    (34) expression -> . const
    (35) expression -> . var
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 39
    MINUS           shift and go to state 36
    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 37
    ID              shift and go to state 11

    var                            shift and go to state 40
    address                        shift and go to state 42
    pointer                        shift and go to state 38
    expression                     shift and go to state 41
    const                          shift and go to state 43

state 26

    (20) idlist -> ID . COMMA idlist
    (21) idlist -> ID .

    COMMA           shift and go to state 44
    SEMICOLON       reduce using rule 21 (idlist -> ID .)


state 27

    (18) declaration -> type idlist . SEMICOLON

    SEMICOLON       shift and go to state 45


state 28

    (19) idlist -> pointer . COMMA idlist
    (22) idlist -> pointer .

    COMMA           shift and go to state 46
    SEMICOLON       reduce using rule 22 (idlist -> pointer .)


state 29

    (27) assignment -> var EQUALS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . pointer
    (33) expression -> . address
    (34) expression -> . const
    (35) expression -> . var
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 39
    MINUS           shift and go to state 36
    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 37
    ID              shift and go to state 11

    const                          shift and go to state 43
    address                        shift and go to state 42
    var                            shift and go to state 40
    expression                     shift and go to state 47
    pointer                        shift and go to state 38

state 30

    (23) xassignment -> assignmentlist SEMICOLON .

    COMMENT         reduce using rule 23 (xassignment -> assignmentlist SEMICOLON .)
    INT             reduce using rule 23 (xassignment -> assignmentlist SEMICOLON .)
    VOID            reduce using rule 23 (xassignment -> assignmentlist SEMICOLON .)
    TIMES           reduce using rule 23 (xassignment -> assignmentlist SEMICOLON .)
    ID              reduce using rule 23 (xassignment -> assignmentlist SEMICOLON .)
    RBRACE          reduce using rule 23 (xassignment -> assignmentlist SEMICOLON .)


state 31

    (10) address -> AMPERSAND . pointer
    (11) address -> AMPERSAND . address
    (12) address -> AMPERSAND . var
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (5) var -> . ID

    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    ID              shift and go to state 11

    address                        shift and go to state 49
    pointer                        shift and go to state 50
    var                            shift and go to state 48

state 32

    (8) pointer -> TIMES address .

    RPAREN          reduce using rule 8 (pointer -> TIMES address .)
    PLUS            reduce using rule 8 (pointer -> TIMES address .)
    MINUS           reduce using rule 8 (pointer -> TIMES address .)
    TIMES           reduce using rule 8 (pointer -> TIMES address .)
    DIVIDE          reduce using rule 8 (pointer -> TIMES address .)
    COMMA           reduce using rule 8 (pointer -> TIMES address .)
    SEMICOLON       reduce using rule 8 (pointer -> TIMES address .)
    EQUALS          reduce using rule 8 (pointer -> TIMES address .)


state 33

    (9) pointer -> TIMES var .

    RPAREN          reduce using rule 9 (pointer -> TIMES var .)
    PLUS            reduce using rule 9 (pointer -> TIMES var .)
    MINUS           reduce using rule 9 (pointer -> TIMES var .)
    TIMES           reduce using rule 9 (pointer -> TIMES var .)
    DIVIDE          reduce using rule 9 (pointer -> TIMES var .)
    COMMA           reduce using rule 9 (pointer -> TIMES var .)
    SEMICOLON       reduce using rule 9 (pointer -> TIMES var .)
    EQUALS          reduce using rule 9 (pointer -> TIMES var .)


state 34

    (7) pointer -> TIMES pointer .

    RPAREN          reduce using rule 7 (pointer -> TIMES pointer .)
    PLUS            reduce using rule 7 (pointer -> TIMES pointer .)
    MINUS           reduce using rule 7 (pointer -> TIMES pointer .)
    TIMES           reduce using rule 7 (pointer -> TIMES pointer .)
    DIVIDE          reduce using rule 7 (pointer -> TIMES pointer .)
    COMMA           reduce using rule 7 (pointer -> TIMES pointer .)
    SEMICOLON       reduce using rule 7 (pointer -> TIMES pointer .)
    EQUALS          reduce using rule 7 (pointer -> TIMES pointer .)


state 35

    (24) assignmentlist -> assignment COMMA assignmentlist .

    SEMICOLON       reduce using rule 24 (assignmentlist -> assignment COMMA assignmentlist .)


state 36

    (37) expression -> MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . pointer
    (33) expression -> . address
    (34) expression -> . const
    (35) expression -> . var
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 39
    MINUS           shift and go to state 36
    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 37
    ID              shift and go to state 11

    var                            shift and go to state 40
    address                        shift and go to state 42
    pointer                        shift and go to state 38
    expression                     shift and go to state 51
    const                          shift and go to state 43

state 37

    (6) const -> NUMBER .

    PLUS            reduce using rule 6 (const -> NUMBER .)
    MINUS           reduce using rule 6 (const -> NUMBER .)
    TIMES           reduce using rule 6 (const -> NUMBER .)
    DIVIDE          reduce using rule 6 (const -> NUMBER .)
    COMMA           reduce using rule 6 (const -> NUMBER .)
    SEMICOLON       reduce using rule 6 (const -> NUMBER .)
    RPAREN          reduce using rule 6 (const -> NUMBER .)


state 38

    (32) expression -> pointer .

    PLUS            reduce using rule 32 (expression -> pointer .)
    MINUS           reduce using rule 32 (expression -> pointer .)
    TIMES           reduce using rule 32 (expression -> pointer .)
    DIVIDE          reduce using rule 32 (expression -> pointer .)
    COMMA           reduce using rule 32 (expression -> pointer .)
    SEMICOLON       reduce using rule 32 (expression -> pointer .)
    RPAREN          reduce using rule 32 (expression -> pointer .)


state 39

    (36) expression -> LPAREN . expression RPAREN
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . pointer
    (33) expression -> . address
    (34) expression -> . const
    (35) expression -> . var
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 39
    MINUS           shift and go to state 36
    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 37
    ID              shift and go to state 11

    var                            shift and go to state 40
    address                        shift and go to state 42
    pointer                        shift and go to state 38
    expression                     shift and go to state 52
    const                          shift and go to state 43

state 40

    (35) expression -> var .

    PLUS            reduce using rule 35 (expression -> var .)
    MINUS           reduce using rule 35 (expression -> var .)
    TIMES           reduce using rule 35 (expression -> var .)
    DIVIDE          reduce using rule 35 (expression -> var .)
    COMMA           reduce using rule 35 (expression -> var .)
    SEMICOLON       reduce using rule 35 (expression -> var .)
    RPAREN          reduce using rule 35 (expression -> var .)


state 41

    (26) assignment -> pointer EQUALS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 26 (assignment -> pointer EQUALS expression .)
    SEMICOLON       reduce using rule 26 (assignment -> pointer EQUALS expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 53
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 54


state 42

    (33) expression -> address .

    PLUS            reduce using rule 33 (expression -> address .)
    MINUS           reduce using rule 33 (expression -> address .)
    TIMES           reduce using rule 33 (expression -> address .)
    DIVIDE          reduce using rule 33 (expression -> address .)
    COMMA           reduce using rule 33 (expression -> address .)
    SEMICOLON       reduce using rule 33 (expression -> address .)
    RPAREN          reduce using rule 33 (expression -> address .)


state 43

    (34) expression -> const .

    PLUS            reduce using rule 34 (expression -> const .)
    MINUS           reduce using rule 34 (expression -> const .)
    TIMES           reduce using rule 34 (expression -> const .)
    DIVIDE          reduce using rule 34 (expression -> const .)
    COMMA           reduce using rule 34 (expression -> const .)
    SEMICOLON       reduce using rule 34 (expression -> const .)
    RPAREN          reduce using rule 34 (expression -> const .)


state 44

    (20) idlist -> ID COMMA . idlist
    (19) idlist -> . pointer COMMA idlist
    (20) idlist -> . ID COMMA idlist
    (21) idlist -> . ID
    (22) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 26
    TIMES           shift and go to state 21

    idlist                         shift and go to state 57
    pointer                        shift and go to state 28

state 45

    (18) declaration -> type idlist SEMICOLON .

    COMMENT         reduce using rule 18 (declaration -> type idlist SEMICOLON .)
    INT             reduce using rule 18 (declaration -> type idlist SEMICOLON .)
    VOID            reduce using rule 18 (declaration -> type idlist SEMICOLON .)
    TIMES           reduce using rule 18 (declaration -> type idlist SEMICOLON .)
    ID              reduce using rule 18 (declaration -> type idlist SEMICOLON .)
    RBRACE          reduce using rule 18 (declaration -> type idlist SEMICOLON .)


state 46

    (19) idlist -> pointer COMMA . idlist
    (19) idlist -> . pointer COMMA idlist
    (20) idlist -> . ID COMMA idlist
    (21) idlist -> . ID
    (22) idlist -> . pointer
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var

    ID              shift and go to state 26
    TIMES           shift and go to state 21

    pointer                        shift and go to state 28
    idlist                         shift and go to state 58

state 47

    (27) assignment -> var EQUALS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    COMMA           reduce using rule 27 (assignment -> var EQUALS expression .)
    SEMICOLON       reduce using rule 27 (assignment -> var EQUALS expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 53
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 54


state 48

    (12) address -> AMPERSAND var .

    EQUALS          reduce using rule 12 (address -> AMPERSAND var .)
    COMMA           reduce using rule 12 (address -> AMPERSAND var .)
    SEMICOLON       reduce using rule 12 (address -> AMPERSAND var .)
    PLUS            reduce using rule 12 (address -> AMPERSAND var .)
    MINUS           reduce using rule 12 (address -> AMPERSAND var .)
    TIMES           reduce using rule 12 (address -> AMPERSAND var .)
    DIVIDE          reduce using rule 12 (address -> AMPERSAND var .)
    RPAREN          reduce using rule 12 (address -> AMPERSAND var .)


state 49

    (11) address -> AMPERSAND address .

    EQUALS          reduce using rule 11 (address -> AMPERSAND address .)
    COMMA           reduce using rule 11 (address -> AMPERSAND address .)
    SEMICOLON       reduce using rule 11 (address -> AMPERSAND address .)
    PLUS            reduce using rule 11 (address -> AMPERSAND address .)
    MINUS           reduce using rule 11 (address -> AMPERSAND address .)
    TIMES           reduce using rule 11 (address -> AMPERSAND address .)
    DIVIDE          reduce using rule 11 (address -> AMPERSAND address .)
    RPAREN          reduce using rule 11 (address -> AMPERSAND address .)


state 50

    (10) address -> AMPERSAND pointer .

    EQUALS          reduce using rule 10 (address -> AMPERSAND pointer .)
    COMMA           reduce using rule 10 (address -> AMPERSAND pointer .)
    SEMICOLON       reduce using rule 10 (address -> AMPERSAND pointer .)
    PLUS            reduce using rule 10 (address -> AMPERSAND pointer .)
    MINUS           reduce using rule 10 (address -> AMPERSAND pointer .)
    TIMES           reduce using rule 10 (address -> AMPERSAND pointer .)
    DIVIDE          reduce using rule 10 (address -> AMPERSAND pointer .)
    RPAREN          reduce using rule 10 (address -> AMPERSAND pointer .)


state 51

    (37) expression -> MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 37 (expression -> MINUS expression .)
    MINUS           reduce using rule 37 (expression -> MINUS expression .)
    TIMES           reduce using rule 37 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 37 (expression -> MINUS expression .)
    COMMA           reduce using rule 37 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 37 (expression -> MINUS expression .)
    RPAREN          reduce using rule 37 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 52

    (36) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 55
    MINUS           shift and go to state 53
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 54


state 53

    (29) expression -> expression MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . pointer
    (33) expression -> . address
    (34) expression -> . const
    (35) expression -> . var
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 39
    MINUS           shift and go to state 36
    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 37
    ID              shift and go to state 11

    var                            shift and go to state 40
    address                        shift and go to state 42
    pointer                        shift and go to state 38
    expression                     shift and go to state 60
    const                          shift and go to state 43

state 54

    (31) expression -> expression DIVIDE . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . pointer
    (33) expression -> . address
    (34) expression -> . const
    (35) expression -> . var
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 39
    MINUS           shift and go to state 36
    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 37
    ID              shift and go to state 11

    var                            shift and go to state 40
    address                        shift and go to state 42
    pointer                        shift and go to state 38
    expression                     shift and go to state 61
    const                          shift and go to state 43

state 55

    (28) expression -> expression PLUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . pointer
    (33) expression -> . address
    (34) expression -> . const
    (35) expression -> . var
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 39
    MINUS           shift and go to state 36
    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 37
    ID              shift and go to state 11

    var                            shift and go to state 40
    address                        shift and go to state 42
    pointer                        shift and go to state 38
    expression                     shift and go to state 62
    const                          shift and go to state 43

state 56

    (30) expression -> expression TIMES . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . pointer
    (33) expression -> . address
    (34) expression -> . const
    (35) expression -> . var
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . MINUS expression
    (7) pointer -> . TIMES pointer
    (8) pointer -> . TIMES address
    (9) pointer -> . TIMES var
    (10) address -> . AMPERSAND pointer
    (11) address -> . AMPERSAND address
    (12) address -> . AMPERSAND var
    (6) const -> . NUMBER
    (5) var -> . ID

    LPAREN          shift and go to state 39
    MINUS           shift and go to state 36
    TIMES           shift and go to state 21
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 37
    ID              shift and go to state 11

    var                            shift and go to state 40
    address                        shift and go to state 42
    pointer                        shift and go to state 38
    expression                     shift and go to state 63
    const                          shift and go to state 43

state 57

    (20) idlist -> ID COMMA idlist .

    SEMICOLON       reduce using rule 20 (idlist -> ID COMMA idlist .)


state 58

    (19) idlist -> pointer COMMA idlist .

    SEMICOLON       reduce using rule 19 (idlist -> pointer COMMA idlist .)


state 59

    (36) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 36 (expression -> LPAREN expression RPAREN .)


state 60

    (29) expression -> expression MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 29 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 54

  ! TIMES           [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 53 ]


state 61

    (31) expression -> expression DIVIDE expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 31 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 31 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 31 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 31 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 31 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 31 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 62

    (28) expression -> expression PLUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 28 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 54

  ! TIMES           [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 53 ]


state 63

    (30) expression -> expression TIMES expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 30 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 30 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 30 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 30 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 30 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 30 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 54 ]

