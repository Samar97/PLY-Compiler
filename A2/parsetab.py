
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightAMPERSANDSTARID NUMBER COMMENT LPAREN RPAREN LBRACE RBRACE SEMICOLON AMPERSAND COMMA PLUS MINUS TIMES DIVIDE EQUALS INT VOID MAIN\n\tstart : function\n\t\n\tfunction : type MAIN LPAREN args RPAREN LBRACE statements RBRACE\n\ttype : INT\n\t\t| VOID\t\t\n\t\n\t\targs : arg COMMA args\n\t\t\t| arg\n\t\t\t| \n\t\targ : type ID\n\t\n\tpointer : TIMES pointer %prec STAR\n\t\t\t| TIMES ID %prec STAR\n\t\t\t| TIMES address %prec STAR\n\t\n\taddress : AMPERSAND ID\n\t\t\t| AMPERSAND pointer\n\t\t\t| AMPERSAND address\n\t\n\tstatements :  statement statements\n\t\t\t\t| \n\tstatement : declaration\n\t\t\t| xassignment\n\t\t\t| COMMENT\n\t\n\tdeclaration : type idlist SEMICOLON\n\t\n\tidlist : pointer COMMA idlist \n\t\t\t| ID COMMA idlist\n\t\t\t| ID\n\t\t\t| pointer\n\t\n\txassignment : assignmentlist SEMICOLON\n\t\n\tassignmentlist : assignment COMMA assignmentlist \n\t\t\t\t\t| assignment\n\t\n\tassignment : ID EQUALS address\n\t\t\t\t| ID EQUALS ID\n\t\t\t\t| pointer EQUALS expression\n\t\n\texpression : expression PLUS expression\n\t\t\t\t| expression MINUS expression\n\t\t\t\t| expression TIMES expression\n\t\t\t\t| expression DIVIDE expression\n\t\t\t\t| pointer\n\t\t\t\t| address\n\t\t\t\t| NUMBER\n\t\t\t\t| ID\n\t\n\texpression : MINUS expression %prec UMINUS\n\t'
    
_lr_action_items = {'$end':([3,5,27,],[-1,0,-2,]),'INT':([0,7,11,15,18,21,22,26,28,43,],[1,1,1,1,-18,-19,1,-17,-25,-20,]),'COMMA':([8,13,19,30,31,34,35,37,44,45,46,47,48,49,50,51,53,54,61,62,63,64,65,],[11,-8,29,41,42,-11,-10,-9,-14,-12,-13,-36,-35,-30,-38,-37,-28,-29,-39,-34,-33,-32,-31,]),'VOID':([0,7,11,15,18,21,22,26,28,43,],[2,2,2,2,-18,-19,2,-17,-25,-20,]),'EQUALS':([24,25,34,35,37,44,45,46,],[38,39,-11,-10,-9,-14,-12,-13,]),'LBRACE':([12,],[15,]),'TIMES':([1,2,15,18,20,21,22,23,26,28,29,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,],[-3,-4,23,-18,23,-19,23,23,-17,-25,23,-11,-10,23,-9,23,23,23,-20,-14,-12,-13,-36,-35,58,-38,-37,23,23,23,23,23,-39,-34,-33,58,58,]),'ID':([1,2,10,15,18,20,21,22,23,26,28,29,36,38,39,41,42,43,52,57,58,59,60,],[-3,-4,13,25,-18,31,-19,25,35,-17,-25,25,45,50,54,31,31,-20,50,50,50,50,50,]),'SEMICOLON':([17,19,30,31,32,34,35,37,40,44,45,46,47,48,49,50,51,53,54,55,56,61,62,63,64,65,],[28,-27,-24,-23,43,-11,-10,-9,-26,-14,-12,-13,-36,-35,-30,-38,-37,-28,-29,-21,-22,-39,-34,-33,-32,-31,]),'LPAREN':([6,],[7,]),'NUMBER':([38,52,57,58,59,60,],[51,51,51,51,51,51,]),'MINUS':([34,35,37,38,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,],[-11,-10,-9,52,-14,-12,-13,-36,-35,59,-38,-37,52,52,52,52,52,-39,-34,-33,-32,-31,]),'RBRACE':([15,16,18,21,22,26,28,33,43,],[-16,27,-18,-19,-16,-17,-25,-15,-20,]),'DIVIDE':([34,35,37,44,45,46,47,48,49,50,51,61,62,63,64,65,],[-11,-10,-9,-14,-12,-13,-36,-35,57,-38,-37,-39,-34,-33,57,57,]),'AMPERSAND':([23,36,38,39,52,57,58,59,60,],[36,36,36,36,36,36,36,36,36,]),'RPAREN':([7,8,9,11,13,14,],[-7,-6,12,-7,-8,-5,]),'COMMENT':([15,18,21,22,26,28,43,],[21,-18,-19,21,-17,-25,-20,]),'PLUS':([34,35,37,44,45,46,47,48,49,50,51,61,62,63,64,65,],[-11,-10,-9,-14,-12,-13,-36,-35,60,-38,-37,-39,-34,-33,-32,-31,]),'MAIN':([1,2,4,],[-3,-4,6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([15,22,],[16,33,]),'statement':([15,22,],[22,22,]),'args':([7,11,],[9,14,]),'idlist':([20,41,42,],[32,55,56,]),'address':([23,36,38,39,52,57,58,59,60,],[34,44,47,53,47,47,47,47,47,]),'pointer':([15,20,22,23,29,36,38,41,42,52,57,58,59,60,],[24,30,24,37,24,46,48,30,30,48,48,48,48,48,]),'declaration':([15,22,],[26,26,]),'assignmentlist':([15,22,29,],[17,17,40,]),'xassignment':([15,22,],[18,18,]),'expression':([38,52,57,58,59,60,],[49,61,62,63,64,65,]),'function':([0,],[3,]),'assignment':([15,22,29,],[19,19,19,]),'arg':([7,11,],[8,8,]),'type':([0,7,11,15,22,],[4,10,10,20,20,]),'start':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> function','start',1,'p_start','assign2.py',84),
  ('function -> type MAIN LPAREN args RPAREN LBRACE statements RBRACE','function',8,'p_function','assign2.py',91),
  ('type -> INT','type',1,'p_function','assign2.py',92),
  ('type -> VOID','type',1,'p_function','assign2.py',93),
  ('args -> arg COMMA args','args',3,'p_args','assign2.py',99),
  ('args -> arg','args',1,'p_args','assign2.py',100),
  ('args -> <empty>','args',0,'p_args','assign2.py',101),
  ('arg -> type ID','arg',2,'p_args','assign2.py',102),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','assign2.py',109),
  ('pointer -> TIMES ID','pointer',2,'p_pointer','assign2.py',110),
  ('pointer -> TIMES address','pointer',2,'p_pointer','assign2.py',111),
  ('address -> AMPERSAND ID','address',2,'p_address','assign2.py',117),
  ('address -> AMPERSAND pointer','address',2,'p_address','assign2.py',118),
  ('address -> AMPERSAND address','address',2,'p_address','assign2.py',119),
  ('statements -> statement statements','statements',2,'p_statements','assign2.py',125),
  ('statements -> <empty>','statements',0,'p_statements','assign2.py',126),
  ('statement -> declaration','statement',1,'p_statements','assign2.py',127),
  ('statement -> xassignment','statement',1,'p_statements','assign2.py',128),
  ('statement -> COMMENT','statement',1,'p_statements','assign2.py',129),
  ('declaration -> type idlist SEMICOLON','declaration',3,'p_declaration','assign2.py',135),
  ('idlist -> pointer COMMA idlist','idlist',3,'p_idlist','assign2.py',141),
  ('idlist -> ID COMMA idlist','idlist',3,'p_idlist','assign2.py',142),
  ('idlist -> ID','idlist',1,'p_idlist','assign2.py',143),
  ('idlist -> pointer','idlist',1,'p_idlist','assign2.py',144),
  ('xassignment -> assignmentlist SEMICOLON','xassignment',2,'p_xassignment','assign2.py',150),
  ('assignmentlist -> assignment COMMA assignmentlist','assignmentlist',3,'p_assignmentlist','assign2.py',156),
  ('assignmentlist -> assignment','assignmentlist',1,'p_assignmentlist','assign2.py',157),
  ('assignment -> ID EQUALS address','assignment',3,'p_assignment','assign2.py',163),
  ('assignment -> ID EQUALS ID','assignment',3,'p_assignment','assign2.py',164),
  ('assignment -> pointer EQUALS expression','assignment',3,'p_assignment','assign2.py',165),
  ('expression -> expression PLUS expression','expression',3,'p_expression','assign2.py',171),
  ('expression -> expression MINUS expression','expression',3,'p_expression','assign2.py',172),
  ('expression -> expression TIMES expression','expression',3,'p_expression','assign2.py',173),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','assign2.py',174),
  ('expression -> pointer','expression',1,'p_expression','assign2.py',175),
  ('expression -> address','expression',1,'p_expression','assign2.py',176),
  ('expression -> NUMBER','expression',1,'p_expression','assign2.py',177),
  ('expression -> ID','expression',1,'p_expression','assign2.py',178),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','assign2.py',184),
]
